{"version":3,"sources":["pages/main/MainSlice.ts","utils/LocalizationUtil.ts","pages/mahjong/Mahjong.model.ts","localization/DisplayStrings.ts","pages/mahjong/overview/MahjongOverview.styles.ts","utils/StorageUtil.ts","pages/mahjong/overview/MahjongOverviewSlice.ts","pages/mahjong/userPanel/SelectUserPanel.styles.ts","pages/mahjong/userPanel/SelectUserPanel.tsx","pages/mahjong/details/MahjongDetails.styles.ts","pages/mahjong/scorePanel/ScorePanel.styles.ts","pages/mahjong/MahjongDisplay.ts","pages/mahjong/scorePanel/ScorePanel.tsx","pages/mahjong/details/MahjongDetails.tsx","pages/mahjong/overview/MahjongOverview.tsx","pages/main/Main.tsx","app/store.ts","App.tsx","serviceWorker.ts","index.tsx","images/MahjongGreenDragon.jpg","images/MahjongEast.jpg","images/MahjongBamboo6.jpg","images/MahjongBambooChow.jpg","images/MahjongCircle5.jpg","images/MahjongCircleChow.jpg","images/MahjongCharacter4.jpg","images/MahjongCharacterChow.jpg","images/MahjongSeason1.jpg","images/MahjongSeason2.jpg","images/MahjongSeason3.jpg","images/MahjongSeason4.jpg","images/MahjongFlower2.jpg"],"names":["Page","initialState","page","MahJong","mainSlice","createSlice","name","reducers","navigate","state","action","payload","actions","selectPage","main","locale","MahJongTileTypes","MahJongSetTypes","t","loc","CloseButton","da","us","OkButton","AddButton","OnToggle","OffToggle","EditPlayersButton","ClearButton","DeleteButton","CurrentScore","points","UnknownLabel","mahjongOverviewClassNames","memoizeFunction","mergeStyleSets","overflow","list","margin","header","marginLeft","marginRight","winnerIcon","fontSize","height","width","color","winnerIcon2","eastIcon","createUser","id","uuidv4","createGame","score","createScore","playerId","gameScore","sets","getScore","game","player","find","getScoreById","saveData","data","isSupported","localStorage","setItem","JSON","stringify","e","itemBackup","getItem","removeItem","players","games","isPlaying","currentPlayers","currentGame","overviewSlice","loadFailed","loadSuccess","setUsers","updateGameUsers","addUser","push","length","deleteUser","filter","user","newGame","clearGame","forEach","isWinner","isEast","clearAll","updateScore","newScore","found","otherScore","without","winnerFound","scoreToPoints","scoreToCalculate","sumBy","difference","updateCalculatedScore","updateGameScore","cancelGame","saveGame","uniqBy","map","index","set","tileType","Flower","setType","Pair","Chow","Poong","Kong","Single","Dragon","Wind","ownWind","sub","oneOrNine","inHand","honorFactor","some","containDragonsOrWinds","containBamboo","containCircle","containCharacter","Bamboo","Circle","Character","load","dispatch","parse","loadData","selectPlayers","mahjongOverview","selectCurrentGame","selectCurrentPlayers","selectUserPanelClassNames","wrapper","display","alignItems","SelectUserPanel","props","classNames","classNamesFunction","styles","footer","root","combobox","firstRoot","flexGrow","flexShrink","firstContainer","container","isOpen","onSave","onDelete","onAdd","allPlayers","React","useState","selectedPlayers","setSelectedPlayers","newPlayerName","setNewPlayerName","userToDelete","setUserToDelete","useEffect","selected","i","onSaveClicked","isEmpty","options","key","text","filteredOptions","filtered","option","allComboboxes","ComboBox","aria-label","selectedKey","autoComplete","onChange","selectedIndex","event","renderComboBox","onNameChange","newValue","onAddName","onDeleteUserChange","onDeleteUserClicked","Panel","isLightDismiss","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","isFooterAtBottom","className","TextField","label","value","IconButton","iconProps","iconName","title","ariaLabel","disabled","mahjongDetailsClassNames","content","listItem","listDescription","padding","displayTileType","tile","imageTileType","MahJongGreenDragon","MahJongEast","MahJongBamboo6","MahJongCircle5","MahJongCharacter4","MahJongSeason1","MahJongSeason2","MahJongSeason3","MahJongFlower2","MahJongSeason4","imageSet","item","getFlowerImageSet","image","MahJongBambooChow","MahJongCircleChow","MahJongCharacterChow","imageChowType","getOtherImageSet","displaySetType","ScorePanel","choiceGroup","choiceFieldWrapper","backgroundColor","onClose","onCancel","setSetType","setTileType","setInHand","setOneOrNine","setOwnWind","getTileOption","toString","imageSrc","selectedImageSrc","imageSize","imageAlt","getSetOption","isInHandVisible","isOneOrNineVisible","isOwnWindVisible","Stack","tokens","childrenGap","ChoiceGroup","ev","parseInt","isChow","getTileOptions","getSetOptions","Toggle","checked","inlineLabel","onText","offText","MahjongDetails","commandBar","dashboard","listButton","marginTop","float","onNavigateBack","useSelector","undefined","userScore","setUserScore","showScorePanel","setShowScorePanel","initialScore","useDispatch","onshowScorePanel","items","CommandBar","tempScore","setWinner","List","onRenderCell","Image","src","alt","getImage","removeSetClicked","MahjongOverview","maxWidth","flexContainer","justifyContent","refreshCount","setRefreshCount","isPlayerSelectOpen","setIsPlayerSelectOpen","currentPlayer","setCurrentPlayer","openPlayer","Main","subMenuProps","version","currentScore","winner","FontIcon","east","CompoundButton","Persona","secondaryText","tertiaryText","optionalText","size","PersonaSize","size72","MainPage","Nav","groups","links","url","target","store","configureStore","reducer","mainReducer","overviewReducer","myTheme","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","App","initializeIcons","StrictMode","ThemeProvider","theme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.4a89cd35.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\n\r\nexport enum Page {\r\n  Main,\r\n  MahJong,\r\n}\r\n\r\ninterface MainState {\r\n  page: Page;\r\n}\r\n\r\nconst initialState: MainState = {\r\n  page: Page.MahJong,\r\n};\r\n\r\nexport const mainSlice = createSlice({\r\n  name: \"main\",\r\n  initialState,\r\n  reducers: {\r\n    navigate: (state, action: PayloadAction<Page>) => {\r\n      state.page = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { navigate } = mainSlice.actions;\r\n\r\nexport const selectPage = (state: RootState) => state.main.page;\r\n\r\nexport default mainSlice.reducer;\r\n","type supportedLocale = 'da' | 'us';\r\n\r\nlet locale: supportedLocale = 'da';\r\nexport function setLocale(value: supportedLocale) {\r\n    locale = value;\r\n}\r\n\r\n// export function getLocale(): supportedLocale {\r\n//     return locale;\r\n// }\r\n\r\nexport const t = (loc: { [key: string]: string }) => {\r\n    if (loc && loc[locale]) {\r\n        return loc[locale];\r\n    }\r\n\r\n    return loc['da'] || loc['us'] || '';\r\n};\r\n","// import uuid from \"uuid\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { find } from \"lodash\";\r\n\r\nexport interface IMahJongUser {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IMahJongScore {\r\n  gameScore: number;\r\n  points: number;\r\n  sets: IMahJongSet[];\r\n  isEast?: boolean;\r\n  isWinner?: boolean;\r\n  playerId: string;\r\n}\r\n\r\nexport enum MahJongTileTypes {\r\n  Dragon,\r\n  Wind,\r\n  Bamboo,\r\n  Circle,\r\n  Character,\r\n  Flower,\r\n}\r\n\r\nexport enum MahJongSetTypes {\r\n  Chow,\r\n  Poong,\r\n  Kong,\r\n  Pair,\r\n  Single,\r\n}\r\n\r\nexport interface IMahJongSet {\r\n  tileType: MahJongTileTypes;\r\n  setType: MahJongSetTypes;\r\n  inHand?: boolean;\r\n  oneOrNine?: boolean;\r\n  ownWind?: boolean;\r\n}\r\n\r\nexport interface IMahJongGame {\r\n  id: string;\r\n  score: IMahJongScore[];\r\n}\r\n\r\nexport function createUser(name: string): IMahJongUser {\r\n  return { id: uuidv4(), name };\r\n}\r\n\r\nexport function createGame(): IMahJongGame {\r\n  return { id: uuidv4(), score: [] };\r\n}\r\n\r\nexport function createScore(playerId: string): IMahJongScore {\r\n  return {\r\n    gameScore: 0,\r\n    points: 0,\r\n    sets: [],\r\n    playerId,\r\n  };\r\n}\r\n\r\nexport function getScore(\r\n  game: IMahJongGame,\r\n  player: IMahJongUser\r\n): IMahJongScore {\r\n  return getScoreById(game, player.id) || createScore(player.id);\r\n}\r\n\r\nfunction getScoreById(\r\n  game: IMahJongGame,\r\n  id?: string\r\n): IMahJongScore | undefined {\r\n  return find(\r\n    game.score,\r\n    (score: IMahJongScore): boolean => score.playerId === id\r\n  );\r\n}\r\n","import { t } from \"../utils/LocalizationUtil\";\r\n\r\nexport const MahJongTitle = () => t({ da: \"MahJong\" });\r\nexport const MahJongHeader = () =>\r\n  t({ da: \"MahJong lommeregner\", us: \"MahJong calculator\" });\r\nexport const HomeButton = () => t({ da: \"Hjem\", us: \"Home\" });\r\nexport const CloseButton = () => t({ da: \"Luk\", us: \"Close\" });\r\nexport const CancelButton = () => t({ da: \"Afbryd\", us: \"Cancel\" });\r\nexport const BackButton = () => t({ da: \"Tilbage\", us: \"Back\" });\r\nexport const SaveButton = () => t({ da: \"Gem\", us: \"Save\" });\r\nexport const OkButton = () => t({ da: \"Ok\" });\r\nexport const AddButton = () => t({ da: \"Tilføj\", us: \"Add\" });\r\nexport const WinnerToggleLabel = () =>\r\n  t({ da: \"Vandt du?\", us: \"Did you win?\" });\r\nexport const EastToggleLabel = () =>\r\n  t({ da: \"Er du øst?\", us: \"Are you east?\" });\r\nexport const OnToggle = () => t({ da: \"Jeps\", us: \"Yes\" });\r\nexport const OffToggle = () => t({ da: \"Nope\", us: \"No way\" });\r\nexport const EditPlayersButton = () =>\r\n  t({ da: \"Vælg spillere\", us: \"Choose players\" });\r\nexport const ClearButton = () => t({ da: \"Ryd op\", us: \"Clear\" });\r\nexport const ClearAllButton = () => t({ da: \"Slet alt\", us: \"Remove all\" });\r\nexport const ClearGameButton = () =>\r\n  t({ da: \"Slet points\", us: \"Clear points\" });\r\nexport const EditPlayersTitle = () =>\r\n  t({ da: \"Vælg spillere\", us: \"Choose players\" });\r\nexport const EditButton = () => t({ da: \"Ændre spiller\", us: \"Change player\" });\r\nexport const DeleteButton = () =>\r\n  t({ da: \"Slet spiller\", us: \"Delete player\" });\r\nexport const AddPlayerLabel = () => {\r\n  return t({ da: \"Tilføj ny spiller\", us: \"Add new player\" });\r\n};\r\nexport const DeletePlayerLabel = () => {\r\n  return t({ da: \"Slet spiller\", us: \"Delete player\" });\r\n};\r\nexport const CurrentScore = (points: number) =>\r\n  t({ da: `Score: ${points}`, us: `Score: ${points}` });\r\nexport const GameScore = (points: number) =>\r\n  t({ da: `Samlet score: ${points}`, us: `Total score: ${points}` });\r\n\r\nexport const EditScoreTitle = () => t({ da: \"Score\", us: \"Score picker\" });\r\nexport const ChooseTileTypeLabel = () =>\r\n  t({ da: \"Vælg sæt type\", us: \"Choose set type\" });\r\nexport const ChooseSetTypeLabel = () =>\r\n  t({ da: \"Vælg antal i sæt\", us: \"Choose count in set\" });\r\nexport const InHandLabel = () =>\r\n  t({ da: \"Er sæt på hånden?\", us: \"Is set in hand?\" });\r\nexport const OneOrNineLabel = () =>\r\n  t({ da: \"Er det ener eller nier?\", us: \"Is it one or nine?\" });\r\nexport const OwnWindLabel = () =>\r\n  t({ da: \"Er det egen vind?\", us: \"Is it your own wind?\" });\r\nexport const DragonLabel = () => t({ da: \"Drager\", us: \"Dragons\" });\r\nexport const WindLabel = () => t({ da: \"Vinde\", us: \"Wind\" });\r\nexport const CharacterLabel = () => t({ da: \"Tal\", us: \"Characters\" });\r\nexport const BambooLabel = () => t({ da: \"Bambus\", us: \"Bamboo\" });\r\nexport const CircleLabel = () => t({ da: \"Cirkler\", us: \"Circles\" });\r\nexport const FlowerLabel = () => t({ da: \"Blomster\", us: \"Flowers\" });\r\nexport const UnknownLabel = () => t({ da: \"Ukendt\", us: \"Unknown\" });\r\nexport const ChowLabel = () => t({ da: \"Chow\" });\r\nexport const PoongLabel = () => t({ da: \"Poong\" });\r\nexport const KongLabel = () => t({ da: \"Kong\" });\r\nexport const PairLabel = () => t({ da: \"Slut par\", us: \"End pair\" });\r\nexport const SingleLabel = () => t({ da: \"Enkelt\", us: \"Single\" });\r\n\r\n// export const SetDescription = (setType: string, tileType: string) => t({ da: `Total score: ${points}`, us: \"Single\" });\r\n\r\n// export interface IMahJongSet {\r\n//   tileType: MahJongTileTypes;\r\n//   setType: MahJongSetTypes;\r\n//   inHand?: boolean;\r\n//   oneOrNine?: boolean;\r\n//   ownWind?: boolean;\r\n// }\r\n","import {\r\n  ICommandBarStyles,\r\n  IStackStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IButtonStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongOverviewStyles {\r\n  commandBar: ICommandBarStyles;\r\n  dashboard: IStackStyles;\r\n  listItem: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongOverviewStyles = (): IMahjongOverviewStyles => ({\r\n  commandBar: {\r\n    root: {\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n  dashboard: {\r\n    root: { padding: \"24px 0 0 0\" },\r\n  },\r\n  listItem: {\r\n    root: {\r\n      maxWidth: \"100%\",\r\n      width: \"100%\",\r\n      padding: \"20px 10px 20px 20px\",\r\n      margin: \"10px 0\",\r\n    },\r\n    flexContainer: {\r\n      justifyContent: \"flex-start\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IMahjongOverviewClassNames {\r\n  page: string;\r\n  list: string;\r\n  header: string;\r\n  winnerIcon: string;\r\n  winnerIcon2: string;\r\n  eastIcon: string;\r\n}\r\n\r\nexport const mahjongOverviewClassNames = memoizeFunction(\r\n  (): IMahjongOverviewClassNames => {\r\n    return mergeStyleSets({\r\n      page: {\r\n        overflow: \"auto\",\r\n      },\r\n      list: {\r\n        margin: \"0 10px\",\r\n      },\r\n      header: {\r\n        marginLeft: \"10px\",\r\n        marginRight: \"10px\",\r\n      },\r\n      winnerIcon: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"auto\",\r\n        color: \"green\",\r\n      },\r\n      winnerIcon2: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"0px\",\r\n        color: \"green\",\r\n      },\r\n      eastIcon: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"auto\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","const storageName = 'Main';\r\n\r\nexport const loadData = () => {\r\n    if (isSupported) {\r\n        try {\r\n            return JSON.parse(localStorage.getItem(storageName) || '');\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport const saveData = (data: any): boolean => {\r\n    if (isSupported) {\r\n        try {\r\n            localStorage.setItem(storageName, JSON.stringify(data));\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport const isSupported = (() => {\r\n    try {\r\n        let itemBackup = localStorage.getItem('');\r\n        localStorage.removeItem('');\r\n        localStorage.setItem('', itemBackup || '');\r\n        if (itemBackup === null)\r\n            localStorage.removeItem('');\r\n        else\r\n            localStorage.setItem('', itemBackup);\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n})();\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport {\r\n  IMahJongUser,\r\n  IMahJongGame,\r\n  createGame,\r\n  createScore,\r\n  IMahJongScore,\r\n  IMahJongSet,\r\n  MahJongTileTypes,\r\n  MahJongSetTypes,\r\n} from \"../Mahjong.model\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport {\r\n  map,\r\n  find,\r\n  uniqBy,\r\n  filter,\r\n  without,\r\n  forEach,\r\n  sumBy,\r\n  some,\r\n} from \"lodash\";\r\n\r\ninterface MahjongOverviewState {\r\n  players: IMahJongUser[];\r\n  games: IMahJongGame[];\r\n  isPlaying: boolean;\r\n  currentPlayers: IMahJongUser[];\r\n  currentGame: IMahJongGame;\r\n}\r\n\r\nconst initialState: MahjongOverviewState = {\r\n  players: [],\r\n  games: [],\r\n  isPlaying: false,\r\n  currentPlayers: [],\r\n  currentGame: createGame(),\r\n};\r\n\r\nexport const overviewSlice = createSlice({\r\n  name: \"mahjongOverview\",\r\n  initialState,\r\n  reducers: {\r\n    loadFailed: (state) => {\r\n      state = initialState;\r\n    },\r\n    loadSuccess: (state, action: PayloadAction<MahjongOverviewState>) => {\r\n      state.players = action.payload?.players ?? initialState.players;\r\n      state.games = action.payload?.games ?? initialState.games;\r\n      state.isPlaying = action.payload?.isPlaying ?? initialState.isPlaying;\r\n      state.currentPlayers =\r\n        action.payload?.currentPlayers ?? initialState.currentPlayers;\r\n      state.currentGame =\r\n        action.payload?.currentGame ?? initialState.currentGame;\r\n    },\r\n    setUsers: (state, action: PayloadAction<IMahJongUser[]>) => {\r\n      if (!state.isPlaying) {\r\n        state.currentPlayers = action.payload;\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    addUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      if (!state.isPlaying && state.players) {\r\n        state.players.push(action.payload);\r\n        if (state.currentPlayers.length < 4) {\r\n          state.currentPlayers.push(action.payload);\r\n        }\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    deleteUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      if (!state.isPlaying && state.players) {\r\n        state.players = filter(\r\n          state.players,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        state.currentPlayers = filter(\r\n          state.currentPlayers,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    newGame: (state) => {\r\n      if (!state.isPlaying && state.currentPlayers.length > 0) {\r\n        state.isPlaying = true;\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    clearGame: (state) => {\r\n      forEach(state.currentGame.score, (score: IMahJongScore) => {\r\n        score.sets = [];\r\n        score.points = 0;\r\n        score.gameScore = 0;\r\n        score.isWinner = false;\r\n        score.isEast = false;\r\n      });\r\n      state.currentGame = { ...state.currentGame }; // Trigger refresh\r\n      saveData(state);\r\n    },\r\n    clearAll: (state) => {\r\n      state = initialState;\r\n      saveData(state);\r\n    },\r\n    updateScore: (state, action: PayloadAction<IMahJongScore>) => {\r\n      updateGameScore(state, action.payload);\r\n    },\r\n    cancelGame: (state) => {\r\n      if (state.isPlaying) {\r\n        state.isPlaying = false;\r\n        state.currentGame = createGame();\r\n      }\r\n    },\r\n    saveGame: (state) => {\r\n      if (state.isPlaying) {\r\n        state.games = [...state.games, state.currentGame];\r\n        state.currentGame = createGame();\r\n        state.isPlaying = false;\r\n        saveData(state);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nfunction updateGameUsers(state: MahjongOverviewState) {\r\n  state.currentPlayers = uniqBy(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser): string => user.id\r\n  );\r\n  state.currentGame.score = map(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser, index: number): IMahJongScore => {\r\n      const found = find(\r\n        state.currentGame.score,\r\n        (score: IMahJongScore): boolean => score.playerId === user.id\r\n      );\r\n      return found || createScore(user.id);\r\n    }\r\n  );\r\n  saveData(state);\r\n}\r\n\r\nfunction updateGameScore(state: MahjongOverviewState, newScore: IMahJongScore) {\r\n  const found = find(\r\n    state.currentGame?.score,\r\n    (score: IMahJongScore): boolean => score.playerId === newScore?.playerId\r\n  );\r\n  if (found) {\r\n    const otherScore = without<IMahJongScore>(state.currentGame.score, found);\r\n    forEach(otherScore, (score: IMahJongScore) => {\r\n      if (newScore.isWinner) {\r\n        score.isWinner = false;\r\n      }\r\n      if (newScore.isEast) {\r\n        score.isEast = false;\r\n      }\r\n    });\r\n    state.currentGame.score = [...otherScore, { ...newScore }];\r\n    updateCalculatedScore(state.currentGame);\r\n    saveData(state);\r\n  }\r\n}\r\n\r\nfunction updateCalculatedScore(game: IMahJongGame): void {\r\n  if (!game?.score || game.score.length <= 1) {\r\n    return; // Nothing to update\r\n  }\r\n\r\n  let winnerFound = false;\r\n  forEach(game.score, (score: IMahJongScore) => {\r\n    score.points = scoreToPoints(score);\r\n    winnerFound = winnerFound || !!score.isWinner;\r\n  });\r\n\r\n  if (!winnerFound) {\r\n    return;\r\n  }\r\n\r\n  forEach(game.score, (scoreToCalculate: IMahJongScore) => {\r\n    scoreToCalculate.gameScore = sumBy(\r\n      game.score,\r\n      (score: IMahJongScore): number => {\r\n        if (score.playerId === scoreToCalculate.playerId) {\r\n          return 0; // Skip\r\n        }\r\n\r\n        let difference = score.isWinner ? 0 : scoreToCalculate.points;\r\n        if (!scoreToCalculate.isWinner) {\r\n          difference -= score.points;\r\n        }\r\n\r\n        return score.isEast || scoreToCalculate.isEast\r\n          ? difference * 2\r\n          : difference;\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nexport const DefaultWinnerPoints = 10;\r\n\r\nexport function scoreToPoints(score: IMahJongScore): number {\r\n  let points = score.isWinner ? DefaultWinnerPoints : 0;\r\n  points += sumBy(score.sets, (set: IMahJongSet): number => {\r\n    if (set.tileType === MahJongTileTypes.Flower) {\r\n      switch (set.setType) {\r\n        // Each flower tile yields 4 points\r\n        case MahJongSetTypes.Pair:\r\n          return 8;\r\n        case MahJongSetTypes.Chow:\r\n        case MahJongSetTypes.Poong:\r\n          return 12;\r\n        case MahJongSetTypes.Kong:\r\n          return 16;\r\n        case MahJongSetTypes.Single:\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n\r\n    // Special end pair rule:\r\n    if (\r\n      set.setType === MahJongSetTypes.Pair &&\r\n      (set.tileType === MahJongTileTypes.Dragon ||\r\n        (set.tileType === MahJongTileTypes.Wind && set.ownWind))\r\n    ) {\r\n      return 2;\r\n    }\r\n\r\n    // All other tile types:\r\n    let sub = 0;\r\n    if (set.setType === MahJongSetTypes.Poong) {\r\n      sub = 2;\r\n    } else if (set.setType === MahJongSetTypes.Kong) {\r\n      sub = 8;\r\n    }\r\n    if (\r\n      set.oneOrNine ||\r\n      set.tileType === MahJongTileTypes.Dragon ||\r\n      set.tileType === MahJongTileTypes.Wind\r\n    ) {\r\n      sub *= 2;\r\n    }\r\n    if (set.inHand) {\r\n      sub *= 2;\r\n    }\r\n\r\n    return sub;\r\n  });\r\n\r\n  let honorFactor = 1;\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        !!set.ownWind &&\r\n        set.tileType === MahJongTileTypes.Wind &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in own wind\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        set.tileType === MahJongTileTypes.Dragon &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in dragons\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        set.tileType === MahJongTileTypes.Flower &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in flowers\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (score.isWinner) {\r\n    let containDragonsOrWinds = false;\r\n    let containBamboo = 0;\r\n    let containCircle = 0;\r\n    let containCharacter = 0;\r\n    forEach(score.sets, (set: IMahJongSet) => {\r\n      if (set.tileType === MahJongTileTypes.Bamboo) {\r\n        containBamboo = 1;\r\n      }\r\n      if (set.tileType === MahJongTileTypes.Circle) {\r\n        containCircle = 1;\r\n      }\r\n      if (set.tileType === MahJongTileTypes.Character) {\r\n        containCharacter = 1;\r\n      }\r\n      if (\r\n        set.tileType === MahJongTileTypes.Dragon ||\r\n        set.tileType === MahJongTileTypes.Wind\r\n      ) {\r\n        containDragonsOrWinds = true;\r\n      }\r\n    });\r\n\r\n    if (containBamboo + containCircle + containCharacter === 1) {\r\n      if (containDragonsOrWinds) {\r\n        honorFactor *= 2;\r\n      } else {\r\n        honorFactor *= 8;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points * honorFactor;\r\n}\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const {\r\n  setUsers,\r\n  addUser,\r\n  deleteUser,\r\n  newGame,\r\n  clearGame,\r\n  clearAll,\r\n  updateScore,\r\n  cancelGame,\r\n  saveGame,\r\n} = overviewSlice.actions;\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n  if (isSupported) {\r\n    dispatch(loadSuccess(loadData() as MahjongOverviewState));\r\n  } else {\r\n    dispatch(loadFailed());\r\n  }\r\n};\r\n\r\nexport const selectPlayers = (state: RootState) =>\r\n  state.mahjongOverview.players || [];\r\nexport const selectGames = (state: RootState) =>\r\n  state.mahjongOverview.games || [];\r\nexport const selectCurrentGame = (state: RootState) =>\r\n  state.mahjongOverview.currentGame || [];\r\nexport const selectCurrentPlayers = (state: RootState) =>\r\n  state.mahjongOverview.currentPlayers || [];\r\nexport const selectIsPlaying = (state: RootState) =>\r\n  state.mahjongOverview.isPlaying;\r\n\r\nexport default overviewSlice.reducer;\r\n","import {\r\n  IButtonStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IComboBoxStyles,\r\n  ITextFieldStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface ISelectUserPanelStyles {\r\n  combobox: Partial<IComboBoxStyles>;\r\n  footer: Partial<IButtonStyles>;\r\n  firstRoot: Partial<ITextFieldStyles>;\r\n  firstContainer: Partial<IComboBoxStyles>;\r\n}\r\n\r\nexport const getSelectUserPanelStyles = (): ISelectUserPanelStyles => ({\r\n  footer: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  combobox: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  firstRoot: {\r\n    root: {\r\n      flexGrow: \"1\",\r\n      flexShrink: \"1\",\r\n    },\r\n  },\r\n  firstContainer: {\r\n    container: {\r\n      flexGrow: \"1\",\r\n      flexShrink: \"1\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ISelectUserPanelClassNames {\r\n  wrapper: string;\r\n}\r\n\r\nexport const selectUserPanelClassNames = memoizeFunction(\r\n  (): ISelectUserPanelClassNames => {\r\n    return mergeStyleSets({\r\n      wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n        margin: \"30px 5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  classNamesFunction,\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  Panel,\r\n  PrimaryButton,\r\n  TextField,\r\n  IconButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  selectUserPanelClassNames,\r\n  getSelectUserPanelStyles,\r\n  ISelectUserPanelClassNames,\r\n} from \"./SelectUserPanel.styles\";\r\nimport { map, find, filter, isEmpty } from \"lodash\";\r\nimport { IMahJongUser, createUser } from \"../Mahjong.model\";\r\nimport {\r\n  EditPlayersTitle,\r\n  CloseButton,\r\n  AddButton,\r\n  DeleteButton,\r\n  AddPlayerLabel,\r\n  DeletePlayerLabel,\r\n  OkButton,\r\n} from \"../../../localization/DisplayStrings\";\r\n\r\nexport interface SelectUserPanelProps {\r\n  isOpen: boolean;\r\n  onSave: (selectedPlayers: IMahJongUser[]) => void;\r\n  onDelete: (player: IMahJongUser) => void;\r\n  onAdd: (player: IMahJongUser) => void;\r\n  allPlayers: IMahJongUser[];\r\n  currentPlayers: IMahJongUser[];\r\n}\r\n\r\nexport function SelectUserPanel(props: SelectUserPanelProps): JSX.Element {\r\n  const classNames = classNamesFunction<{}, ISelectUserPanelClassNames>()(\r\n    selectUserPanelClassNames\r\n  );\r\n  const styles = getSelectUserPanelStyles();\r\n\r\n  const { isOpen, onSave, onDelete, onAdd, allPlayers, currentPlayers } = props;\r\n  const [selectedPlayers, setSelectedPlayers] = React.useState<IMahJongUser[]>(\r\n    []\r\n  );\r\n  const [newPlayerName, setNewPlayerName] = React.useState(\"\");\r\n  const [userToDelete, setUserToDelete] = React.useState<IMahJongUser | null>(\r\n    null\r\n  );\r\n\r\n  useEffect((): void => {\r\n    const selected = [...currentPlayers];\r\n    let i = selected.length;\r\n    for (i; i < 4; i++) {\r\n      selected.push(createUser(\"\"));\r\n    }\r\n    setSelectedPlayers(selected);\r\n  }, [currentPlayers]);\r\n\r\n  const onChange = (selectedIndex: number) => (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    const selected = [...selectedPlayers];\r\n    if (selected.length > selectedIndex) {\r\n      selected[selectedIndex] = option?.data || createUser(\"\");\r\n    }\r\n    setSelectedPlayers(selected);\r\n  };\r\n\r\n  const onSaveClicked = () => {\r\n    onSave(\r\n      filter(\r\n        selectedPlayers,\r\n        (user: IMahJongUser): boolean => !isEmpty(user.name)\r\n      )\r\n    );\r\n  };\r\n\r\n  const options = [\r\n    { key: \"_\", text: \"\" },\r\n    ...map(\r\n      allPlayers,\r\n      (user: IMahJongUser): IComboBoxOption => {\r\n        return { key: user.id, text: user.name, data: user };\r\n      }\r\n    ),\r\n  ];\r\n\r\n  const filteredOptions = (user: IMahJongUser): IComboBoxOption[] => {\r\n    const filtered = filter(options, (option: IComboBoxOption): boolean => {\r\n      return (\r\n        option.key === user.id ||\r\n        !find(\r\n          selectedPlayers,\r\n          (selected: IMahJongUser): boolean => option.key === selected.id\r\n        )\r\n      );\r\n    });\r\n    return filtered.length === 1 ? [] : filtered;\r\n  };\r\n\r\n  const renderComboBox = (user: IMahJongUser, key: number): JSX.Element => (\r\n    <ComboBox\r\n      key={key}\r\n      aria-label=\"\"\r\n      selectedKey={user.id}\r\n      autoComplete=\"on\"\r\n      options={filteredOptions(user)}\r\n      onChange={onChange(key)}\r\n      styles={styles.combobox}\r\n    />\r\n  );\r\n\r\n  const allComboboxes = map(\r\n    selectedPlayers,\r\n    (user: IMahJongUser, index: number): JSX.Element =>\r\n      renderComboBox(user, index)\r\n  );\r\n\r\n  const onNameChange = (\r\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    newValue?: string\r\n  ) => {\r\n    setNewPlayerName(newValue || \"\");\r\n  };\r\n  const onAddName = () => {\r\n    if (!isEmpty(newPlayerName)) {\r\n      onAdd(createUser(newPlayerName));\r\n    }\r\n  };\r\n\r\n  const renderAddTextbox = (): JSX.Element => {\r\n    return (\r\n      <div className={classNames.wrapper}>\r\n        <TextField\r\n          label={AddPlayerLabel()}\r\n          value={newPlayerName}\r\n          onChange={onNameChange}\r\n          styles={styles.firstRoot}\r\n        />\r\n        <IconButton\r\n          iconProps={{ iconName: \"Add\" }}\r\n          onClick={onAddName}\r\n          title={AddButton()}\r\n          ariaLabel={AddButton()}\r\n          disabled={isEmpty(newPlayerName)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onDeleteUserChange = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    setUserToDelete(option?.data);\r\n  };\r\n  const onDeleteUserClicked = () => {\r\n    if (userToDelete) {\r\n      onDelete(userToDelete);\r\n    }\r\n  };\r\n\r\n  const renderDeleteCombobox = (): JSX.Element => {\r\n    return (\r\n      <div className={classNames.wrapper}>\r\n        <ComboBox\r\n          label={DeletePlayerLabel()}\r\n          aria-label=\"\"\r\n          autoComplete=\"on\"\r\n          selectedKey={userToDelete?.id}\r\n          options={options.length === 1 ? [] : options}\r\n          onChange={onDeleteUserChange}\r\n          styles={styles.firstContainer}\r\n        />\r\n        <IconButton\r\n          iconProps={{ iconName: \"Delete\" }}\r\n          onClick={onDeleteUserClicked}\r\n          title={DeleteButton()}\r\n          ariaLabel={DeleteButton()}\r\n          disabled={isEmpty(userToDelete?.id)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onRenderFooterContent = () => (\r\n    <div>\r\n      <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n        {OkButton()}\r\n      </PrimaryButton>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={isOpen}\r\n        isLightDismiss\r\n        onDismiss={onSaveClicked}\r\n        headerText={EditPlayersTitle()}\r\n        closeButtonAriaLabel={CloseButton()}\r\n        onRenderFooterContent={onRenderFooterContent}\r\n        isFooterAtBottom={true}\r\n      >\r\n        {allComboboxes}\r\n        {renderAddTextbox()}\r\n        {renderDeleteCombobox()}\r\n      </Panel>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ICommandBarStyles,\r\n  IStackStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IButtonStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongDetailsStyles {\r\n  commandBar: ICommandBarStyles;\r\n  dashboard: IStackStyles;\r\n  listButton: Partial<IButtonStyles>;\r\n  footer: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongDetailsStyles = (): IMahjongDetailsStyles => ({\r\n  commandBar: {\r\n    root: {\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n  dashboard: {\r\n    root: { padding: \"24px 0 0 0\" },\r\n  },\r\n  listButton: {\r\n    root: {\r\n      marginTop: \"10px\",\r\n      marginLeft: \"auto\",\r\n    },\r\n  },\r\n  footer: {\r\n    root: {\r\n      marginTop: 30,\r\n      float: \"right\",\r\n      marginRight: 30,\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IMahjongDetailsClassNames {\r\n  page: string;\r\n  content: string;\r\n  listItem: string;\r\n  listDescription: string;\r\n}\r\n\r\nexport const mahjongDetailsClassNames = memoizeFunction(\r\n  (): IMahjongDetailsClassNames => {\r\n    return mergeStyleSets({\r\n      page: {\r\n        overflow: \"auto\",\r\n        // background: '#F8F8F9'\r\n      },\r\n      content: {\r\n        margin: \"10px\",\r\n      },\r\n      listItem: {\r\n        display: \"flex\",\r\n        margin: \"10px\",\r\n      },\r\n      listDescription: {\r\n        margin: \"0 20px\",\r\n        padding: \"5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  IButtonStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IChoiceGroupOptionStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IScorePanelStyles {\r\n  footer: Partial<IButtonStyles>;\r\n  choiceGroup: Partial<IChoiceGroupOptionStyles>;\r\n}\r\n\r\nexport const getScorePanelStyles = (): IScorePanelStyles => ({\r\n  footer: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  choiceGroup: {\r\n    choiceFieldWrapper: {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IScorePanelClassNames {\r\n  wrapper: string;\r\n}\r\n\r\nexport const scorePanelClassNames = memoizeFunction(\r\n  (): IScorePanelClassNames => {\r\n    return mergeStyleSets({\r\n      wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n        margin: \"30px 5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  DragonLabel,\r\n  WindLabel,\r\n  BambooLabel,\r\n  CircleLabel,\r\n  CharacterLabel,\r\n  FlowerLabel,\r\n  UnknownLabel,\r\n  SingleLabel,\r\n  PairLabel,\r\n  ChowLabel,\r\n  PoongLabel,\r\n  KongLabel,\r\n} from \"../../localization/DisplayStrings\";\r\nimport MahJongGreenDragon from \"../../images/MahjongGreenDragon.jpg\";\r\nimport MahJongEast from \"../../images/MahjongEast.jpg\";\r\nimport MahJongBamboo6 from \"../../images/MahjongBamboo6.jpg\";\r\nimport MahJongBambooChow from \"../../images/MahjongBambooChow.jpg\";\r\nimport MahJongCircle5 from \"../../images/MahjongCircle5.jpg\";\r\nimport MahJongCircleChow from \"../../images/MahjongCircleChow.jpg\";\r\nimport MahJongCharacter4 from \"../../images/MahjongCharacter4.jpg\";\r\nimport MahJongCharacterChow from \"../../images/MahjongCharacterChow.jpg\";\r\nimport MahJongSeason1 from \"../../images/MahjongSeason1.jpg\";\r\nimport MahJongSeason2 from \"../../images/MahjongSeason2.jpg\";\r\nimport MahJongSeason3 from \"../../images/MahjongSeason3.jpg\";\r\nimport MahJongSeason4 from \"../../images/MahjongSeason4.jpg\";\r\nimport MahJongFlower2 from \"../../images/MahjongFlower2.jpg\";\r\nimport {\r\n  MahJongTileTypes,\r\n  MahJongSetTypes,\r\n  IMahJongSet,\r\n} from \"./Mahjong.model\";\r\n\r\nexport function displayTileType(tile: MahJongTileTypes) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Dragon:\r\n      return DragonLabel();\r\n    case MahJongTileTypes.Wind:\r\n      return WindLabel();\r\n    case MahJongTileTypes.Bamboo:\r\n      return BambooLabel();\r\n    case MahJongTileTypes.Circle:\r\n      return CircleLabel();\r\n    case MahJongTileTypes.Character:\r\n      return CharacterLabel();\r\n    case MahJongTileTypes.Flower:\r\n      return FlowerLabel();\r\n    default:\r\n      return UnknownLabel();\r\n  }\r\n}\r\n\r\nexport function imageTileType(tile: MahJongTileTypes, index?: number) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Dragon:\r\n      return MahJongGreenDragon;\r\n    case MahJongTileTypes.Wind:\r\n      return MahJongEast;\r\n    case MahJongTileTypes.Bamboo:\r\n      return MahJongBamboo6;\r\n    case MahJongTileTypes.Circle:\r\n      return MahJongCircle5;\r\n    case MahJongTileTypes.Character:\r\n      return MahJongCharacter4;\r\n    case MahJongTileTypes.Flower:\r\n      if (index === 1) {\r\n        return MahJongSeason1;\r\n      }\r\n      if (index === 2) {\r\n        return MahJongSeason2;\r\n      }\r\n      if (index === 3) {\r\n        return MahJongSeason3;\r\n      }\r\n      if (index === 6) {\r\n        return MahJongFlower2;\r\n      }\r\n      return MahJongSeason4;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\nexport function imageSet(item?: IMahJongSet) {\r\n  if (!item) {\r\n    return [];\r\n  }\r\n\r\n  if (item.tileType === MahJongTileTypes.Flower) {\r\n    return getFlowerImageSet(item.setType);\r\n  }\r\n\r\n  return getOtherImageSet(item.tileType, item.setType);\r\n}\r\n\r\nfunction getFlowerImageSet(setType: MahJongSetTypes) {\r\n  switch (setType) {\r\n    case MahJongSetTypes.Single:\r\n      return [imageTileType(MahJongTileTypes.Flower)];\r\n    case MahJongSetTypes.Pair:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 6),\r\n        imageTileType(MahJongTileTypes.Flower, 3),\r\n      ];\r\n    case MahJongSetTypes.Chow:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 6),\r\n      ];\r\n    case MahJongSetTypes.Poong:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 4),\r\n      ];\r\n    case MahJongSetTypes.Kong:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 3),\r\n        imageTileType(MahJongTileTypes.Flower, 4),\r\n      ];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction getOtherImageSet(\r\n  tileType: MahJongTileTypes,\r\n  setType: MahJongSetTypes\r\n) {\r\n  const image = imageTileType(tileType);\r\n  switch (setType) {\r\n    case MahJongSetTypes.Pair:\r\n      return [image, image];\r\n    case MahJongSetTypes.Chow:\r\n      return imageChowType(tileType);\r\n    case MahJongSetTypes.Poong:\r\n      return [image, image, image];\r\n    case MahJongSetTypes.Kong:\r\n      return [image, image, image, image];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction imageChowType(tile: MahJongTileTypes) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Bamboo:\r\n      return [MahJongBambooChow];\r\n    case MahJongTileTypes.Circle:\r\n      return [MahJongCircleChow];\r\n    case MahJongTileTypes.Character:\r\n      return [MahJongCharacterChow];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nexport function displaySetType(set: MahJongSetTypes) {\r\n  switch (set) {\r\n    case MahJongSetTypes.Single:\r\n      return SingleLabel();\r\n    case MahJongSetTypes.Pair:\r\n      return PairLabel();\r\n    case MahJongSetTypes.Chow:\r\n      return ChowLabel();\r\n    case MahJongSetTypes.Poong:\r\n      return PoongLabel();\r\n    case MahJongSetTypes.Kong:\r\n      return KongLabel();\r\n    default:\r\n      return UnknownLabel();\r\n  }\r\n}\r\n","import {\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  Panel,\r\n  PrimaryButton,\r\n  IChoiceGroupOption,\r\n  ChoiceGroup,\r\n  Stack,\r\n  Toggle,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { getScorePanelStyles } from \"./ScorePanel.styles\";\r\nimport {\r\n  IMahJongSet,\r\n  MahJongSetTypes,\r\n  MahJongTileTypes,\r\n} from \"../Mahjong.model\";\r\nimport {\r\n  CloseButton,\r\n  OkButton,\r\n  EditScoreTitle,\r\n  ChooseTileTypeLabel,\r\n  OnToggle,\r\n  OffToggle,\r\n  InHandLabel,\r\n  OneOrNineLabel,\r\n  OwnWindLabel,\r\n  ChooseSetTypeLabel,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport {\r\n  displayTileType,\r\n  displaySetType,\r\n  imageTileType,\r\n} from \"../MahjongDisplay\";\r\n\r\nexport interface ScorePanelProps {\r\n  isOpen: boolean;\r\n  onClose: (set: IMahJongSet) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport function ScorePanel(props: ScorePanelProps): JSX.Element {\r\n  const styles = getScorePanelStyles();\r\n\r\n  const { isOpen, onClose, onCancel } = props;\r\n  const [setType, setSetType] = React.useState<MahJongSetTypes>(\r\n    MahJongSetTypes.Poong\r\n  );\r\n  const [tileType, setTileType] = React.useState<MahJongTileTypes>(\r\n    MahJongTileTypes.Bamboo\r\n  );\r\n  const [inHand, setInHand] = React.useState(false);\r\n  const [oneOrNine, setOneOrNine] = React.useState(false);\r\n  const [ownWind, setOwnWind] = React.useState(false);\r\n\r\n  useEffect((): void => {\r\n    setSetType(MahJongSetTypes.Poong);\r\n    setTileType(MahJongTileTypes.Bamboo);\r\n    setInHand(false);\r\n    setOneOrNine(false);\r\n    setOwnWind(false);\r\n  }, [isOpen]);\r\n\r\n  const onSaveClicked = () => {\r\n    onClose({\r\n      tileType,\r\n      setType,\r\n      inHand,\r\n      oneOrNine,\r\n      ownWind,\r\n    });\r\n  };\r\n  const onChangeInHand = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setInHand(!!checked);\r\n  };\r\n  const onChangeOneOrNine = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setOneOrNine(!!checked);\r\n  };\r\n  const onChangeOwnWind = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setOwnWind(!!checked);\r\n  };\r\n  const onChangeTileType = (\r\n    ev?: React.FormEvent<HTMLElement | HTMLInputElement>,\r\n    option?: IChoiceGroupOption\r\n  ) => {\r\n    const tileType = parseInt(\r\n      option?.key ?? MahJongTileTypes.Bamboo.toString()\r\n    ) as MahJongTileTypes;\r\n    if (tileType === MahJongTileTypes.Flower) {\r\n      if (setType === MahJongSetTypes.Poong) {\r\n        setSetType(MahJongSetTypes.Single);\r\n      }\r\n    } else if (setType === MahJongSetTypes.Single) {\r\n      setSetType(MahJongSetTypes.Poong);\r\n    }\r\n    setTileType(tileType);\r\n  };\r\n  const onChangeSetType = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    setSetType((option?.key ?? MahJongSetTypes.Poong) as MahJongSetTypes);\r\n  };\r\n\r\n  const getTileOption = (\r\n    key: MahJongTileTypes,\r\n    disabled?: boolean\r\n  ): IChoiceGroupOption => {\r\n    return {\r\n      key: key.toString(),\r\n      imageSrc: imageTileType(key),\r\n      selectedImageSrc: imageTileType(key),\r\n      imageSize: { width: 40, height: 55 },\r\n      imageAlt: displayTileType(key),\r\n      text: displayTileType(key),\r\n      disabled,\r\n      styles: styles.choiceGroup,\r\n    };\r\n  };\r\n\r\n  const getTileOptions = (): IChoiceGroupOption[] => {\r\n    // const isSingle = setType === MahJongSetTypes.Single;\r\n    const isChow = setType === MahJongSetTypes.Chow;\r\n    return [\r\n      getTileOption(MahJongTileTypes.Dragon, isChow),\r\n      getTileOption(MahJongTileTypes.Wind, isChow),\r\n      getTileOption(MahJongTileTypes.Character),\r\n      getTileOption(MahJongTileTypes.Circle),\r\n      getTileOption(MahJongTileTypes.Bamboo),\r\n      getTileOption(MahJongTileTypes.Flower, isChow),\r\n    ];\r\n  };\r\n\r\n  const getSetOption = (key: MahJongSetTypes): IComboBoxOption => {\r\n    return { key, text: displaySetType(key) };\r\n  };\r\n\r\n  const getSetOptions = (): IComboBoxOption[] => {\r\n    const options = [];\r\n    if (\r\n      tileType === MahJongTileTypes.Bamboo ||\r\n      tileType === MahJongTileTypes.Circle ||\r\n      tileType === MahJongTileTypes.Character\r\n    ) {\r\n      options.push(getSetOption(MahJongSetTypes.Chow));\r\n    }\r\n\r\n    options.push(getSetOption(MahJongSetTypes.Poong));\r\n    options.push(getSetOption(MahJongSetTypes.Kong));\r\n    options.push(getSetOption(MahJongSetTypes.Pair));\r\n\r\n    if (tileType === MahJongTileTypes.Flower) {\r\n      options.push(getSetOption(MahJongSetTypes.Single));\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  // <DefaultButton styles={styles.footer} onClick={onCancel}>{CancelButton()}</DefaultButton>;\r\n  const onRenderFooterContent = () => (\r\n    <div>\r\n      <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n        {OkButton()}\r\n      </PrimaryButton>\r\n    </div>\r\n  );\r\n\r\n  const isInHandVisible = tileType !== MahJongTileTypes.Flower;\r\n  const isOneOrNineVisible =\r\n    tileType === MahJongTileTypes.Bamboo ||\r\n    tileType === MahJongTileTypes.Circle ||\r\n    tileType === MahJongTileTypes.Character;\r\n  const isOwnWindVisible = tileType === MahJongTileTypes.Wind;\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={isOpen}\r\n        isLightDismiss\r\n        onDismiss={onCancel}\r\n        headerText={EditScoreTitle()}\r\n        closeButtonAriaLabel={CloseButton()}\r\n        onRenderFooterContent={onRenderFooterContent}\r\n        isFooterAtBottom={true}\r\n      >\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n          <ChoiceGroup\r\n            label={ChooseTileTypeLabel()}\r\n            selectedKey={tileType.toString()}\r\n            onChange={onChangeTileType}\r\n            options={getTileOptions()}\r\n          />\r\n          <ComboBox\r\n            label={ChooseSetTypeLabel()}\r\n            aria-label=\"\"\r\n            autoComplete=\"on\"\r\n            selectedKey={setType}\r\n            options={getSetOptions()}\r\n            onChange={onChangeSetType}\r\n          />\r\n          {isInHandVisible && (\r\n            <Toggle\r\n              label={InHandLabel()}\r\n              checked={inHand}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeInHand}\r\n            />\r\n          )}\r\n          {isOneOrNineVisible && (\r\n            <Toggle\r\n              label={OneOrNineLabel()}\r\n              checked={oneOrNine}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeOneOrNine}\r\n            />\r\n          )}\r\n          {isOwnWindVisible && (\r\n            <Toggle\r\n              label={OwnWindLabel()}\r\n              checked={ownWind}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeOwnWind}\r\n            />\r\n          )}\r\n        </Stack>\r\n      </Panel>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  CommandBar,\r\n  ICommandBarItemProps,\r\n  classNamesFunction,\r\n  Toggle,\r\n  Stack,\r\n  List,\r\n  Image,\r\n  IconButton,\r\n  PrimaryButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  mahjongDetailsClassNames,\r\n  getMahjongDetailsStyles,\r\n  IMahjongDetailsClassNames,\r\n} from \"./MahjongDetails.styles\";\r\nimport {\r\n  BackButton,\r\n  EastToggleLabel,\r\n  WinnerToggleLabel,\r\n  OnToggle,\r\n  OffToggle,\r\n  CurrentScore,\r\n  AddButton,\r\n  DeleteButton,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport {\r\n  updateScore,\r\n  selectCurrentGame,\r\n  scoreToPoints,\r\n} from \"../overview/MahjongOverviewSlice\";\r\nimport {\r\n  IMahJongUser,\r\n  IMahJongScore,\r\n  getScore,\r\n  createScore,\r\n  IMahJongSet,\r\n} from \"../Mahjong.model\";\r\nimport { ScorePanel } from \"../scorePanel/ScorePanel\";\r\nimport { displayTileType, displaySetType, imageSet } from \"../MahjongDisplay\";\r\nimport { map, without } from \"lodash\";\r\n\r\nexport interface MahjongDetailsProps {\r\n  user: IMahJongUser;\r\n  onNavigateBack: () => void;\r\n}\r\n\r\nexport function MahjongDetails(props: MahjongDetailsProps): JSX.Element {\r\n  const classNames = classNamesFunction<{}, IMahjongDetailsClassNames>()(\r\n    mahjongDetailsClassNames\r\n  );\r\n  const styles = getMahjongDetailsStyles();\r\n\r\n  const { user, onNavigateBack } = props;\r\n\r\n  const currentGame = useSelector(selectCurrentGame);\r\n  const [userScore, setUserScore] = React.useState<IMahJongScore | undefined>(\r\n    undefined\r\n  );\r\n  const [showScorePanel, setShowScorePanel] = React.useState(false);\r\n\r\n  useEffect((): void => {\r\n    if (user && currentGame) {\r\n      setUserScore(getScore(currentGame, user));\r\n    }\r\n  }, [user, currentGame]);\r\n\r\n  const initialScore = createScore(\"\");\r\n  const setWinner = (isWinner?: boolean) => {\r\n    const tempScore = {\r\n      ...initialScore,\r\n      ...userScore,\r\n      isWinner,\r\n    };\r\n    tempScore.points = scoreToPoints(tempScore);\r\n    setUserScore(tempScore);\r\n  };\r\n  const setEast = (isEast?: boolean) => {\r\n    setUserScore({ ...initialScore, ...userScore, isEast });\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const closeDetails = () => {\r\n    if (userScore) {\r\n      dispatch(updateScore(userScore));\r\n    }\r\n    onNavigateBack();\r\n  };\r\n  const closeScorePanel = (set: IMahJongSet) => {\r\n    if (userScore) {\r\n      const tempScore = {\r\n        ...initialScore,\r\n        ...userScore,\r\n        sets: [...(userScore.sets || []), set],\r\n      };\r\n      tempScore.points = scoreToPoints(tempScore);\r\n      setUserScore(tempScore);\r\n    }\r\n    setShowScorePanel(false);\r\n  };\r\n  const removeSetClicked = (set: IMahJongSet) => {\r\n    if (userScore) {\r\n      const tempScore = {\r\n        ...initialScore,\r\n        ...userScore,\r\n        sets: without(userScore.sets, set),\r\n      };\r\n      tempScore.points = scoreToPoints(tempScore);\r\n      setUserScore(tempScore);\r\n    }\r\n  };\r\n  const cancelScorePanel = () => setShowScorePanel(false);\r\n  const onshowScorePanel = () => {\r\n    setShowScorePanel(true);\r\n  };\r\n  const onChangeWinner = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => setWinner(checked);\r\n  const onChangeEast = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => setEast(checked);\r\n\r\n  const items: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"Back\",\r\n      name: BackButton(),\r\n      iconProps: {\r\n        iconName: \"Back\",\r\n      },\r\n      onClick: closeDetails,\r\n    },\r\n    {\r\n      key: \"Score\",\r\n      name: AddButton(),\r\n      iconProps: {\r\n        iconName: \"6PointStar\",\r\n      },\r\n      onClick: onshowScorePanel,\r\n    },\r\n  ];\r\n\r\n  const getImage = (item: IMahJongSet): JSX.Element[] | JSX.Element => {\r\n    return map(\r\n      imageSet(item),\r\n      (imageSrc, index): JSX.Element => {\r\n        return (\r\n          <Image\r\n            key={index}\r\n            src={imageSrc}\r\n            alt={displayTileType(item.tileType)}\r\n            height={55}\r\n          />\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  const onRenderCell = (item?: IMahJongSet): JSX.Element | null => {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className={classNames.listItem}>\r\n        {getImage(item)}\r\n        <div className={classNames.listDescription}>\r\n          <div>{displayTileType(item?.tileType)}</div>\r\n          <div>{displaySetType(item?.setType)}</div>\r\n        </div>\r\n        <IconButton\r\n          iconProps={{ iconName: \"Delete\" }}\r\n          title={DeleteButton()}\r\n          ariaLabel={DeleteButton()}\r\n          onClick={() => {\r\n            removeSetClicked(item);\r\n          }}\r\n          styles={styles.listButton}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classNames.page}>\r\n      <CommandBar items={items} styles={styles.commandBar} />\r\n      <div className={classNames.content}>\r\n        <h1>{user.name}</h1>\r\n        <p>{CurrentScore(userScore?.points ?? 0)}</p>\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n          <Toggle\r\n            label={WinnerToggleLabel()}\r\n            checked={userScore?.isWinner}\r\n            inlineLabel\r\n            onText={OnToggle()}\r\n            offText={OffToggle()}\r\n            onChange={onChangeWinner}\r\n          />\r\n          <Toggle\r\n            label={EastToggleLabel()}\r\n            checked={userScore?.isEast}\r\n            inlineLabel\r\n            onText={OnToggle()}\r\n            offText={OffToggle()}\r\n            onChange={onChangeEast}\r\n          />\r\n        </Stack>\r\n        <List items={userScore?.sets} onRenderCell={onRenderCell} />\r\n        <PrimaryButton styles={styles.footer} onClick={onshowScorePanel}>\r\n          {AddButton()}\r\n        </PrimaryButton>\r\n      </div>\r\n      <ScorePanel\r\n        isOpen={showScorePanel}\r\n        onClose={closeScorePanel}\r\n        onCancel={cancelScorePanel}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  CommandBar,\r\n  ICommandBarItemProps,\r\n  classNamesFunction,\r\n  CompoundButton,\r\n  Persona,\r\n  PersonaSize,\r\n  List,\r\n  FontIcon,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  mahjongOverviewClassNames,\r\n  getMahjongOverviewStyles,\r\n  IMahjongOverviewClassNames,\r\n} from \"./MahjongOverview.styles\";\r\nimport {\r\n  HomeButton,\r\n  EditPlayersButton,\r\n  CurrentScore,\r\n  GameScore,\r\n  MahJongHeader,\r\n  ClearButton,\r\n  ClearAllButton,\r\n  ClearGameButton,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { navigate, Page } from \"../../main/MainSlice\";\r\nimport {\r\n  load,\r\n  selectPlayers,\r\n  selectCurrentPlayers,\r\n  setUsers,\r\n  addUser,\r\n  deleteUser,\r\n  selectCurrentGame,\r\n  clearAll,\r\n  clearGame,\r\n} from \"./MahjongOverviewSlice\";\r\nimport { IMahJongUser, getScore } from \"../Mahjong.model\";\r\nimport { SelectUserPanel } from \"../userPanel/SelectUserPanel\";\r\nimport { MahjongDetails } from \"../details/MahjongDetails\";\r\n\r\nexport function MahjongOverview(): JSX.Element {\r\n  const classNames = classNamesFunction<{}, IMahjongOverviewClassNames>()(\r\n    mahjongOverviewClassNames\r\n  );\r\n  const styles = getMahjongOverviewStyles();\r\n\r\n  const [refreshCount, setRefreshCount] = React.useState(0);\r\n  const [isPlayerSelectOpen, setIsPlayerSelectOpen] = React.useState(false);\r\n  const [currentPlayer, setCurrentPlayer] = React.useState<\r\n    IMahJongUser | undefined\r\n  >(undefined);\r\n\r\n  const allPlayers = useSelector(selectPlayers);\r\n  const currentPlayers = useSelector(selectCurrentPlayers);\r\n  const players = useSelector(selectCurrentPlayers);\r\n  const game = useSelector(selectCurrentGame);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect((): void => {\r\n    dispatch(load());\r\n  }, [dispatch]);\r\n\r\n  const onSaveSelectedPlayers = (selectedPlayers: IMahJongUser[]): void => {\r\n    dispatch(setUsers(selectedPlayers));\r\n    setIsPlayerSelectOpen(false);\r\n  };\r\n\r\n  const onAddPlayer = (player: IMahJongUser): void => {\r\n    dispatch(addUser(player));\r\n  };\r\n  const onDeletePlayer = (player: IMahJongUser): void => {\r\n    dispatch(deleteUser(player));\r\n  };\r\n  const onOpenSelectedPlayers = () => setIsPlayerSelectOpen(true);\r\n  const onClearAll = (): void => {\r\n    dispatch(clearAll());\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n  const onClearGame = (): void => {\r\n    dispatch(clearGame());\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n\r\n  const openPlayer = (item?: IMahJongUser) => () => {\r\n    setCurrentPlayer(item);\r\n  };\r\n\r\n  const items: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"Back\",\r\n      text: HomeButton(),\r\n      iconProps: {\r\n        iconName: \"Home\",\r\n      },\r\n      onClick: () => {\r\n        dispatch(navigate(Page.Main));\r\n      },\r\n    },\r\n    {\r\n      key: \"Select\",\r\n      text: EditPlayersButton(),\r\n      iconProps: {\r\n        iconName: \"People\",\r\n      },\r\n      ariaLabel: EditPlayersButton(),\r\n      onClick: onOpenSelectedPlayers,\r\n    },\r\n    {\r\n      key: \"Clear\",\r\n      text: ClearButton(),\r\n      iconProps: {\r\n        iconName: \"Delete\",\r\n      },\r\n      ariaLabel: ClearButton(),\r\n      subMenuProps: {\r\n        items: [\r\n          {\r\n            key: \"ClearAll\",\r\n            text: ClearAllButton(),\r\n            iconProps: { iconName: \"UserRemove\" },\r\n            onClick: onClearAll,\r\n            disabled: true,\r\n          },\r\n          {\r\n            key: \"ClearGame\",\r\n            text: ClearGameButton(),\r\n            iconProps: { iconName: \"RemoveFromShoppingList\" },\r\n            onClick: onClearGame,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onRenderCell = (item?: IMahJongUser): JSX.Element | null => {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n\r\n    const currentScore = getScore(game, item);\r\n    const winner = currentScore.isWinner ? (\r\n      <FontIcon\r\n        iconName=\"SkypeCheck\"\r\n        className={\r\n          currentScore.isEast ? classNames.winnerIcon2 : classNames.winnerIcon\r\n        }\r\n      />\r\n    ) : null;\r\n    const east = currentScore.isEast ? (\r\n      <FontIcon iconName=\"CompassNW\" className={classNames.eastIcon} />\r\n    ) : null;\r\n    return (\r\n      <CompoundButton styles={styles.listItem} onClick={openPlayer(item)}>\r\n        <Persona\r\n          text={item?.name}\r\n          secondaryText={CurrentScore(currentScore.points)}\r\n          tertiaryText={GameScore(currentScore.gameScore)}\r\n          optionalText={\"\"}\r\n          size={PersonaSize.size72}\r\n        />\r\n        {east}\r\n        {winner}\r\n      </CompoundButton>\r\n    );\r\n  };\r\n\r\n  if (currentPlayer) {\r\n    return (\r\n      <MahjongDetails\r\n        user={currentPlayer}\r\n        onNavigateBack={() => setCurrentPlayer(undefined)}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classNames.page}>\r\n      <CommandBar items={items} styles={styles.commandBar} />\r\n      <h1 className={classNames.header}>{MahJongHeader()}</h1>\r\n      <SelectUserPanel\r\n        isOpen={isPlayerSelectOpen}\r\n        onSave={onSaveSelectedPlayers}\r\n        onDelete={onDeletePlayer}\r\n        onAdd={onAddPlayer}\r\n        allPlayers={allPlayers}\r\n        currentPlayers={currentPlayers}\r\n      />\r\n      <List\r\n        className={classNames.list}\r\n        version={refreshCount}\r\n        items={players}\r\n        onRenderCell={onRenderCell}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { navigate, selectPage, Page } from \"./MainSlice\";\r\nimport { Nav } from \"office-ui-fabric-react\";\r\nimport { MahJongTitle } from \"../../localization/DisplayStrings\";\r\nimport { MahjongOverview } from \"../mahjong/overview/MahjongOverview\";\r\n\r\nexport function MainPage() {\r\n  const page = useSelector(selectPage);\r\n  const dispatch = useDispatch();\r\n\r\n  switch (page) {\r\n    case Page.MahJong:\r\n      return <MahjongOverview />;\r\n    case Page.Main:\r\n      return (\r\n        <Nav\r\n          selectedKey=\"key0\"\r\n          ariaLabel=\"Nav basic example\"\r\n          groups={[\r\n            {\r\n              links: [\r\n                {\r\n                  name: MahJongTitle(),\r\n                  url: \"\",\r\n                  key: \"key0\",\r\n                  target: \"_blank\",\r\n                  onClick: () => {\r\n                    dispatch(navigate(Page.MahJong));\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n  }\r\n}\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport mainReducer from \"../pages/main/MainSlice\";\r\nimport overviewReducer from \"../pages/mahjong/overview/MahjongOverviewSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    main: mainReducer,\r\n    mahjongOverview: overviewReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { MainPage } from './pages/main/Main';\r\nimport { initializeIcons, loadTheme } from 'office-ui-fabric-react';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from 'office-ui-fabric-react/lib/Foundation';\r\n\r\nconst myTheme = loadTheme({\r\n  palette: {\r\n      themePrimary: '#2266e3',\r\n      themeLighterAlt: '#f5f8fe',\r\n      themeLighter: '#d8e4fb',\r\n      themeLight: '#b8cef7',\r\n      themeTertiary: '#759fee',\r\n      themeSecondary: '#3a76e6',\r\n      themeDarkAlt: '#1f5bcc',\r\n      themeDark: '#1a4dac',\r\n      themeDarker: '#13397f',\r\n      neutralLighterAlt: '#faf9f8',\r\n      neutralLighter: '#f3f2f1',\r\n      neutralLight: '#edebe9',\r\n      neutralQuaternaryAlt: '#e1dfdd',\r\n      neutralQuaternary: '#d0d0d0',\r\n      neutralTertiaryAlt: '#c8c6c4',\r\n      neutralTertiary: '#a19f9d',\r\n      neutralSecondary: '#605e5c',\r\n      neutralPrimaryAlt: '#3b3a39',\r\n      neutralPrimary: '#323130',\r\n      neutralDark: '#201f1e',\r\n      black: '#000000',\r\n      white: '#ffffff'\r\n  }\r\n});\r\n\r\nconst App = (): JSX.Element => {\r\n  useEffect(() => {\r\n    initializeIcons();\r\n    // initializeTheme();\r\n  });\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={myTheme}>\r\n          <MainPage />\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  );\r\n\r\n};\r\n\r\n// function initializeTheme(): void {\r\n//   if (!environment.production && !window[GlobalObjects.theme]) {\r\n//       window[GlobalObjects.theme] = myTheme;\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/MahjongGreenDragon.ae5a6502.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongEast.7287d189.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongBamboo6.93503ad1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongBambooChow.b2d6588f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCircle5.5776cb62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCircleChow.cc8debbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCharacter4.711aa9d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCharacterChow.79f76632.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason1.2d153ff1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason2.ce673dd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason3.d676d4a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason4.81b5c8aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongFlower2.9efa08e5.jpg\";"],"sourceRoot":""}