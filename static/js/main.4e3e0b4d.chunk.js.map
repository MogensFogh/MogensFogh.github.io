{"version":3,"sources":["pages/main/MainSlice.ts","utils/StorageUtil.ts","utils/LocalizationUtil.ts","pages/mahjong/Mahjong.model.ts","localization/DisplayStrings.ts","pages/mahjong/overview/MahjongOverview.styles.ts","pages/mahjong/overview/MahjongOverviewSlice.ts","pages/mahjong/userPanel/SelectUserPanel.styles.ts","pages/mahjong/userPanel/SelectUserPanel.tsx","pages/mahjong/details/MahjongDetails.styles.ts","pages/mahjong/scorePanel/ScorePanel.styles.ts","pages/mahjong/MahjongDisplay.ts","pages/mahjong/scorePanel/ScorePanel.tsx","pages/mahjong/details/MahjongDetails.tsx","pages/mahjong/addUserPanel/AddUserPanel.tsx","pages/mahjong/overview/MahjongOverview.tsx","pages/playground/overview/PlaygroundOverview.styles.ts","pages/playground/overview/PlaygroundOverview.tsx","pages/training/overview/TrainingOverview.styles.ts","pages/training/overview/TrainingOverviewSlice.ts","pages/training/overview/TrainingOverview.tsx","pages/main/Main.tsx","pages/playground/overview/PlaygroundOverviewSlice.ts","app/store.ts","App.tsx","serviceWorker.ts","index.tsx","images/MahjongGreenDragon.jpg","images/MahjongEast.jpg","images/MahjongBamboo6.jpg","images/MahjongBambooChow.jpg","images/MahjongCircle5.jpg","images/MahjongCircleChow.jpg","images/MahjongCharacter4.jpg","images/MahjongCharacterChow.jpg","images/MahjongSeason1.jpg","images/MahjongSeason2.jpg","images/MahjongSeason3.jpg","images/MahjongSeason4.jpg","images/MahjongFlower2.jpg"],"names":["Page","loadData","storageName","isSupported","JSON","parse","localStorage","getItem","e","saveData","data","setItem","stringify","itemBackup","removeItem","initialState","page","MahJong","mainSlice","createSlice","name","reducers","navigate","state","action","payload","saveState","loadFailed","loadSuccess","actions","selectPage","main","locale","MahJongTileTypes","MahJongSetTypes","t","loc","HomeButton","da","us","CloseButton","CancelButton","OkButton","AddButton","AddUserTitle","OnToggle","OffToggle","EditPlayersButton","ClearButton","DeleteButton","CurrentScore","points","UnknownLabel","TrainingAddMenuButton","TrainingAddButton","count","mahjongOverviewClassNames","memoizeFunction","mergeStyleSets","overflow","list","margin","header","marginLeft","marginRight","winnerIcon","fontSize","height","width","color","winnerIcon2","eastIcon","createUser","id","uuidv4","createGame","score","createScore","playerId","gameScore","sets","getScore","game","player","find","getScoreById","players","games","currentPlayers","currentGame","overviewSlice","updateGameUsers","updateCalculatedScore","setPlayers","addUser","uniqBy","user","push","length","deleteUser","filter","clearGame","forEach","isWinner","isEast","clearAllGames","clearAll","updateScore","found","otherScore","without","saveGame","some","map","index","winnerFound","scoreToPoints","scoreToCalculate","sumBy","difference","set","tileType","Flower","setType","Pair","Chow","Poong","Kong","Single","Dragon","Wind","ownWind","sub","oneOrNine","inHand","honorFactor","containDragonsOrWinds","containBamboo","containCircle","containCharacter","Bamboo","Circle","Character","min","load","dispatch","selectPlayers","mahjongOverview","selectGames","selectCurrentGame","selectCurrentPlayers","selectUserPanelClassNames","wrapper","display","alignItems","SelectUserPanel","props","classNames","classNamesFunction","styles","footer","root","combobox","firstRoot","flexGrow","flexShrink","firstContainer","container","isOpen","onSave","onDelete","allPlayers","React","useState","selectedPlayers","setSelectedPlayers","userToDelete","setUserToDelete","useEffect","selected","i","onSaveClicked","isEmpty","options","key","text","filteredOptions","filtered","option","allComboboxes","ComboBox","aria-label","selectedKey","autoComplete","onChange","selectedIndex","event","renderComboBox","onDeleteUserChange","onDeleteUserClicked","Panel","isLightDismiss","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","isFooterAtBottom","className","label","IconButton","iconProps","iconName","title","ariaLabel","disabled","mahjongDetailsClassNames","content","listItem","listDescription","padding","displayTileType","tile","imageTileType","MahJongGreenDragon","MahJongEast","MahJongBamboo6","MahJongCircle5","MahJongCharacter4","MahJongSeason1","MahJongSeason2","MahJongSeason3","MahJongFlower2","MahJongSeason4","imageSet","item","getFlowerImageSet","image","MahJongBambooChow","MahJongCircleChow","MahJongCharacterChow","imageChowType","getOtherImageSet","displaySetType","ScorePanel","choiceGroup","choiceFieldWrapper","backgroundColor","onClose","onCancel","setSetType","setTileType","setInHand","setOneOrNine","setOwnWind","getTileOption","toString","imageSrc","selectedImageSrc","imageSize","imageAlt","getSetOption","isInHandVisible","isOneOrNineVisible","isOwnWindVisible","Stack","tokens","childrenGap","ChoiceGroup","ev","parseInt","isChow","getTileOptions","getSetOptions","Toggle","checked","inlineLabel","onText","offText","MahjongDetails","commandBar","dashboard","listButton","marginTop","float","onNavigateBack","useSelector","undefined","userScore","setUserScore","showScorePanel","setShowScorePanel","initialScore","useDispatch","onshowScorePanel","items","CommandBar","tempScore","setWinner","List","onRenderCell","Image","src","alt","getImage","removeSetClicked","AddUserPanel","onAdd","newPlayer","setNewPlayer","setOptions","mapUserToOption","Dialog","hidden","dialogContentProps","type","DialogType","normal","modalProps","isBlocking","allowFreeform","value","createdPlayer","DialogFooter","DefaultButton","MahjongOverview","maxWidth","flexContainer","justifyContent","footerButton","refreshCount","setRefreshCount","isPlayerAddOpen","setIsPlayerAddOpen","isPlayerSelectOpen","setIsPlayerSelectOpen","currentPlayer","setCurrentPlayer","historyGames","setHistoryGames","hist","uniquePlayers","gameHistory","uniqueScores","foundScore","history","onOpenAddPlayers","openPlayer","Main","subMenuProps","version","allGamePoints","currentScore","winner","FontIcon","east","summarizedGameScore","scoreText","GameScore","CompoundButton","Persona","secondaryText","tertiaryText","size","PersonaSize","size72","playgroundOverviewClassNames","PlaygroundOverview","trainingOverviewClassNames","listText","pushups","addPushups","today","pushup","Date","date","getDate","getMonth","getFullYear","newSet","minCount","minBy","removePushups","pushUp","fromMonth","current","calcMissing","max","calcMissingAverage","daysInMonth","selectPushups","training","TrainingOverview","total","setTotal","average","setAverage","missing","setMissing","missingAverage","setMissingAverage","showAll","setShowAll","pushUps","currentDate","fromThisMonth","calcTotal","addItem","toFixed","TrainingAverage","TrainingMissing","TrainingMissingAverage","toLocaleDateString","TrainingDetails","removeClicked","MainPage","Training","Playground","Nav","groups","links","url","target","area","graph","townHall","needRoad","createBuilding","buildings","store","configureStore","reducer","mainReducer","overviewReducer","trainingReducer","playground","playgroundReducer","myTheme","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","App","initializeIcons","StrictMode","ThemeProvider","theme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.4e3e0b4d.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState, AppThunk } from \"../../app/store\";\r\nimport { saveData, isSupported, loadData } from \"../../utils/StorageUtil\";\r\n\r\nexport enum Page {\r\n  Main,\r\n  MahJong,\r\n  Training,\r\n  Playground,\r\n}\r\n\r\ninterface MainState {\r\n  page: Page;\r\n}\r\n\r\nconst initialState: MainState = {\r\n  page: Page.MahJong,\r\n};\r\n\r\nexport const mainSlice = createSlice({\r\n  name: \"main\",\r\n  initialState,\r\n  reducers: {\r\n    navigate: (state, action: PayloadAction<Page>) => {\r\n      state.page = action.payload;\r\n      saveState(state);\r\n    },\r\n    loadFailed: (state) => {\r\n      state = initialState;\r\n    },\r\n    loadSuccess: (state, action: PayloadAction<MainState>) => {\r\n      state.page = action.payload?.page ?? Page.MahJong;\r\n    },\r\n  },\r\n});\r\n\r\nconst { loadSuccess, loadFailed } = mainSlice.actions;\r\nexport const { navigate } = mainSlice.actions;\r\n\r\nconst storageName = \"Main\";\r\n\r\nfunction saveState(state: MainState) {\r\n  saveData(storageName, state);\r\n}\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n  if (isSupported) {\r\n    dispatch(loadSuccess(loadData(storageName) as MainState));\r\n  } else {\r\n    dispatch(loadFailed());\r\n  }\r\n};\r\n\r\nexport const selectPage = (state: RootState) => state.main.page;\r\n\r\nexport default mainSlice.reducer;\r\n","export const loadData = (storageName: string) => {\r\n  if (isSupported) {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(storageName) || \"\");\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const saveData = (storageName: string, data: any): boolean => {\r\n  if (isSupported) {\r\n    try {\r\n      localStorage.setItem(storageName, JSON.stringify(data));\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const isSupported = (() => {\r\n  try {\r\n    let itemBackup = localStorage.getItem(\"\");\r\n    localStorage.removeItem(\"\");\r\n    localStorage.setItem(\"\", itemBackup || \"\");\r\n    if (itemBackup === null) localStorage.removeItem(\"\");\r\n    else localStorage.setItem(\"\", itemBackup);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n})();\r\n","type supportedLocale = 'da' | 'us';\r\n\r\nlet locale: supportedLocale = 'da';\r\nexport function setLocale(value: supportedLocale) {\r\n    locale = value;\r\n}\r\n\r\n// export function getLocale(): supportedLocale {\r\n//     return locale;\r\n// }\r\n\r\nexport const t = (loc: { [key: string]: string }) => {\r\n    if (loc && loc[locale]) {\r\n        return loc[locale];\r\n    }\r\n\r\n    return loc['da'] || loc['us'] || '';\r\n};\r\n","// import uuid from \"uuid\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { find } from \"lodash\";\r\n\r\nexport interface IMahJongUser {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IMahJongScore {\r\n  gameScore: number;\r\n  points: number;\r\n  sets: IMahJongSet[];\r\n  isEast?: boolean;\r\n  isWinner?: boolean;\r\n  playerId: string;\r\n}\r\n\r\nexport enum MahJongTileTypes {\r\n  Dragon,\r\n  Wind,\r\n  Bamboo,\r\n  Circle,\r\n  Character,\r\n  Flower,\r\n}\r\n\r\nexport enum MahJongSetTypes {\r\n  Chow,\r\n  Poong,\r\n  Kong,\r\n  Pair,\r\n  Single,\r\n}\r\n\r\nexport interface IMahJongSet {\r\n  tileType: MahJongTileTypes;\r\n  setType: MahJongSetTypes;\r\n  inHand?: boolean;\r\n  oneOrNine?: boolean;\r\n  ownWind?: boolean;\r\n}\r\n\r\nexport interface IMahJongGame {\r\n  id: string;\r\n  score: IMahJongScore[];\r\n}\r\n\r\nexport function createUser(name: string): IMahJongUser {\r\n  return { id: uuidv4(), name };\r\n}\r\n\r\nexport function createGame(): IMahJongGame {\r\n  return { id: uuidv4(), score: [] };\r\n}\r\n\r\nexport function createScore(playerId: string): IMahJongScore {\r\n  return {\r\n    gameScore: 0,\r\n    points: 0,\r\n    sets: [],\r\n    playerId,\r\n  };\r\n}\r\n\r\nexport function getScore(\r\n  game: IMahJongGame,\r\n  player: IMahJongUser\r\n): IMahJongScore {\r\n  return getScoreById(game, player.id) || createScore(player.id);\r\n}\r\n\r\nfunction getScoreById(\r\n  game: IMahJongGame,\r\n  id?: string\r\n): IMahJongScore | undefined {\r\n  return find(\r\n    game.score,\r\n    (score: IMahJongScore): boolean => score.playerId === id\r\n  );\r\n}\r\n","import { t } from \"../utils/LocalizationUtil\";\r\n\r\nexport const MahJongTitle = () => t({ da: \"MahJong\" });\r\nexport const MahJongHeader = () => t({ da: \"MahJong lommeregner\", us: \"MahJong calculator\" });\r\nexport const HomeButton = () => t({ da: \"Hjem\", us: \"Home\" });\r\nexport const CloseButton = () => t({ da: \"Luk\", us: \"Close\" });\r\nexport const CancelButton = () => t({ da: \"Afbryd\", us: \"Cancel\" });\r\nexport const BackButton = () => t({ da: \"Tilbage\", us: \"Back\" });\r\nexport const SaveButton = () => t({ da: \"Gem\", us: \"Save\" });\r\nexport const SaveScoreButton = () => t({ da: \"Gem point\", us: \"Save score\" });\r\nexport const OkButton = () => t({ da: \"Ok\" });\r\nexport const AddButton = () => t({ da: \"Tilføj\", us: \"Add\" });\r\nexport const AddUserTitle = () => t({ da: \"Tilføj spiller\", us: \"Add player\" });\r\nexport const WinnerToggleLabel = () => t({ da: \"Vandt du?\", us: \"Did you win?\" });\r\nexport const EastToggleLabel = () => t({ da: \"Er du øst?\", us: \"Are you east?\" });\r\nexport const OnToggle = () => t({ da: \"Jeps\", us: \"Yes\" });\r\nexport const OffToggle = () => t({ da: \"Nope\", us: \"No way\" });\r\nexport const EditPlayersButton = () => t({ da: \"Vælg spillere\", us: \"Choose players\" });\r\nexport const ClearButton = () => t({ da: \"Ryd op\", us: \"Clear\" });\r\nexport const ClearAllButton = () => t({ da: \"Slet alt\", us: \"Remove all\" });\r\nexport const ClearAllGamesButton = () => t({ da: \"Slet alle point\", us: \"Clear all points\" });\r\nexport const ClearGameButton = () => t({ da: \"Slet point\", us: \"Clear points\" });\r\nexport const EditPlayersTitle = () => t({ da: \"Vælg spillere\", us: \"Choose players\" });\r\nexport const EditButton = () => t({ da: \"Ændre spiller\", us: \"Change player\" });\r\nexport const DeleteButton = () => t({ da: \"Slet spiller\", us: \"Delete player\" });\r\nexport const AddPlayerLabel = () => {\r\n    return t({ da: \"Tilføj ny spiller\", us: \"Add new player\" });\r\n};\r\nexport const DeletePlayerLabel = () => {\r\n    return t({ da: \"Slet spiller\", us: \"Delete player\" });\r\n};\r\nexport const CurrentScore = (points: number) => t({ da: `Score: ${points}`, us: `Score: ${points}` });\r\nexport const GameScore = (points: number) => t({ da: `Samlet score: ${points}`, us: `Total score: ${points}` });\r\nexport const FullGameScore = (points: number, allGamePoints: number) =>\r\n    t({\r\n        da: `Samlet score: ${points} (${allGamePoints})`,\r\n        us: `Total score: ${points} (${allGamePoints})`,\r\n    });\r\n\r\nexport const EditScoreTitle = () => t({ da: \"Score\", us: \"Score picker\" });\r\nexport const ChooseTileTypeLabel = () => t({ da: \"Vælg sæt type\", us: \"Choose set type\" });\r\nexport const ChooseSetTypeLabel = () => t({ da: \"Vælg antal i sæt\", us: \"Choose count in set\" });\r\nexport const InHandLabel = () => t({ da: \"Er sæt på hånden?\", us: \"Is set in hand?\" });\r\nexport const OneOrNineLabel = () => t({ da: \"Er det ener eller nier?\", us: \"Is it one or nine?\" });\r\nexport const OwnWindLabel = () => t({ da: \"Er det egen vind?\", us: \"Is it your own wind?\" });\r\nexport const DragonLabel = () => t({ da: \"Drager\", us: \"Dragons\" });\r\nexport const WindLabel = () => t({ da: \"Vinde\", us: \"Wind\" });\r\nexport const CharacterLabel = () => t({ da: \"Tal\", us: \"Characters\" });\r\nexport const BambooLabel = () => t({ da: \"Bambus\", us: \"Bamboo\" });\r\nexport const CircleLabel = () => t({ da: \"Cirkler\", us: \"Circles\" });\r\nexport const FlowerLabel = () => t({ da: \"Blomster\", us: \"Flowers\" });\r\nexport const UnknownLabel = () => t({ da: \"Ukendt\", us: \"Unknown\" });\r\nexport const ChowLabel = () => t({ da: \"Chow\" });\r\nexport const PoongLabel = () => t({ da: \"Poong\" });\r\nexport const KongLabel = () => t({ da: \"Kong\" });\r\nexport const PairLabel = () => t({ da: \"Slut par\", us: \"End pair\" });\r\nexport const SingleLabel = () => t({ da: \"Enkelt\", us: \"Single\" });\r\n\r\nexport const TrainingTitle = () => t({ da: \"Træning\", us: \"Training\" });\r\nexport const TrainingHeader = () => t({ da: \"Træning\", us: \"Training\" });\r\nexport const TrainingListHeader = () => t({ da: \"Detaljer\", us: \"Details\" });\r\nexport const TrainingShowAllLabel = () => t({ da: \"Vis alle\", us: \"Show all\" });\r\nexport const TrainingAddMenuButton = () => t({ da: \"Tilføj\", us: \"Add\" });\r\nexport const TrainingAddButton = (count: string) => t({ da: `Tilføj ${count}`, us: `Add ${count}` });\r\nexport const TrainingCount = (count: string) => t({ da: `Total: ${count}`, us: `Total: ${count}` });\r\nexport const TrainingAverage = (average: string) => t({ da: `Gennemsnit: ${average}`, us: `Average: ${average}` });\r\nexport const TrainingMissing = (count: string) => t({ da: `Mangler: ${count}`, us: `Missing: ${count}` });\r\nexport const TrainingMissingAverage = (average: string) => t({ da: `Mangler pr. dag: ${average}`, us: `Missing per day: ${average}` });\r\nexport const TrainingDetails = (count: string, date: string) => t({ da: `${date}: ${count}` });\r\n\r\nexport const PlaygroundTitle = () => t({ da: \"Ekstra\", us: \"Extra\" });\r\n","import {\r\n  ICommandBarStyles,\r\n  IStackStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IButtonStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongOverviewStyles {\r\n  commandBar: ICommandBarStyles;\r\n  dashboard: IStackStyles;\r\n  listItem: Partial<IButtonStyles>;\r\n  footerButton: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongOverviewStyles = (): IMahjongOverviewStyles => ({\r\n  commandBar: {\r\n    root: {\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n  dashboard: {\r\n    root: { padding: \"24px 0 0 0\" },\r\n  },\r\n  listItem: {\r\n    root: {\r\n      maxWidth: \"100%\",\r\n      width: \"100%\",\r\n      padding: \"20px 10px 20px 20px\",\r\n      margin: \"10px 0\",\r\n    },\r\n    flexContainer: {\r\n      justifyContent: \"flex-start\",\r\n    },\r\n  },\r\n  footerButton: {\r\n    root: {\r\n      marginTop: 30,\r\n      float: \"right\",\r\n      marginRight: 30,\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IMahjongOverviewClassNames {\r\n  page: string;\r\n  list: string;\r\n  header: string;\r\n  winnerIcon: string;\r\n  winnerIcon2: string;\r\n  eastIcon: string;\r\n}\r\n\r\nexport const mahjongOverviewClassNames = memoizeFunction(\r\n  (): IMahjongOverviewClassNames => {\r\n    return mergeStyleSets({\r\n      page: {\r\n        overflow: \"auto\",\r\n      },\r\n      list: {\r\n        margin: \"0 10px\",\r\n      },\r\n      header: {\r\n        marginLeft: \"10px\",\r\n        marginRight: \"10px\",\r\n      },\r\n      winnerIcon: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"auto\",\r\n        color: \"green\",\r\n      },\r\n      winnerIcon2: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"0px\",\r\n        color: \"green\",\r\n      },\r\n      eastIcon: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"auto\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport {\r\n  IMahJongUser,\r\n  IMahJongGame,\r\n  createGame,\r\n  createScore,\r\n  IMahJongScore,\r\n  IMahJongSet,\r\n  MahJongTileTypes,\r\n  MahJongSetTypes,\r\n} from \"../Mahjong.model\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport {\r\n  map,\r\n  find,\r\n  uniqBy,\r\n  filter,\r\n  without,\r\n  forEach,\r\n  sumBy,\r\n  some,\r\n  min,\r\n} from \"lodash\";\r\n\r\ninterface MahjongOverviewState {\r\n  players: IMahJongUser[];\r\n  games: IMahJongGame[];\r\n  currentPlayers: IMahJongUser[];\r\n  currentGame: IMahJongGame;\r\n}\r\n\r\nconst initialState: MahjongOverviewState = {\r\n  players: [],\r\n  games: [],\r\n  currentPlayers: [],\r\n  currentGame: createGame(),\r\n};\r\n\r\nexport const overviewSlice = createSlice({\r\n  name: \"mahjongOverview\",\r\n  initialState,\r\n  reducers: {\r\n    loadFailed: (state) => {\r\n      state = initialState;\r\n    },\r\n    loadSuccess: (state, action: PayloadAction<MahjongOverviewState>) => {\r\n      state.players = action.payload?.players ?? initialState.players;\r\n      state.games = action.payload?.games ?? initialState.games;\r\n      state.currentPlayers =\r\n        action.payload?.currentPlayers ?? initialState.currentPlayers;\r\n      state.currentGame =\r\n        action.payload?.currentGame ?? initialState.currentGame;\r\n      updateGameUsers(state);\r\n      updateCalculatedScore(state.currentGame);\r\n    },\r\n    setPlayers: (state, action: PayloadAction<IMahJongUser[]>) => {\r\n      state.currentPlayers = action.payload;\r\n      updateGameUsers(state);\r\n    },\r\n    addUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      state.players = uniqBy(\r\n        state.players,\r\n        (user: IMahJongUser): string => user.name\r\n      );\r\n      state.players = uniqBy(\r\n        state.players,\r\n        (user: IMahJongUser): string => user.id\r\n      );\r\n      if (\r\n        state.players &&\r\n        !find(\r\n          state.players,\r\n          (player: IMahJongUser) => player.name === action.payload.name\r\n        )\r\n      ) {\r\n        state.players.push(action.payload);\r\n      }\r\n      if (\r\n        state.currentPlayers.length < 4 &&\r\n        !find(\r\n          state.currentPlayers,\r\n          (player: IMahJongUser) => player.id === action.payload.id\r\n        )\r\n      ) {\r\n        state.currentPlayers.push(action.payload);\r\n      }\r\n      updateGameUsers(state);\r\n    },\r\n    deleteUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      if (state.players) {\r\n        state.players = filter(\r\n          state.players,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        state.currentPlayers = filter(\r\n          state.currentPlayers,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    clearGame: (state) => {\r\n      forEach(state.currentGame.score, (score: IMahJongScore) => {\r\n        score.sets = [];\r\n        score.points = 0;\r\n        score.gameScore = 0;\r\n        score.isWinner = false;\r\n        score.isEast = false;\r\n      });\r\n      saveState(state);\r\n    },\r\n    clearAllGames: (state) => {\r\n      forEach(state.currentGame.score, (score: IMahJongScore) => {\r\n        score.sets = [];\r\n        score.points = 0;\r\n        score.gameScore = 0;\r\n        score.isWinner = false;\r\n        score.isEast = false;\r\n      });\r\n      state.games = [];\r\n      saveState(state);\r\n    },\r\n    clearAll: (state) => {\r\n      state = initialState;\r\n      saveState(state);\r\n    },\r\n    updateScore: (state, action: PayloadAction<IMahJongScore>) => {\r\n      const found = find(\r\n        state.currentGame?.score,\r\n        (score: IMahJongScore): boolean =>\r\n          score.playerId === action.payload?.playerId\r\n      );\r\n      if (found) {\r\n        const otherScore = without<IMahJongScore>(\r\n          state.currentGame.score,\r\n          found\r\n        );\r\n        forEach(otherScore, (score: IMahJongScore) => {\r\n          if (action.payload.isWinner) {\r\n            score.isWinner = false;\r\n          }\r\n          if (action.payload.isEast) {\r\n            score.isEast = false;\r\n          }\r\n        });\r\n        state.currentGame.score = [...otherScore, { ...action.payload }];\r\n        updateCalculatedScore(state.currentGame);\r\n        saveState(state);\r\n      }\r\n    },\r\n    saveGame: (state) => {\r\n      updateCalculatedScore(state.currentGame);\r\n      if (\r\n        some(\r\n          state.currentGame.score,\r\n          (score: IMahJongScore): boolean => score.points !== 0\r\n        )\r\n      ) {\r\n        state.games = [...state.games, state.currentGame];\r\n        state.currentGame = createGame();\r\n        updateGameUsers(state);\r\n        saveState(state);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nfunction updateGameUsers(state: MahjongOverviewState) {\r\n  state.currentPlayers = filter(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser): boolean => {\r\n      return !!find(\r\n        state.players,\r\n        (player: IMahJongUser) => player.id === user.id\r\n      );\r\n    }\r\n  );\r\n  state.currentPlayers = uniqBy(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser): string => user.id\r\n  );\r\n  state.currentGame.score = map(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser, index: number): IMahJongScore => {\r\n      const found = find(\r\n        state.currentGame.score,\r\n        (score: IMahJongScore): boolean => score.playerId === user.id\r\n      );\r\n      return found || createScore(user.id);\r\n    }\r\n  );\r\n  saveState(state);\r\n}\r\n\r\nfunction updateCalculatedScore(game: IMahJongGame): void {\r\n  if (!game?.score || game.score.length <= 1) {\r\n    return; // Nothing to update\r\n  }\r\n\r\n  let winnerFound = false;\r\n  forEach(game.score, (score: IMahJongScore) => {\r\n    score.points = scoreToPoints(score);\r\n    winnerFound = winnerFound || !!score.isWinner;\r\n  });\r\n\r\n  if (!winnerFound) {\r\n    return;\r\n  }\r\n\r\n  forEach(game.score, (scoreToCalculate: IMahJongScore) => {\r\n    scoreToCalculate.gameScore = sumBy(\r\n      game.score,\r\n      (score: IMahJongScore): number => {\r\n        if (score.playerId === scoreToCalculate.playerId) {\r\n          return 0; // Skip\r\n        }\r\n\r\n        let difference = score.isWinner ? 0 : scoreToCalculate.points;\r\n        if (!scoreToCalculate.isWinner) {\r\n          difference -= score.points;\r\n        }\r\n\r\n        return score.isEast || scoreToCalculate.isEast\r\n          ? difference * 2\r\n          : difference;\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nexport const DefaultWinnerPoints = 10;\r\n\r\nexport function scoreToPoints(score: IMahJongScore): number {\r\n  let points = score.isWinner ? DefaultWinnerPoints : 0;\r\n  points += sumBy(score.sets, (set: IMahJongSet): number => {\r\n    if (set.tileType === MahJongTileTypes.Flower) {\r\n      switch (set.setType) {\r\n        // Each flower tile yields 4 points\r\n        case MahJongSetTypes.Pair:\r\n          return 8;\r\n        case MahJongSetTypes.Chow:\r\n        case MahJongSetTypes.Poong:\r\n          return 12;\r\n        case MahJongSetTypes.Kong:\r\n          return 16;\r\n        case MahJongSetTypes.Single:\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n\r\n    // Special end pair rule:\r\n    if (\r\n      set.setType === MahJongSetTypes.Pair &&\r\n      (set.tileType === MahJongTileTypes.Dragon ||\r\n        (set.tileType === MahJongTileTypes.Wind && set.ownWind))\r\n    ) {\r\n      return 2;\r\n    }\r\n\r\n    // All other tile types:\r\n    let sub = 0;\r\n    if (set.setType === MahJongSetTypes.Poong) {\r\n      sub = 2;\r\n    } else if (set.setType === MahJongSetTypes.Kong) {\r\n      sub = 8;\r\n    }\r\n    if (\r\n      set.oneOrNine ||\r\n      set.tileType === MahJongTileTypes.Dragon ||\r\n      set.tileType === MahJongTileTypes.Wind\r\n    ) {\r\n      sub *= 2;\r\n    }\r\n    if (set.inHand) {\r\n      sub *= 2;\r\n    }\r\n\r\n    return sub;\r\n  });\r\n\r\n  let honorFactor = 1;\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        !!set.ownWind &&\r\n        set.tileType === MahJongTileTypes.Wind &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in own wind\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        set.tileType === MahJongTileTypes.Dragon &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in dragons\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        set.tileType === MahJongTileTypes.Flower &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in flowers\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (score.isWinner) {\r\n    let containDragonsOrWinds = false;\r\n    let containBamboo = 0;\r\n    let containCircle = 0;\r\n    let containCharacter = 0;\r\n    forEach(score.sets, (set: IMahJongSet) => {\r\n      if (set.tileType === MahJongTileTypes.Bamboo) {\r\n        containBamboo = 1;\r\n      }\r\n      if (set.tileType === MahJongTileTypes.Circle) {\r\n        containCircle = 1;\r\n      }\r\n      if (set.tileType === MahJongTileTypes.Character) {\r\n        containCharacter = 1;\r\n      }\r\n      if (\r\n        set.tileType === MahJongTileTypes.Dragon ||\r\n        set.tileType === MahJongTileTypes.Wind\r\n      ) {\r\n        containDragonsOrWinds = true;\r\n      }\r\n    });\r\n\r\n    if (containBamboo + containCircle + containCharacter === 1) {\r\n      if (containDragonsOrWinds) {\r\n        honorFactor *= 2;\r\n      } else {\r\n        honorFactor *= 8;\r\n      }\r\n    }\r\n  }\r\n\r\n  return min([points * honorFactor, 300]) ?? 0;\r\n}\r\n\r\nexport interface IMahJongHistory {\r\n  playerId: string;\r\n  score: number;\r\n}\r\n\r\nexport function history(\r\n  games: IMahJongGame[],\r\n  players: IMahJongUser[]\r\n): IMahJongHistory[] {\r\n  const uniquePlayers = uniqBy(\r\n    players,\r\n    (user: IMahJongUser): string => user.id\r\n  );\r\n\r\n  const gameHistory = filter(games, (game: IMahJongGame): boolean => {\r\n    const uniqueScores = uniqBy(\r\n      game.score,\r\n      (score: IMahJongScore): string => score.playerId\r\n    );\r\n    if (uniquePlayers.length !== uniqueScores.length) {\r\n      return false;\r\n    }\r\n    return !some(\r\n      uniquePlayers,\r\n      (player: IMahJongUser) =>\r\n        !find(\r\n          uniqueScores,\r\n          (score: IMahJongScore) => score.playerId === player.id\r\n        )\r\n    );\r\n  });\r\n\r\n  if (gameHistory.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  return map(\r\n    uniquePlayers,\r\n    (user: IMahJongUser): IMahJongHistory => {\r\n      return {\r\n        playerId: user.id,\r\n        score: sumBy(gameHistory, (game: IMahJongGame): number => {\r\n          const foundScore = find(\r\n            game.score,\r\n            (score: IMahJongScore) => score.playerId === user.id\r\n          );\r\n          return foundScore?.gameScore ?? 0;\r\n        }),\r\n      };\r\n    }\r\n  );\r\n}\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const {\r\n  setPlayers,\r\n  addUser,\r\n  deleteUser,\r\n  clearGame,\r\n  clearAllGames,\r\n  clearAll,\r\n  updateScore,\r\n  saveGame,\r\n} = overviewSlice.actions;\r\n\r\nconst storageName = \"Mahjong\";\r\n\r\nfunction saveState(state: MahjongOverviewState) {\r\n  saveData(storageName, state);\r\n}\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n  if (isSupported) {\r\n    dispatch(loadSuccess(loadData(storageName) as MahjongOverviewState));\r\n  } else {\r\n    dispatch(loadFailed());\r\n  }\r\n};\r\n\r\nexport const selectPlayers = (state: RootState) =>\r\n  state.mahjongOverview.players || [];\r\nexport const selectGames = (state: RootState) =>\r\n  state.mahjongOverview.games || [];\r\nexport const selectCurrentGame = (state: RootState) =>\r\n  state.mahjongOverview.currentGame || createGame();\r\nexport const selectCurrentPlayers = (state: RootState) =>\r\n  state.mahjongOverview.currentPlayers || [];\r\n\r\nexport default overviewSlice.reducer;\r\n","import {\r\n  IButtonStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IComboBoxStyles,\r\n  ITextFieldStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface ISelectUserPanelStyles {\r\n  combobox: Partial<IComboBoxStyles>;\r\n  footer: Partial<IButtonStyles>;\r\n  firstRoot: Partial<ITextFieldStyles>;\r\n  firstContainer: Partial<IComboBoxStyles>;\r\n}\r\n\r\nexport const getSelectUserPanelStyles = (): ISelectUserPanelStyles => ({\r\n  footer: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  combobox: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  firstRoot: {\r\n    root: {\r\n      flexGrow: \"1\",\r\n      flexShrink: \"1\",\r\n    },\r\n  },\r\n  firstContainer: {\r\n    container: {\r\n      flexGrow: \"1\",\r\n      flexShrink: \"1\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ISelectUserPanelClassNames {\r\n  wrapper: string;\r\n}\r\n\r\nexport const selectUserPanelClassNames = memoizeFunction(\r\n  (): ISelectUserPanelClassNames => {\r\n    return mergeStyleSets({\r\n      wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n        margin: \"30px 5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  classNamesFunction,\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  Panel,\r\n  PrimaryButton,\r\n  IconButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  selectUserPanelClassNames,\r\n  getSelectUserPanelStyles,\r\n  ISelectUserPanelClassNames,\r\n} from \"./SelectUserPanel.styles\";\r\nimport { map, find, filter, isEmpty } from \"lodash\";\r\nimport { IMahJongUser, createUser } from \"../Mahjong.model\";\r\nimport {\r\n  EditPlayersTitle,\r\n  CloseButton,\r\n  DeleteButton,\r\n  DeletePlayerLabel,\r\n  OkButton,\r\n} from \"../../../localization/DisplayStrings\";\r\n\r\nexport interface SelectUserPanelProps {\r\n  isOpen: boolean;\r\n  onSave: (selectedPlayers: IMahJongUser[]) => void;\r\n  onDelete: (player: IMahJongUser) => void;\r\n  allPlayers: IMahJongUser[];\r\n  currentPlayers: IMahJongUser[];\r\n}\r\n\r\nexport function SelectUserPanel(props: SelectUserPanelProps): JSX.Element {\r\n  const classNames = classNamesFunction<{}, ISelectUserPanelClassNames>()(\r\n    selectUserPanelClassNames\r\n  );\r\n  const styles = getSelectUserPanelStyles();\r\n\r\n  const { isOpen, onSave, onDelete, allPlayers, currentPlayers } = props;\r\n  const [selectedPlayers, setSelectedPlayers] = React.useState<IMahJongUser[]>(\r\n    []\r\n  );\r\n  const [userToDelete, setUserToDelete] = React.useState<IMahJongUser | null>(\r\n    null\r\n  );\r\n\r\n  useEffect((): void => {\r\n    const selected = [...currentPlayers];\r\n    let i = selected.length;\r\n    for (i; i < 4; i++) {\r\n      selected.push(createUser(\"\"));\r\n    }\r\n    setSelectedPlayers(selected);\r\n  }, [currentPlayers]);\r\n\r\n  const onChange = (selectedIndex: number) => (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    const selected = [...selectedPlayers];\r\n    if (selected.length > selectedIndex) {\r\n      selected[selectedIndex] = option?.data || createUser(\"\");\r\n    }\r\n    setSelectedPlayers(selected);\r\n  };\r\n\r\n  const onSaveClicked = () => {\r\n    onSave(\r\n      filter(\r\n        selectedPlayers,\r\n        (user: IMahJongUser): boolean => !isEmpty(user.name)\r\n      )\r\n    );\r\n  };\r\n\r\n  const options = [\r\n    { key: \"_\", text: \"\" },\r\n    ...map(\r\n      allPlayers,\r\n      (user: IMahJongUser): IComboBoxOption => {\r\n        return { key: user.id, text: user.name, data: user };\r\n      }\r\n    ),\r\n  ];\r\n\r\n  const filteredOptions = (user: IMahJongUser): IComboBoxOption[] => {\r\n    const filtered = filter(options, (option: IComboBoxOption): boolean => {\r\n      return (\r\n        option.key === user.id ||\r\n        !find(\r\n          selectedPlayers,\r\n          (selected: IMahJongUser): boolean => option.key === selected.id\r\n        )\r\n      );\r\n    });\r\n    return filtered.length === 1 ? [] : filtered;\r\n  };\r\n\r\n  const renderComboBox = (user: IMahJongUser, key: number): JSX.Element => (\r\n    <ComboBox\r\n      key={key}\r\n      aria-label=\"\"\r\n      selectedKey={user.id}\r\n      autoComplete=\"on\"\r\n      options={filteredOptions(user)}\r\n      onChange={onChange(key)}\r\n      styles={styles.combobox}\r\n    />\r\n  );\r\n\r\n  const allComboboxes = map(\r\n    selectedPlayers,\r\n    (user: IMahJongUser, index: number): JSX.Element =>\r\n      renderComboBox(user, index)\r\n  );\r\n\r\n  const onDeleteUserChange = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    setUserToDelete(option?.data);\r\n  };\r\n  const onDeleteUserClicked = () => {\r\n    if (userToDelete) {\r\n      onDelete(userToDelete);\r\n    }\r\n  };\r\n\r\n  const renderDeleteCombobox = (): JSX.Element => {\r\n    return (\r\n      <div className={classNames.wrapper}>\r\n        <ComboBox\r\n          label={DeletePlayerLabel()}\r\n          aria-label=\"\"\r\n          autoComplete=\"on\"\r\n          selectedKey={userToDelete?.id}\r\n          options={options.length === 1 ? [] : options}\r\n          onChange={onDeleteUserChange}\r\n          styles={styles.firstContainer}\r\n        />\r\n        <IconButton\r\n          iconProps={{ iconName: \"Delete\" }}\r\n          onClick={onDeleteUserClicked}\r\n          title={DeleteButton()}\r\n          ariaLabel={DeleteButton()}\r\n          disabled={isEmpty(userToDelete?.id)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onRenderFooterContent = () => (\r\n    <div>\r\n      <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n        {OkButton()}\r\n      </PrimaryButton>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={isOpen}\r\n        isLightDismiss\r\n        onDismiss={onSaveClicked}\r\n        headerText={EditPlayersTitle()}\r\n        closeButtonAriaLabel={CloseButton()}\r\n        onRenderFooterContent={onRenderFooterContent}\r\n        isFooterAtBottom={true}\r\n      >\r\n        {allComboboxes}\r\n        {renderDeleteCombobox()}\r\n      </Panel>\r\n    </div>\r\n  );\r\n}\r\n","import { ICommandBarStyles, IStackStyles, memoizeFunction, mergeStyleSets, IButtonStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongDetailsStyles {\r\n    commandBar: ICommandBarStyles;\r\n    dashboard: IStackStyles;\r\n    listButton: Partial<IButtonStyles>;\r\n    footer: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongDetailsStyles = (): IMahjongDetailsStyles => ({\r\n    commandBar: {\r\n        root: {\r\n            padding: \"5px\",\r\n        },\r\n    },\r\n    dashboard: {\r\n        root: { padding: \"24px 0 0 0\" },\r\n    },\r\n    listButton: {\r\n        root: {\r\n            marginTop: \"10px\",\r\n            marginLeft: \"auto\",\r\n        },\r\n    },\r\n    footer: {\r\n        root: {\r\n            marginTop: 30,\r\n            float: \"right\",\r\n            marginRight: 30,\r\n        },\r\n    },\r\n});\r\n\r\nexport interface IMahjongDetailsClassNames {\r\n    page: string;\r\n    content: string;\r\n    listItem: string;\r\n    listDescription: string;\r\n}\r\n\r\nexport const mahjongDetailsClassNames = memoizeFunction(\r\n    (): IMahjongDetailsClassNames => {\r\n        return mergeStyleSets({\r\n            page: {\r\n                overflow: \"auto\",\r\n                // background: '#F8F8F9'\r\n            },\r\n            content: {\r\n                margin: \"10px\",\r\n            },\r\n            listItem: {\r\n                display: \"flex\",\r\n                margin: \"10px\",\r\n            },\r\n            listDescription: {\r\n                margin: \"0 20px\",\r\n                padding: \"5px\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import {\r\n  IButtonStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IChoiceGroupOptionStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IScorePanelStyles {\r\n  footer: Partial<IButtonStyles>;\r\n  choiceGroup: Partial<IChoiceGroupOptionStyles>;\r\n}\r\n\r\nexport const getScorePanelStyles = (): IScorePanelStyles => ({\r\n  footer: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  choiceGroup: {\r\n    choiceFieldWrapper: {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IScorePanelClassNames {\r\n  wrapper: string;\r\n}\r\n\r\nexport const scorePanelClassNames = memoizeFunction(\r\n  (): IScorePanelClassNames => {\r\n    return mergeStyleSets({\r\n      wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n        margin: \"30px 5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  DragonLabel,\r\n  WindLabel,\r\n  BambooLabel,\r\n  CircleLabel,\r\n  CharacterLabel,\r\n  FlowerLabel,\r\n  UnknownLabel,\r\n  SingleLabel,\r\n  PairLabel,\r\n  ChowLabel,\r\n  PoongLabel,\r\n  KongLabel,\r\n} from \"../../localization/DisplayStrings\";\r\nimport MahJongGreenDragon from \"../../images/MahjongGreenDragon.jpg\";\r\nimport MahJongEast from \"../../images/MahjongEast.jpg\";\r\nimport MahJongBamboo6 from \"../../images/MahjongBamboo6.jpg\";\r\nimport MahJongBambooChow from \"../../images/MahjongBambooChow.jpg\";\r\nimport MahJongCircle5 from \"../../images/MahjongCircle5.jpg\";\r\nimport MahJongCircleChow from \"../../images/MahjongCircleChow.jpg\";\r\nimport MahJongCharacter4 from \"../../images/MahjongCharacter4.jpg\";\r\nimport MahJongCharacterChow from \"../../images/MahjongCharacterChow.jpg\";\r\nimport MahJongSeason1 from \"../../images/MahjongSeason1.jpg\";\r\nimport MahJongSeason2 from \"../../images/MahjongSeason2.jpg\";\r\nimport MahJongSeason3 from \"../../images/MahjongSeason3.jpg\";\r\nimport MahJongSeason4 from \"../../images/MahjongSeason4.jpg\";\r\nimport MahJongFlower2 from \"../../images/MahjongFlower2.jpg\";\r\nimport {\r\n  MahJongTileTypes,\r\n  MahJongSetTypes,\r\n  IMahJongSet,\r\n} from \"./Mahjong.model\";\r\n\r\nexport function displayTileType(tile: MahJongTileTypes) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Dragon:\r\n      return DragonLabel();\r\n    case MahJongTileTypes.Wind:\r\n      return WindLabel();\r\n    case MahJongTileTypes.Bamboo:\r\n      return BambooLabel();\r\n    case MahJongTileTypes.Circle:\r\n      return CircleLabel();\r\n    case MahJongTileTypes.Character:\r\n      return CharacterLabel();\r\n    case MahJongTileTypes.Flower:\r\n      return FlowerLabel();\r\n    default:\r\n      return UnknownLabel();\r\n  }\r\n}\r\n\r\nexport function imageTileType(tile: MahJongTileTypes, index?: number) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Dragon:\r\n      return MahJongGreenDragon;\r\n    case MahJongTileTypes.Wind:\r\n      return MahJongEast;\r\n    case MahJongTileTypes.Bamboo:\r\n      return MahJongBamboo6;\r\n    case MahJongTileTypes.Circle:\r\n      return MahJongCircle5;\r\n    case MahJongTileTypes.Character:\r\n      return MahJongCharacter4;\r\n    case MahJongTileTypes.Flower:\r\n      if (index === 1) {\r\n        return MahJongSeason1;\r\n      }\r\n      if (index === 2) {\r\n        return MahJongSeason2;\r\n      }\r\n      if (index === 3) {\r\n        return MahJongSeason3;\r\n      }\r\n      if (index === 6) {\r\n        return MahJongFlower2;\r\n      }\r\n      return MahJongSeason4;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\nexport function imageSet(item?: IMahJongSet) {\r\n  if (!item) {\r\n    return [];\r\n  }\r\n\r\n  if (item.tileType === MahJongTileTypes.Flower) {\r\n    return getFlowerImageSet(item.setType);\r\n  }\r\n\r\n  return getOtherImageSet(item.tileType, item.setType);\r\n}\r\n\r\nfunction getFlowerImageSet(setType: MahJongSetTypes) {\r\n  switch (setType) {\r\n    case MahJongSetTypes.Single:\r\n      return [imageTileType(MahJongTileTypes.Flower)];\r\n    case MahJongSetTypes.Pair:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 6),\r\n        imageTileType(MahJongTileTypes.Flower, 3),\r\n      ];\r\n    case MahJongSetTypes.Chow:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 6),\r\n      ];\r\n    case MahJongSetTypes.Poong:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 4),\r\n      ];\r\n    case MahJongSetTypes.Kong:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 3),\r\n        imageTileType(MahJongTileTypes.Flower, 4),\r\n      ];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction getOtherImageSet(\r\n  tileType: MahJongTileTypes,\r\n  setType: MahJongSetTypes\r\n) {\r\n  const image = imageTileType(tileType);\r\n  switch (setType) {\r\n    case MahJongSetTypes.Pair:\r\n      return [image, image];\r\n    case MahJongSetTypes.Chow:\r\n      return imageChowType(tileType);\r\n    case MahJongSetTypes.Poong:\r\n      return [image, image, image];\r\n    case MahJongSetTypes.Kong:\r\n      return [image, image, image, image];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction imageChowType(tile: MahJongTileTypes) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Bamboo:\r\n      return [MahJongBambooChow];\r\n    case MahJongTileTypes.Circle:\r\n      return [MahJongCircleChow];\r\n    case MahJongTileTypes.Character:\r\n      return [MahJongCharacterChow];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nexport function displaySetType(set: MahJongSetTypes) {\r\n  switch (set) {\r\n    case MahJongSetTypes.Single:\r\n      return SingleLabel();\r\n    case MahJongSetTypes.Pair:\r\n      return PairLabel();\r\n    case MahJongSetTypes.Chow:\r\n      return ChowLabel();\r\n    case MahJongSetTypes.Poong:\r\n      return PoongLabel();\r\n    case MahJongSetTypes.Kong:\r\n      return KongLabel();\r\n    default:\r\n      return UnknownLabel();\r\n  }\r\n}\r\n","import {\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  Panel,\r\n  PrimaryButton,\r\n  IChoiceGroupOption,\r\n  ChoiceGroup,\r\n  Stack,\r\n  Toggle,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { getScorePanelStyles } from \"./ScorePanel.styles\";\r\nimport {\r\n  IMahJongSet,\r\n  MahJongSetTypes,\r\n  MahJongTileTypes,\r\n} from \"../Mahjong.model\";\r\nimport {\r\n  CloseButton,\r\n  OkButton,\r\n  EditScoreTitle,\r\n  ChooseTileTypeLabel,\r\n  OnToggle,\r\n  OffToggle,\r\n  InHandLabel,\r\n  OneOrNineLabel,\r\n  OwnWindLabel,\r\n  ChooseSetTypeLabel,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport {\r\n  displayTileType,\r\n  displaySetType,\r\n  imageTileType,\r\n} from \"../MahjongDisplay\";\r\n\r\nexport interface ScorePanelProps {\r\n  isOpen: boolean;\r\n  onClose: (set: IMahJongSet) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport function ScorePanel(props: ScorePanelProps): JSX.Element {\r\n  const styles = getScorePanelStyles();\r\n\r\n  const { isOpen, onClose, onCancel } = props;\r\n  const [setType, setSetType] = React.useState<MahJongSetTypes>(\r\n    MahJongSetTypes.Poong\r\n  );\r\n  const [tileType, setTileType] = React.useState<MahJongTileTypes>(\r\n    MahJongTileTypes.Bamboo\r\n  );\r\n  const [inHand, setInHand] = React.useState(false);\r\n  const [oneOrNine, setOneOrNine] = React.useState(false);\r\n  const [ownWind, setOwnWind] = React.useState(false);\r\n\r\n  useEffect((): void => {\r\n    setSetType(MahJongSetTypes.Poong);\r\n    setTileType(MahJongTileTypes.Bamboo);\r\n    setInHand(false);\r\n    setOneOrNine(false);\r\n    setOwnWind(false);\r\n  }, [isOpen]);\r\n\r\n  const onSaveClicked = () => {\r\n    onClose({\r\n      tileType,\r\n      setType,\r\n      inHand,\r\n      oneOrNine,\r\n      ownWind,\r\n    });\r\n  };\r\n  const onChangeInHand = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setInHand(!!checked);\r\n  };\r\n  const onChangeOneOrNine = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setOneOrNine(!!checked);\r\n  };\r\n  const onChangeOwnWind = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setOwnWind(!!checked);\r\n  };\r\n  const onChangeTileType = (\r\n    ev?: React.FormEvent<HTMLElement | HTMLInputElement>,\r\n    option?: IChoiceGroupOption\r\n  ) => {\r\n    const tileType = parseInt(\r\n      option?.key ?? MahJongTileTypes.Bamboo.toString()\r\n    ) as MahJongTileTypes;\r\n    if (tileType === MahJongTileTypes.Flower) {\r\n      if (setType === MahJongSetTypes.Poong) {\r\n        setSetType(MahJongSetTypes.Single);\r\n      }\r\n    } else if (setType === MahJongSetTypes.Single) {\r\n      setSetType(MahJongSetTypes.Poong);\r\n    }\r\n    setTileType(tileType);\r\n  };\r\n  const onChangeSetType = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    setSetType((option?.key ?? MahJongSetTypes.Poong) as MahJongSetTypes);\r\n  };\r\n\r\n  const getTileOption = (\r\n    key: MahJongTileTypes,\r\n    disabled?: boolean\r\n  ): IChoiceGroupOption => {\r\n    return {\r\n      key: key.toString(),\r\n      imageSrc: imageTileType(key),\r\n      selectedImageSrc: imageTileType(key),\r\n      imageSize: { width: 40, height: 55 },\r\n      imageAlt: displayTileType(key),\r\n      text: displayTileType(key),\r\n      disabled,\r\n      styles: styles.choiceGroup,\r\n    };\r\n  };\r\n\r\n  const getTileOptions = (): IChoiceGroupOption[] => {\r\n    // const isSingle = setType === MahJongSetTypes.Single;\r\n    const isChow = setType === MahJongSetTypes.Chow;\r\n    return [\r\n      getTileOption(MahJongTileTypes.Dragon, isChow),\r\n      getTileOption(MahJongTileTypes.Wind, isChow),\r\n      getTileOption(MahJongTileTypes.Character),\r\n      getTileOption(MahJongTileTypes.Circle),\r\n      getTileOption(MahJongTileTypes.Bamboo),\r\n      getTileOption(MahJongTileTypes.Flower, isChow),\r\n    ];\r\n  };\r\n\r\n  const getSetOption = (key: MahJongSetTypes): IComboBoxOption => {\r\n    return { key, text: displaySetType(key) };\r\n  };\r\n\r\n  const getSetOptions = (): IComboBoxOption[] => {\r\n    const options = [];\r\n    if (\r\n      tileType === MahJongTileTypes.Bamboo ||\r\n      tileType === MahJongTileTypes.Circle ||\r\n      tileType === MahJongTileTypes.Character\r\n    ) {\r\n      options.push(getSetOption(MahJongSetTypes.Chow));\r\n    }\r\n\r\n    options.push(getSetOption(MahJongSetTypes.Poong));\r\n    options.push(getSetOption(MahJongSetTypes.Kong));\r\n    options.push(getSetOption(MahJongSetTypes.Pair));\r\n\r\n    if (tileType === MahJongTileTypes.Flower) {\r\n      options.push(getSetOption(MahJongSetTypes.Single));\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  // <DefaultButton styles={styles.footer} onClick={onCancel}>{CancelButton()}</DefaultButton>;\r\n  const onRenderFooterContent = () => (\r\n    <div>\r\n      <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n        {OkButton()}\r\n      </PrimaryButton>\r\n    </div>\r\n  );\r\n\r\n  const isInHandVisible = tileType !== MahJongTileTypes.Flower;\r\n  const isOneOrNineVisible =\r\n    tileType === MahJongTileTypes.Bamboo ||\r\n    tileType === MahJongTileTypes.Circle ||\r\n    tileType === MahJongTileTypes.Character;\r\n  const isOwnWindVisible = tileType === MahJongTileTypes.Wind;\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={isOpen}\r\n        isLightDismiss\r\n        onDismiss={onCancel}\r\n        headerText={EditScoreTitle()}\r\n        closeButtonAriaLabel={CloseButton()}\r\n        onRenderFooterContent={onRenderFooterContent}\r\n        isFooterAtBottom={true}\r\n      >\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n          <ChoiceGroup\r\n            label={ChooseTileTypeLabel()}\r\n            selectedKey={tileType.toString()}\r\n            onChange={onChangeTileType}\r\n            options={getTileOptions()}\r\n          />\r\n          <ComboBox\r\n            label={ChooseSetTypeLabel()}\r\n            aria-label=\"\"\r\n            autoComplete=\"on\"\r\n            selectedKey={setType}\r\n            options={getSetOptions()}\r\n            onChange={onChangeSetType}\r\n          />\r\n          {isInHandVisible && (\r\n            <Toggle\r\n              label={InHandLabel()}\r\n              checked={inHand}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeInHand}\r\n            />\r\n          )}\r\n          {isOneOrNineVisible && (\r\n            <Toggle\r\n              label={OneOrNineLabel()}\r\n              checked={oneOrNine}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeOneOrNine}\r\n            />\r\n          )}\r\n          {isOwnWindVisible && (\r\n            <Toggle\r\n              label={OwnWindLabel()}\r\n              checked={ownWind}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeOwnWind}\r\n            />\r\n          )}\r\n        </Stack>\r\n      </Panel>\r\n    </div>\r\n  );\r\n}\r\n","import { CommandBar, ICommandBarItemProps, classNamesFunction, Toggle, Stack, List, Image, IconButton, PrimaryButton } from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { mahjongDetailsClassNames, getMahjongDetailsStyles, IMahjongDetailsClassNames } from \"./MahjongDetails.styles\";\r\nimport {\r\n    BackButton,\r\n    EastToggleLabel,\r\n    WinnerToggleLabel,\r\n    OnToggle,\r\n    OffToggle,\r\n    CurrentScore,\r\n    AddButton,\r\n    DeleteButton,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { updateScore, selectCurrentGame, scoreToPoints } from \"../overview/MahjongOverviewSlice\";\r\nimport { IMahJongUser, IMahJongScore, getScore, createScore, IMahJongSet } from \"../Mahjong.model\";\r\nimport { ScorePanel } from \"../scorePanel/ScorePanel\";\r\nimport { displayTileType, displaySetType, imageSet } from \"../MahjongDisplay\";\r\nimport { map, without } from \"lodash\";\r\n\r\nexport interface MahjongDetailsProps {\r\n    user: IMahJongUser;\r\n    onNavigateBack: () => void;\r\n}\r\n\r\nexport function MahjongDetails(props: MahjongDetailsProps): JSX.Element {\r\n    const classNames = classNamesFunction<{}, IMahjongDetailsClassNames>()(mahjongDetailsClassNames);\r\n    const styles = getMahjongDetailsStyles();\r\n\r\n    const { user, onNavigateBack } = props;\r\n\r\n    const currentGame = useSelector(selectCurrentGame);\r\n    const [userScore, setUserScore] = React.useState<IMahJongScore | undefined>(undefined);\r\n    const [showScorePanel, setShowScorePanel] = React.useState(false);\r\n\r\n    useEffect((): void => {\r\n        if (user && currentGame) {\r\n            setUserScore(getScore(currentGame, user));\r\n        }\r\n    }, [user, currentGame]);\r\n\r\n    const initialScore = createScore(\"\");\r\n    const setWinner = (isWinner?: boolean) => {\r\n        const tempScore = {\r\n            ...initialScore,\r\n            ...userScore,\r\n            isWinner,\r\n        };\r\n        tempScore.points = scoreToPoints(tempScore);\r\n        setUserScore(tempScore);\r\n    };\r\n    const setEast = (isEast?: boolean) => {\r\n        setUserScore({ ...initialScore, ...userScore, isEast });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const closeDetails = () => {\r\n        if (userScore) {\r\n            dispatch(updateScore(userScore));\r\n        }\r\n        onNavigateBack();\r\n    };\r\n    const closeScorePanel = (set: IMahJongSet) => {\r\n        if (userScore) {\r\n            const tempScore = {\r\n                ...initialScore,\r\n                ...userScore,\r\n                sets: [...(userScore.sets || []), set],\r\n            };\r\n            tempScore.points = scoreToPoints(tempScore);\r\n            setUserScore(tempScore);\r\n        }\r\n        setShowScorePanel(false);\r\n    };\r\n    const removeSetClicked = (set: IMahJongSet) => {\r\n        if (userScore) {\r\n            const tempScore = {\r\n                ...initialScore,\r\n                ...userScore,\r\n                sets: without(userScore.sets, set),\r\n            };\r\n            tempScore.points = scoreToPoints(tempScore);\r\n            setUserScore(tempScore);\r\n        }\r\n    };\r\n    const cancelScorePanel = () => setShowScorePanel(false);\r\n    const onshowScorePanel = () => {\r\n        setShowScorePanel(true);\r\n    };\r\n    const onChangeWinner = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => setWinner(checked);\r\n    const onChangeEast = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => setEast(checked);\r\n\r\n    const items: ICommandBarItemProps[] = [\r\n        {\r\n            key: \"Back\",\r\n            name: BackButton(),\r\n            iconProps: {\r\n                iconName: \"Back\",\r\n            },\r\n            onClick: closeDetails,\r\n        },\r\n        {\r\n            key: \"Score\",\r\n            name: AddButton(),\r\n            iconProps: {\r\n                iconName: \"6PointStar\",\r\n            },\r\n            onClick: onshowScorePanel,\r\n        },\r\n    ];\r\n\r\n    const getImage = (item: IMahJongSet): JSX.Element[] | JSX.Element => {\r\n        return map(\r\n            imageSet(item),\r\n            (imageSrc, index): JSX.Element => {\r\n                return <Image key={index} src={imageSrc} alt={displayTileType(item.tileType)} height={55} />;\r\n            }\r\n        );\r\n    };\r\n\r\n    const onRenderCell = (item?: IMahJongSet): JSX.Element | null => {\r\n        if (!item) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames.listItem}>\r\n                {getImage(item)}\r\n                <div className={classNames.listDescription}>\r\n                    <div>{displayTileType(item?.tileType)}</div>\r\n                    <div>{displaySetType(item?.setType)}</div>\r\n                </div>\r\n                <IconButton\r\n                    iconProps={{ iconName: \"Delete\" }}\r\n                    title={DeleteButton()}\r\n                    ariaLabel={DeleteButton()}\r\n                    onClick={() => {\r\n                        removeSetClicked(item);\r\n                    }}\r\n                    styles={styles.listButton}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={classNames.page}>\r\n            <CommandBar items={items} styles={styles.commandBar} />\r\n            <div className={classNames.content}>\r\n                <h1>{user.name}</h1>\r\n                <p>{CurrentScore(userScore?.points ?? 0)}</p>\r\n                <Stack tokens={{ childrenGap: 10 }}>\r\n                    <Toggle\r\n                        label={WinnerToggleLabel()}\r\n                        checked={userScore?.isWinner}\r\n                        inlineLabel\r\n                        onText={OnToggle()}\r\n                        offText={OffToggle()}\r\n                        onChange={onChangeWinner}\r\n                    />\r\n                    <Toggle\r\n                        label={EastToggleLabel()}\r\n                        checked={userScore?.isEast}\r\n                        inlineLabel\r\n                        onText={OnToggle()}\r\n                        offText={OffToggle()}\r\n                        onChange={onChangeEast}\r\n                    />\r\n                </Stack>\r\n                <List items={userScore?.sets} onRenderCell={onRenderCell} />\r\n                <PrimaryButton styles={styles.footer} onClick={onshowScorePanel}>\r\n                    {AddButton()}\r\n                </PrimaryButton>\r\n            </div>\r\n            <ScorePanel isOpen={showScorePanel} onClose={closeScorePanel} onCancel={cancelScorePanel} />\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  PrimaryButton,\r\n  DefaultButton,\r\n  Dialog,\r\n  DialogType,\r\n  DialogFooter,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { map } from \"lodash\";\r\nimport { IMahJongUser, createUser } from \"../Mahjong.model\";\r\nimport {\r\n  OkButton,\r\n  CancelButton,\r\n  AddUserTitle,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../overview/MahjongOverviewSlice\";\r\n\r\nexport interface AddUserPanelProps {\r\n  isOpen: boolean;\r\n  onAdd: (player: IMahJongUser) => void;\r\n  onCancel: () => void;\r\n  allPlayers: IMahJongUser[];\r\n}\r\n\r\nexport function AddUserPanel(props: AddUserPanelProps): JSX.Element {\r\n  const { isOpen, onAdd, onCancel, allPlayers } = props;\r\n  const [newPlayer, setNewPlayer] = React.useState<IMahJongUser | undefined>();\r\n  const [options, setOptions] = React.useState<IComboBoxOption[]>([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect((): void => {\r\n    setNewPlayer(undefined);\r\n  }, [isOpen]);\r\n\r\n  const mapUserToOption = (user: IMahJongUser): IComboBoxOption => {\r\n    return { key: user.id, text: user.name, data: user };\r\n  };\r\n\r\n  useEffect((): void => {\r\n    setOptions(map(allPlayers, mapUserToOption));\r\n  }, [allPlayers]);\r\n\r\n  const onSaveClicked = () => {\r\n    if (newPlayer) {\r\n      onAdd(newPlayer);\r\n    }\r\n  };\r\n\r\n  const onAddUserChange = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption,\r\n    index?: number,\r\n    value?: string\r\n  ) => {\r\n    if (option?.data) {\r\n      setNewPlayer(option.data);\r\n    } else {\r\n      const text: string | undefined = option?.text || value;\r\n      if (text) {\r\n        const createdPlayer = createUser(text);\r\n        dispatch(addUser(createdPlayer));\r\n        setNewPlayer(createdPlayer);\r\n        setOptions([...options, mapUserToOption(createdPlayer)]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      hidden={!isOpen}\r\n      onDismiss={onCancel}\r\n      dialogContentProps={{\r\n        type: DialogType.normal,\r\n        title: AddUserTitle(),\r\n        closeButtonAriaLabel: CancelButton(),\r\n      }}\r\n      modalProps={{\r\n        isBlocking: false,\r\n        // styles: { main: { maxWidth: 450 } },\r\n      }}\r\n    >\r\n      <ComboBox\r\n        ariaLabel={AddUserTitle()}\r\n        key=\"User\"\r\n        selectedKey={newPlayer?.id}\r\n        allowFreeform={true}\r\n        autoComplete=\"on\"\r\n        onChange={onAddUserChange}\r\n        options={options}\r\n      />\r\n      <DialogFooter>\r\n        <PrimaryButton onClick={onSaveClicked} text={OkButton()} />\r\n        <DefaultButton onClick={onCancel} text={CancelButton()} />\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {\r\n  CommandBar,\r\n  ICommandBarItemProps,\r\n  classNamesFunction,\r\n  CompoundButton,\r\n  Persona,\r\n  PersonaSize,\r\n  List,\r\n  FontIcon,\r\n  PrimaryButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  mahjongOverviewClassNames,\r\n  getMahjongOverviewStyles,\r\n  IMahjongOverviewClassNames,\r\n} from \"./MahjongOverview.styles\";\r\nimport {\r\n  HomeButton,\r\n  EditPlayersButton,\r\n  CurrentScore,\r\n  GameScore,\r\n  MahJongHeader,\r\n  ClearButton,\r\n  ClearAllButton,\r\n  ClearGameButton,\r\n  AddButton,\r\n  SaveScoreButton,\r\n  ClearAllGamesButton,\r\n  FullGameScore,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { navigate, Page } from \"../../main/MainSlice\";\r\nimport {\r\n  load,\r\n  selectPlayers,\r\n  selectCurrentPlayers,\r\n  setPlayers,\r\n  addUser,\r\n  deleteUser,\r\n  selectCurrentGame,\r\n  clearAll,\r\n  clearGame,\r\n  saveGame,\r\n  clearAllGames,\r\n  selectGames,\r\n  history,\r\n  IMahJongHistory,\r\n} from \"./MahjongOverviewSlice\";\r\nimport { IMahJongUser, getScore } from \"../Mahjong.model\";\r\nimport { SelectUserPanel } from \"../userPanel/SelectUserPanel\";\r\nimport { MahjongDetails } from \"../details/MahjongDetails\";\r\nimport { AddUserPanel } from \"../addUserPanel/AddUserPanel\";\r\nimport { find } from \"lodash\";\r\n\r\nexport function MahjongOverview(): JSX.Element {\r\n  const classNames = classNamesFunction<{}, IMahjongOverviewClassNames>()(\r\n    mahjongOverviewClassNames\r\n  );\r\n  const styles = getMahjongOverviewStyles();\r\n\r\n  const [refreshCount, setRefreshCount] = React.useState(0);\r\n  const [isPlayerAddOpen, setIsPlayerAddOpen] = React.useState(false);\r\n  const [isPlayerSelectOpen, setIsPlayerSelectOpen] = React.useState(false);\r\n  const [currentPlayer, setCurrentPlayer] = React.useState<\r\n    IMahJongUser | undefined\r\n  >(undefined);\r\n  const [historyGames, setHistoryGames] = React.useState<IMahJongHistory[]>([]);\r\n\r\n  const allPlayers = useSelector(selectPlayers);\r\n  const currentPlayers = useSelector(selectCurrentPlayers);\r\n  const players = useSelector(selectCurrentPlayers);\r\n  const game = useSelector(selectCurrentGame);\r\n  const games = useSelector(selectGames);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect((): void => {\r\n    dispatch(load());\r\n  }, [dispatch]);\r\n\r\n  useEffect((): void => {\r\n    const hist = history(games, currentPlayers);\r\n    setHistoryGames(hist);\r\n    setRefreshCount(refreshCount + 1);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [games, currentPlayers]);\r\n\r\n  const onSaveSelectedPlayers = (selectedPlayers: IMahJongUser[]): void => {\r\n    dispatch(setPlayers(selectedPlayers));\r\n    setIsPlayerSelectOpen(false);\r\n  };\r\n\r\n  const onAddPlayer = (player: IMahJongUser): void => {\r\n    dispatch(addUser(player));\r\n    setIsPlayerAddOpen(false);\r\n  };\r\n  const onCancel = (): void => {\r\n    setIsPlayerAddOpen(false);\r\n    setIsPlayerSelectOpen(false);\r\n  };\r\n\r\n  const onDeletePlayer = (player: IMahJongUser): void => {\r\n    dispatch(deleteUser(player));\r\n  };\r\n  const onOpenSelectedPlayers = () => setIsPlayerSelectOpen(true);\r\n  const onOpenAddPlayers = () => setIsPlayerAddOpen(true);\r\n\r\n  const onClearAll = (): void => {\r\n    dispatch(clearAll());\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n  const onClearGame = (): void => {\r\n    dispatch(clearGame());\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n  const onClearAllGames = (): void => {\r\n    dispatch(clearAllGames());\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n  const onNavigateBackFromDetails = (): void => {\r\n    setCurrentPlayer(undefined);\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n\r\n  const openPlayer = (item?: IMahJongUser) => () => {\r\n    setCurrentPlayer(item);\r\n  };\r\n\r\n  const items: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"Back\",\r\n      text: HomeButton(),\r\n      iconProps: {\r\n        iconName: \"Home\",\r\n      },\r\n      onClick: () => {\r\n        dispatch(navigate(Page.Main));\r\n      },\r\n    },\r\n    {\r\n      key: \"Select\",\r\n      text: EditPlayersButton(),\r\n      iconProps: {\r\n        iconName: \"People\",\r\n      },\r\n      ariaLabel: EditPlayersButton(),\r\n      subMenuProps: {\r\n        items: [\r\n          {\r\n            key: \"add\",\r\n            text: AddButton(),\r\n            iconProps: { iconName: \"People\" },\r\n            onClick: onOpenAddPlayers,\r\n          },\r\n          {\r\n            key: \"SelectOrDelete\",\r\n            text: EditPlayersButton(),\r\n            iconProps: { iconName: \"People\" },\r\n            onClick: onOpenSelectedPlayers,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      key: \"save\",\r\n      text: SaveScoreButton(),\r\n      iconProps: {\r\n        iconName: \"Save\",\r\n      },\r\n      onClick: () => {\r\n        dispatch(saveGame());\r\n      },\r\n    },\r\n    {\r\n      key: \"Clear\",\r\n      text: ClearButton(),\r\n      iconProps: {\r\n        iconName: \"Delete\",\r\n      },\r\n      ariaLabel: ClearButton(),\r\n      subMenuProps: {\r\n        items: [\r\n          {\r\n            key: \"ClearAll\",\r\n            text: ClearAllButton(),\r\n            iconProps: { iconName: \"UserRemove\" },\r\n            onClick: onClearAll,\r\n            disabled: true,\r\n          },\r\n          {\r\n            key: \"ClearGames\",\r\n            text: ClearAllGamesButton(),\r\n            iconProps: { iconName: \"RemoveFromShoppingList\" },\r\n            onClick: onClearAllGames,\r\n          },\r\n          {\r\n            key: \"ClearGame\",\r\n            text: ClearGameButton(),\r\n            iconProps: { iconName: \"RemoveFromShoppingList\" },\r\n            onClick: onClearGame,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onRenderCell = (item?: IMahJongUser): JSX.Element | null => {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n\r\n    const currentScore = getScore(game, item);\r\n    const winner = currentScore.isWinner ? (\r\n      <FontIcon\r\n        iconName=\"SkypeCheck\"\r\n        className={\r\n          currentScore.isEast ? classNames.winnerIcon2 : classNames.winnerIcon\r\n        }\r\n      />\r\n    ) : null;\r\n    const east = currentScore.isEast ? (\r\n      <FontIcon iconName=\"CompassNW\" className={classNames.eastIcon} />\r\n    ) : null;\r\n\r\n    const summarizedGameScore = find(\r\n      historyGames,\r\n      (hist) => hist.playerId === item.id\r\n    );\r\n    const scoreText = summarizedGameScore\r\n      ? FullGameScore(currentScore.gameScore, summarizedGameScore.score)\r\n      : GameScore(currentScore.gameScore);\r\n    return (\r\n      <CompoundButton styles={styles.listItem} onClick={openPlayer(item)}>\r\n        <Persona\r\n          text={item?.name}\r\n          secondaryText={CurrentScore(currentScore.points)}\r\n          tertiaryText={scoreText}\r\n          size={PersonaSize.size72}\r\n        />\r\n        {east}\r\n        {winner}\r\n      </CompoundButton>\r\n    );\r\n  };\r\n\r\n  if (currentPlayer) {\r\n    return (\r\n      <MahjongDetails\r\n        user={currentPlayer}\r\n        onNavigateBack={onNavigateBackFromDetails}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classNames.page}>\r\n      <CommandBar items={items} styles={styles.commandBar} />\r\n      <h1 className={classNames.header}>{MahJongHeader()}</h1>\r\n      <AddUserPanel\r\n        isOpen={isPlayerAddOpen}\r\n        onAdd={onAddPlayer}\r\n        onCancel={onCancel}\r\n        allPlayers={allPlayers}\r\n      />\r\n      <SelectUserPanel\r\n        isOpen={isPlayerSelectOpen}\r\n        onSave={onSaveSelectedPlayers}\r\n        onDelete={onDeletePlayer}\r\n        allPlayers={allPlayers}\r\n        currentPlayers={currentPlayers}\r\n      />\r\n      <List\r\n        className={classNames.list}\r\n        version={refreshCount}\r\n        items={players}\r\n        onRenderCell={onRenderCell}\r\n      />\r\n      {players?.length < 4 && (\r\n        <PrimaryButton styles={styles.footerButton} onClick={onOpenAddPlayers}>\r\n          {EditPlayersButton()}\r\n        </PrimaryButton>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ICommandBarStyles,\r\n  IStackStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IButtonStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IPlaygroundOverviewStyles {\r\n  commandBar: ICommandBarStyles;\r\n  dashboard: IStackStyles;\r\n  listItem: Partial<IButtonStyles>;\r\n  footerButton: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getPlaygroundOverviewStyles = (): IPlaygroundOverviewStyles => ({\r\n  commandBar: {\r\n    root: {\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n  dashboard: {\r\n    root: { padding: \"24px 0 0 0\" },\r\n  },\r\n  listItem: {\r\n    root: {\r\n      maxWidth: \"100%\",\r\n      width: \"100%\",\r\n      padding: \"20px 10px 20px 20px\",\r\n      margin: \"10px 0\",\r\n    },\r\n    flexContainer: {\r\n      justifyContent: \"flex-start\",\r\n    },\r\n  },\r\n  footerButton: {\r\n    root: {\r\n      marginTop: 30,\r\n      float: \"right\",\r\n      marginRight: 30,\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IPlaygroundOverviewClassNames {\r\n  page: string;\r\n  list: string;\r\n  header: string;\r\n  winnerIcon: string;\r\n  winnerIcon2: string;\r\n  eastIcon: string;\r\n}\r\n\r\nexport const playgroundOverviewClassNames = memoizeFunction(\r\n  (): IPlaygroundOverviewClassNames => {\r\n    return mergeStyleSets({\r\n      page: {\r\n        overflow: \"auto\",\r\n      },\r\n      list: {\r\n        margin: \"0 10px\",\r\n      },\r\n      header: {\r\n        marginLeft: \"10px\",\r\n        marginRight: \"10px\",\r\n      },\r\n      winnerIcon: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"auto\",\r\n        color: \"green\",\r\n      },\r\n      winnerIcon2: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"0px\",\r\n        color: \"green\",\r\n      },\r\n      eastIcon: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"auto\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  CommandBar,\r\n  ICommandBarItemProps,\r\n  classNamesFunction,\r\n  CompoundButton,\r\n  Persona,\r\n  PersonaSize,\r\n  List,\r\n  FontIcon,\r\n  PrimaryButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  playgroundOverviewClassNames,\r\n  IPlaygroundOverviewClassNames,\r\n  getPlaygroundOverviewStyles,\r\n} from \"./PlaygroundOverview.styles\";\r\nimport { load } from \"../../mahjong/overview/MahjongOverviewSlice\";\r\nimport { HomeButton } from \"../../../localization/DisplayStrings\";\r\nimport { navigate, Page } from \"../../main/MainSlice\";\r\n\r\nexport function PlaygroundOverview(): JSX.Element {\r\n  const classNames = classNamesFunction<{}, IPlaygroundOverviewClassNames>()(\r\n    playgroundOverviewClassNames\r\n  );\r\n  const styles = getPlaygroundOverviewStyles();\r\n\r\n  const [refreshCount, setRefreshCount] = React.useState(0);\r\n  const dispatch = useDispatch();\r\n  useEffect((): void => {\r\n    dispatch(load());\r\n  }, [dispatch]);\r\n\r\n  // const openPlayer = (item?: IPlaygroundUser) => () => {\r\n  //   setCurrentPlayer(item);\r\n  // };\r\n\r\n  const items: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"Back\",\r\n      text: HomeButton(),\r\n      iconProps: {\r\n        iconName: \"Home\",\r\n      },\r\n      onClick: () => {\r\n        dispatch(navigate(Page.Main));\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classNames.page}>\r\n      <CommandBar items={items} styles={styles.commandBar} />\r\n      {/* <h1 className={classNames.header}>{PlaygroundHeader()}</h1> */}\r\n    </div>\r\n  );\r\n}\r\n","import { ICommandBarStyles, IStackStyles, memoizeFunction, mergeStyleSets, IButtonStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface ITrainingOverviewStyles {\r\n    commandBar: ICommandBarStyles;\r\n    dashboard: IStackStyles;\r\n    listItem: Partial<IButtonStyles>;\r\n    footerButton: Partial<IButtonStyles>;\r\n    listButton: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getTrainingOverviewStyles = (): ITrainingOverviewStyles => ({\r\n    commandBar: {\r\n        root: {\r\n            padding: \"5px\",\r\n        },\r\n    },\r\n    dashboard: {\r\n        root: { padding: \"24px 0 0 0\" },\r\n    },\r\n    listItem: {\r\n        root: {\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            padding: \"20px 10px 20px 20px\",\r\n            margin: \"10px 0\",\r\n        },\r\n        flexContainer: {\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    },\r\n    footerButton: {\r\n        root: {\r\n            marginTop: 30,\r\n            float: \"right\",\r\n            marginRight: 30,\r\n        },\r\n    },\r\n    listButton: {\r\n        root: {\r\n            marginLeft: \"auto\",\r\n        },\r\n    },\r\n});\r\n\r\nexport interface ITrainingOverviewClassNames {\r\n    page: string;\r\n    list: string;\r\n    header: string;\r\n    listItem: string;\r\n    listText: string;\r\n}\r\n\r\nexport const trainingOverviewClassNames = memoizeFunction(\r\n    (): ITrainingOverviewClassNames => {\r\n        return mergeStyleSets({\r\n            page: {\r\n                overflow: \"auto\",\r\n                margin: \"0 10px\",\r\n            },\r\n            list: {\r\n                margin: \"0 10px\",\r\n            },\r\n            header: {\r\n                margin: \"0\",\r\n            },\r\n            listItem: {\r\n                display: \"flex\",\r\n            },\r\n            listText: {\r\n                margin: \"6px\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport { map, find, uniqBy, filter, without, forEach, sumBy, some, min, minBy, max } from \"lodash\";\r\n\r\nexport interface IPushup {\r\n    count: number;\r\n    date?: string;\r\n}\r\n\r\ninterface TrainingOverviewState {\r\n    pushups: IPushup[];\r\n}\r\n\r\nconst initialState: TrainingOverviewState = {\r\n    pushups: [],\r\n};\r\n\r\nexport const perMonth = 500;\r\n\r\nexport const overviewSlice = createSlice({\r\n    name: \"TrainingOverview\",\r\n    initialState,\r\n    reducers: {\r\n        loadFailed: (state) => {\r\n            state = initialState;\r\n        },\r\n        loadSuccess: (state, action: PayloadAction<TrainingOverviewState>) => {\r\n            state.pushups = action.payload?.pushups ?? [];\r\n        },\r\n        addPushups: (state, action: PayloadAction<IPushup>) => {\r\n            let today = fromToday(state.pushups);\r\n            state.pushups = without(state.pushups, ...today);\r\n\r\n            const newSet = {\r\n                count: action.payload.count,\r\n                date: (action.payload.date ?? new Date()).toString(),\r\n            };\r\n            today.push(newSet);\r\n            while (today.length > 2) {\r\n                const minCount = minBy(today, (pushup: IPushup): number => pushup.count) || newSet;\r\n                today = without<IPushup>(today, minCount);\r\n            }\r\n            state.pushups.push(...today);\r\n            saveState(state);\r\n        },\r\n        removePushups: (state, action: PayloadAction<IPushup>) => {\r\n            const found = find(\r\n                state.pushups,\r\n                (pushUp: IPushup): boolean => pushUp.count === action.payload.count && pushUp.date === action.payload.date\r\n            );\r\n            if (found) {\r\n                state.pushups = without(state.pushups, found);\r\n            }\r\n\r\n            saveState(state);\r\n        },\r\n    },\r\n});\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const { addPushups, removePushups } = overviewSlice.actions;\r\n\r\nconst storageName = \"Training\";\r\n\r\nfunction saveState(state: TrainingOverviewState) {\r\n    saveData(storageName, state);\r\n}\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n    if (isSupported) {\r\n        dispatch(loadSuccess(loadData(storageName) as TrainingOverviewState));\r\n    } else {\r\n        dispatch(loadFailed());\r\n    }\r\n};\r\n\r\nfunction fromToday(pushups: IPushup[]) {\r\n    return filter(\r\n        pushups,\r\n        (pushup: IPushup): boolean =>\r\n            new Date(pushup.date ?? new Date()).getDate() === new Date().getDate() &&\r\n            new Date(pushup.date ?? new Date()).getMonth() === new Date().getMonth() &&\r\n            new Date(pushup.date ?? new Date()).getFullYear() === new Date().getFullYear()\r\n    );\r\n}\r\n\r\nexport function fromMonth(pushups: IPushup[], current: Date = new Date()) {\r\n    return filter(\r\n        pushups,\r\n        (pushup: IPushup): boolean =>\r\n            new Date(pushup.date ?? new Date()).getMonth() === current.getMonth() &&\r\n            new Date(pushup.date ?? new Date()).getFullYear() === current.getFullYear()\r\n    );\r\n}\r\n\r\nexport function calcAverage(pushups: IPushup[], current: Date) {\r\n    const sum = sumBy(pushups, (pushup: IPushup): number => pushup.count);\r\n    return sum / current.getDate();\r\n}\r\n\r\nexport function calcTotal(pushups: IPushup[]) {\r\n    return sumBy(pushups, (pushup: IPushup): number => pushup.count) ?? 0;\r\n}\r\n\r\nexport function calcMissing(pushups: IPushup[]) {\r\n    return max<number>([perMonth - sumBy(pushups, (pushup: IPushup): number => pushup.count), 0]) ?? 0;\r\n}\r\n\r\nexport function calcMissingAverage(pushups: IPushup[], current: Date) {\r\n    const count = calcMissing(pushups);\r\n    return count / (daysInMonth(current) - current.getDate() + 1);\r\n}\r\n\r\nfunction daysInMonth(current: Date): number {\r\n    return new Date(current.getFullYear(), current.getMonth() + 13, 0).getDate();\r\n}\r\n\r\nexport const selectPushups = (state: RootState) => state.training.pushups;\r\n\r\nexport default overviewSlice.reducer;\r\n","import {\r\n    CommandBar,\r\n    ICommandBarItemProps,\r\n    classNamesFunction,\r\n    CompoundButton,\r\n    Persona,\r\n    PersonaSize,\r\n    List,\r\n    FontIcon,\r\n    PrimaryButton,\r\n    IContextualMenuItem,\r\n    Toggle,\r\n    IconButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { trainingOverviewClassNames, ITrainingOverviewClassNames, getTrainingOverviewStyles } from \"./TrainingOverview.styles\";\r\nimport {\r\n    HomeButton,\r\n    TrainingHeader,\r\n    TrainingAverage,\r\n    TrainingMissing,\r\n    TrainingMissingAverage,\r\n    TrainingCount,\r\n    TrainingAddMenuButton,\r\n    TrainingAddButton,\r\n    OnToggle,\r\n    OffToggle,\r\n    TrainingShowAllLabel,\r\n    TrainingListHeader,\r\n    TrainingDetails,\r\n    DeleteButton,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { navigate, Page } from \"../../main/MainSlice\";\r\nimport {\r\n    selectPushups,\r\n    fromMonth,\r\n    calcAverage,\r\n    calcMissing,\r\n    calcMissingAverage,\r\n    calcTotal,\r\n    addPushups,\r\n    IPushup,\r\n    load,\r\n    removePushups,\r\n} from \"./TrainingOverviewSlice\";\r\n\r\nexport function TrainingOverview(): JSX.Element {\r\n    const classNames = classNamesFunction<{}, ITrainingOverviewClassNames>()(trainingOverviewClassNames);\r\n    const styles = getTrainingOverviewStyles();\r\n\r\n    const [refreshCount, setRefreshCount] = React.useState(0);\r\n    const [total, setTotal] = React.useState(0);\r\n    const [average, setAverage] = React.useState(0);\r\n    const [missing, setMissing] = React.useState(0);\r\n    const [missingAverage, setMissingAverage] = React.useState(0);\r\n    const [showAll, setShowAll] = React.useState(false);\r\n\r\n    const pushUps = useSelector(selectPushups);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect((): void => {\r\n        dispatch(load());\r\n    }, [dispatch]);\r\n\r\n    useEffect((): void => {\r\n        const currentDate = new Date();\r\n        const fromThisMonth = fromMonth(pushUps, currentDate);\r\n        setTotal(calcTotal(fromThisMonth));\r\n        setAverage(calcAverage(fromThisMonth, currentDate));\r\n        setMissing(calcMissing(fromThisMonth));\r\n        setMissingAverage(calcMissingAverage(fromThisMonth, currentDate));\r\n    }, [pushUps]);\r\n\r\n    const onShowAll = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => {\r\n        setRefreshCount(refreshCount + 1);\r\n        setShowAll(!!checked);\r\n    };\r\n    const addItem = (count: number): IContextualMenuItem => {\r\n        return {\r\n            key: \"add\" + count,\r\n            text: TrainingAddButton(count.toString()),\r\n            onClick: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, item?: IContextualMenuItem) => {\r\n                dispatch(addPushups({ count }));\r\n            },\r\n        };\r\n    };\r\n\r\n    const items: ICommandBarItemProps[] = [\r\n        {\r\n            key: \"Back\",\r\n            text: HomeButton(),\r\n            iconProps: {\r\n                iconName: \"Home\",\r\n            },\r\n            onClick: () => {\r\n                dispatch(navigate(Page.Main));\r\n            },\r\n        },\r\n        {\r\n            key: \"Add\",\r\n            text: TrainingAddMenuButton(),\r\n            iconProps: {\r\n                iconName: \"ReportAdd\",\r\n            },\r\n            ariaLabel: TrainingAddMenuButton(),\r\n            subMenuProps: {\r\n                items: [addItem(20), addItem(25), addItem(30), addItem(35), addItem(40)],\r\n            },\r\n        },\r\n    ];\r\n\r\n    const removeClicked = (item: IPushup) => {\r\n        dispatch(removePushups(item));\r\n    };\r\n    const onRenderCell = (item?: IPushup): JSX.Element | null => {\r\n        if (!item) {\r\n            return null;\r\n        }\r\n\r\n        const date = item.date ? new Date(item.date).toLocaleDateString() : \" - \";\r\n        return (\r\n            <div className={classNames.listItem}>\r\n                <p className={classNames.listText}>{TrainingDetails(item.count.toString(), date)}</p>\r\n                <IconButton\r\n                    iconProps={{ iconName: \"Delete\" }}\r\n                    title={DeleteButton()}\r\n                    ariaLabel={DeleteButton()}\r\n                    onClick={() => {\r\n                        removeClicked(item);\r\n                    }}\r\n                    styles={styles.listButton}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={classNames.page}>\r\n            <CommandBar items={items} styles={styles.commandBar} />\r\n            <h1 className={classNames.header}>{TrainingHeader()}</h1>\r\n            <p>{TrainingCount(total.toFixed(0))}</p>\r\n            <p>{TrainingAverage(average.toFixed(0))}</p>\r\n            <p>{TrainingMissing(missing.toFixed(0))}</p>\r\n            <p>{TrainingMissingAverage(missingAverage.toFixed(0))}</p>\r\n            <h2 className={classNames.header}>{TrainingListHeader()}</h2>\r\n            <Toggle label={TrainingShowAllLabel()} checked={showAll} inlineLabel onText={OnToggle()} offText={OffToggle()} onChange={onShowAll} />\r\n            <List className={classNames.list} version={refreshCount} items={showAll ? pushUps : fromMonth(pushUps)} onRenderCell={onRenderCell} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { navigate, selectPage, Page, load } from \"./MainSlice\";\r\nimport { Nav } from \"office-ui-fabric-react\";\r\nimport {\r\n  MahJongTitle,\r\n  PlaygroundTitle,\r\n  TrainingTitle,\r\n} from \"../../localization/DisplayStrings\";\r\nimport { MahjongOverview } from \"../mahjong/overview/MahjongOverview\";\r\nimport { PlaygroundOverview } from \"../playground/overview/PlaygroundOverview\";\r\nimport { TrainingOverview } from \"../training/overview/TrainingOverview\";\r\n\r\nexport function MainPage() {\r\n  const page = useSelector(selectPage);\r\n  const dispatch = useDispatch();\r\n  useEffect((): void => {\r\n    dispatch(load());\r\n  }, [dispatch]);\r\n\r\n  switch (page) {\r\n    case Page.MahJong:\r\n      return <MahjongOverview />;\r\n    case Page.Training:\r\n      return <TrainingOverview />;\r\n    case Page.Playground:\r\n      return <PlaygroundOverview />;\r\n    case Page.Main:\r\n      return (\r\n        <Nav\r\n          selectedKey=\"key0\"\r\n          ariaLabel=\"Nav basic example\"\r\n          groups={[\r\n            {\r\n              links: [\r\n                {\r\n                  name: MahJongTitle(),\r\n                  url: \"\",\r\n                  key: \"key0\",\r\n                  target: \"_blank\",\r\n                  onClick: () => {\r\n                    dispatch(navigate(Page.MahJong));\r\n                  },\r\n                },\r\n                {\r\n                  name: TrainingTitle(),\r\n                  url: \"\",\r\n                  key: \"key1\",\r\n                  target: \"_blank\",\r\n                  onClick: () => {\r\n                    dispatch(navigate(Page.Training));\r\n                  },\r\n                },\r\n                {\r\n                  name: PlaygroundTitle(),\r\n                  url: \"\",\r\n                  key: \"key2\",\r\n                  target: \"_blank\",\r\n                  onClick: () => {\r\n                    dispatch(navigate(Page.Playground));\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n  }\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport {\r\n  map,\r\n  find,\r\n  uniqBy,\r\n  filter,\r\n  without,\r\n  forEach,\r\n  sumBy,\r\n  some,\r\n  min,\r\n} from \"lodash\";\r\n\r\ninterface IBuildingBlock {\r\n  name: string;\r\n  width: number;\r\n  length: number;\r\n  needRoad?: boolean;\r\n  location?: IGraphPoint;\r\n}\r\n\r\ninterface IRoadBlock {\r\n  name: string;\r\n  width: number;\r\n  length: number;\r\n  location: IGraphPoint;\r\n}\r\n\r\ninterface IGraphPoint {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface IArea {\r\n  graph: IGraphPoint[];\r\n}\r\n\r\ninterface PlaygroundOverviewState {\r\n  area: IArea;\r\n  townHall: IBuildingBlock;\r\n  buildings: IBuildingBlock[];\r\n}\r\n\r\nconst initialState: PlaygroundOverviewState = {\r\n  area: { graph: [] },\r\n  townHall: createBuilding(\"TownHall\", 7, 6, true),\r\n  buildings: [{ name: \"TH\", width: 4, length: 4, needRoad: true }],\r\n};\r\n\r\nexport const overviewSlice = createSlice({\r\n  name: \"PlaygroundOverview\",\r\n  initialState,\r\n  reducers: {\r\n    loadFailed: (state) => {\r\n      state = initialState;\r\n    },\r\n    loadSuccess: (state, action: PayloadAction<PlaygroundOverviewState>) => {},\r\n  },\r\n});\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const {\r\n  //\r\n} = overviewSlice.actions;\r\n\r\nconst storageName = \"Play\";\r\n\r\nfunction saveState(state: PlaygroundOverviewState) {\r\n  saveData(storageName, state);\r\n}\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n  if (isSupported) {\r\n    dispatch(loadSuccess(loadData(storageName) as PlaygroundOverviewState));\r\n  } else {\r\n    dispatch(loadFailed());\r\n  }\r\n};\r\n\r\nfunction createBuilding(\r\n  name: string,\r\n  width: number,\r\n  length: number,\r\n  needRoad: boolean = true\r\n) {\r\n  return { name, width, length, needRoad };\r\n}\r\n\r\nfunction createDuplicateBuildings(\r\n  building: IBuildingBlock,\r\n  count: number\r\n): IBuildingBlock[] {\r\n  const list = [];\r\n  for (let i = 0; i < count; i++) {\r\n    list.push({ ...building });\r\n  }\r\n  return list;\r\n}\r\n\r\n// 0,0\r\n// 8,0\r\n// 8,4\r\n// 24,4\r\n// 24,8\r\n// 40,8\r\n// 40,-28\r\n// 20,-28\r\n// 0,-28\r\n\r\nexport default overviewSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport mainReducer from \"../pages/main/MainSlice\";\r\nimport overviewReducer from \"../pages/mahjong/overview/MahjongOverviewSlice\";\r\nimport trainingReducer from \"../pages/training/overview/TrainingOverviewSlice\";\r\nimport playgroundReducer from \"../pages/playground/overview/PlaygroundOverviewSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    main: mainReducer,\r\n    mahjongOverview: overviewReducer,\r\n    training: trainingReducer,\r\n    playground: playgroundReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { MainPage } from './pages/main/Main';\r\nimport { initializeIcons, loadTheme } from 'office-ui-fabric-react';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from 'office-ui-fabric-react/lib/Foundation';\r\n\r\nconst myTheme = loadTheme({\r\n  palette: {\r\n      themePrimary: '#2266e3',\r\n      themeLighterAlt: '#f5f8fe',\r\n      themeLighter: '#d8e4fb',\r\n      themeLight: '#b8cef7',\r\n      themeTertiary: '#759fee',\r\n      themeSecondary: '#3a76e6',\r\n      themeDarkAlt: '#1f5bcc',\r\n      themeDark: '#1a4dac',\r\n      themeDarker: '#13397f',\r\n      neutralLighterAlt: '#faf9f8',\r\n      neutralLighter: '#f3f2f1',\r\n      neutralLight: '#edebe9',\r\n      neutralQuaternaryAlt: '#e1dfdd',\r\n      neutralQuaternary: '#d0d0d0',\r\n      neutralTertiaryAlt: '#c8c6c4',\r\n      neutralTertiary: '#a19f9d',\r\n      neutralSecondary: '#605e5c',\r\n      neutralPrimaryAlt: '#3b3a39',\r\n      neutralPrimary: '#323130',\r\n      neutralDark: '#201f1e',\r\n      black: '#000000',\r\n      white: '#ffffff'\r\n  }\r\n});\r\n\r\nconst App = (): JSX.Element => {\r\n  useEffect(() => {\r\n    initializeIcons();\r\n    // initializeTheme();\r\n  });\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={myTheme}>\r\n          <MainPage />\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  );\r\n\r\n};\r\n\r\n// function initializeTheme(): void {\r\n//   if (!environment.production && !window[GlobalObjects.theme]) {\r\n//       window[GlobalObjects.theme] = myTheme;\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/MahjongGreenDragon.ae5a6502.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongEast.7287d189.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongBamboo6.93503ad1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongBambooChow.b2d6588f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCircle5.5776cb62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCircleChow.cc8debbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCharacter4.711aa9d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCharacterChow.79f76632.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason1.2d153ff1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason2.ce673dd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason3.d676d4a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason4.81b5c8aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongFlower2.9efa08e5.jpg\";"],"sourceRoot":""}