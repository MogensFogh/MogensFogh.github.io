{"version":3,"sources":["pages/main/MainSlice.ts","utils/LocalizationUtil.ts","pages/mahjong/Mahjong.model.ts","localization/DisplayStrings.ts","pages/mahjong/overview/MahjongOverview.styles.ts","utils/StorageUtil.ts","pages/mahjong/overview/MahjongOverviewSlice.ts","pages/mahjong/userPanel/SelectUserPanel.styles.ts","pages/mahjong/userPanel/SelectUserPanel.tsx","pages/mahjong/details/MahjongDetails.styles.ts","pages/mahjong/scorePanel/ScorePanel.styles.ts","pages/mahjong/MahjongDisplay.ts","pages/mahjong/scorePanel/ScorePanel.tsx","pages/mahjong/details/MahjongDetails.tsx","pages/mahjong/addUserPanel/AddUserPanel.tsx","pages/mahjong/overview/MahjongOverview.tsx","pages/main/Main.tsx","app/store.ts","App.tsx","serviceWorker.ts","index.tsx","images/MahjongGreenDragon.jpg","images/MahjongEast.jpg","images/MahjongBamboo6.jpg","images/MahjongBambooChow.jpg","images/MahjongCircle5.jpg","images/MahjongCircleChow.jpg","images/MahjongCharacter4.jpg","images/MahjongCharacterChow.jpg","images/MahjongSeason1.jpg","images/MahjongSeason2.jpg","images/MahjongSeason3.jpg","images/MahjongSeason4.jpg","images/MahjongFlower2.jpg"],"names":["Page","initialState","page","MahJong","mainSlice","createSlice","name","reducers","navigate","state","action","payload","actions","selectPage","main","locale","MahJongTileTypes","MahJongSetTypes","t","loc","CloseButton","da","us","CancelButton","OkButton","AddButton","AddUserTitle","OnToggle","OffToggle","EditPlayersButton","ClearButton","DeleteButton","CurrentScore","points","UnknownLabel","mahjongOverviewClassNames","memoizeFunction","mergeStyleSets","overflow","list","margin","header","marginLeft","marginRight","winnerIcon","fontSize","height","width","color","winnerIcon2","eastIcon","createUser","id","uuidv4","createGame","score","createScore","playerId","gameScore","sets","getScore","game","player","find","getScoreById","saveData","data","isSupported","localStorage","setItem","JSON","stringify","e","itemBackup","getItem","removeItem","players","games","currentPlayers","currentGame","overviewSlice","loadFailed","loadSuccess","updateGameUsers","updateCalculatedScore","setPlayers","addUser","uniqBy","user","push","length","deleteUser","filter","clearGame","forEach","isWinner","isEast","clearAllGames","clearAll","updateScore","found","otherScore","without","saveGame","some","map","index","winnerFound","scoreToPoints","scoreToCalculate","sumBy","difference","set","tileType","Flower","setType","Pair","Chow","Poong","Kong","Single","Dragon","Wind","ownWind","sub","oneOrNine","inHand","honorFactor","containDragonsOrWinds","containBamboo","containCircle","containCharacter","Bamboo","Circle","Character","min","load","dispatch","parse","loadData","selectPlayers","mahjongOverview","selectGames","selectCurrentGame","selectCurrentPlayers","selectUserPanelClassNames","wrapper","display","alignItems","SelectUserPanel","props","classNames","classNamesFunction","styles","footer","root","combobox","firstRoot","flexGrow","flexShrink","firstContainer","container","isOpen","onSave","onDelete","allPlayers","React","useState","selectedPlayers","setSelectedPlayers","userToDelete","setUserToDelete","useEffect","selected","i","onSaveClicked","isEmpty","options","key","text","filteredOptions","filtered","option","allComboboxes","ComboBox","aria-label","selectedKey","autoComplete","onChange","selectedIndex","event","renderComboBox","onDeleteUserChange","onDeleteUserClicked","Panel","isLightDismiss","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","isFooterAtBottom","className","label","IconButton","iconProps","iconName","title","ariaLabel","disabled","mahjongDetailsClassNames","content","listItem","listDescription","padding","displayTileType","tile","imageTileType","MahJongGreenDragon","MahJongEast","MahJongBamboo6","MahJongCircle5","MahJongCharacter4","MahJongSeason1","MahJongSeason2","MahJongSeason3","MahJongFlower2","MahJongSeason4","imageSet","item","getFlowerImageSet","image","MahJongBambooChow","MahJongCircleChow","MahJongCharacterChow","imageChowType","getOtherImageSet","displaySetType","ScorePanel","choiceGroup","choiceFieldWrapper","backgroundColor","onClose","onCancel","setSetType","setTileType","setInHand","setOneOrNine","setOwnWind","getTileOption","toString","imageSrc","selectedImageSrc","imageSize","imageAlt","getSetOption","isInHandVisible","isOneOrNineVisible","isOwnWindVisible","Stack","tokens","childrenGap","ChoiceGroup","ev","parseInt","isChow","getTileOptions","getSetOptions","Toggle","checked","inlineLabel","onText","offText","MahjongDetails","commandBar","dashboard","listButton","marginTop","float","onNavigateBack","useSelector","undefined","userScore","setUserScore","showScorePanel","setShowScorePanel","initialScore","useDispatch","onshowScorePanel","items","CommandBar","tempScore","setWinner","List","onRenderCell","Image","src","alt","getImage","removeSetClicked","AddUserPanel","onAdd","newPlayer","setNewPlayer","setOptions","mapUserToOption","Dialog","hidden","dialogContentProps","type","DialogType","normal","modalProps","isBlocking","allowFreeform","value","createdPlayer","DialogFooter","DefaultButton","MahjongOverview","maxWidth","flexContainer","justifyContent","footerButton","refreshCount","setRefreshCount","isPlayerAddOpen","setIsPlayerAddOpen","isPlayerSelectOpen","setIsPlayerSelectOpen","currentPlayer","setCurrentPlayer","historyGames","setHistoryGames","hist","uniquePlayers","gameHistory","uniqueScores","foundScore","history","onOpenAddPlayers","openPlayer","Main","subMenuProps","version","allGamePoints","currentScore","winner","FontIcon","east","summarizedGameScore","scoreText","GameScore","CompoundButton","Persona","secondaryText","tertiaryText","size","PersonaSize","size72","MainPage","Nav","groups","links","url","target","store","configureStore","reducer","mainReducer","overviewReducer","myTheme","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","App","initializeIcons","StrictMode","ThemeProvider","theme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.88051481.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\n\r\nexport enum Page {\r\n  Main,\r\n  MahJong,\r\n}\r\n\r\ninterface MainState {\r\n  page: Page;\r\n}\r\n\r\nconst initialState: MainState = {\r\n  page: Page.MahJong,\r\n};\r\n\r\nexport const mainSlice = createSlice({\r\n  name: \"main\",\r\n  initialState,\r\n  reducers: {\r\n    navigate: (state, action: PayloadAction<Page>) => {\r\n      state.page = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { navigate } = mainSlice.actions;\r\n\r\nexport const selectPage = (state: RootState) => state.main.page;\r\n\r\nexport default mainSlice.reducer;\r\n","type supportedLocale = 'da' | 'us';\r\n\r\nlet locale: supportedLocale = 'da';\r\nexport function setLocale(value: supportedLocale) {\r\n    locale = value;\r\n}\r\n\r\n// export function getLocale(): supportedLocale {\r\n//     return locale;\r\n// }\r\n\r\nexport const t = (loc: { [key: string]: string }) => {\r\n    if (loc && loc[locale]) {\r\n        return loc[locale];\r\n    }\r\n\r\n    return loc['da'] || loc['us'] || '';\r\n};\r\n","// import uuid from \"uuid\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { find } from \"lodash\";\r\n\r\nexport interface IMahJongUser {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IMahJongScore {\r\n  gameScore: number;\r\n  points: number;\r\n  sets: IMahJongSet[];\r\n  isEast?: boolean;\r\n  isWinner?: boolean;\r\n  playerId: string;\r\n}\r\n\r\nexport enum MahJongTileTypes {\r\n  Dragon,\r\n  Wind,\r\n  Bamboo,\r\n  Circle,\r\n  Character,\r\n  Flower,\r\n}\r\n\r\nexport enum MahJongSetTypes {\r\n  Chow,\r\n  Poong,\r\n  Kong,\r\n  Pair,\r\n  Single,\r\n}\r\n\r\nexport interface IMahJongSet {\r\n  tileType: MahJongTileTypes;\r\n  setType: MahJongSetTypes;\r\n  inHand?: boolean;\r\n  oneOrNine?: boolean;\r\n  ownWind?: boolean;\r\n}\r\n\r\nexport interface IMahJongGame {\r\n  id: string;\r\n  score: IMahJongScore[];\r\n}\r\n\r\nexport function createUser(name: string): IMahJongUser {\r\n  return { id: uuidv4(), name };\r\n}\r\n\r\nexport function createGame(): IMahJongGame {\r\n  return { id: uuidv4(), score: [] };\r\n}\r\n\r\nexport function createScore(playerId: string): IMahJongScore {\r\n  return {\r\n    gameScore: 0,\r\n    points: 0,\r\n    sets: [],\r\n    playerId,\r\n  };\r\n}\r\n\r\nexport function getScore(\r\n  game: IMahJongGame,\r\n  player: IMahJongUser\r\n): IMahJongScore {\r\n  return getScoreById(game, player.id) || createScore(player.id);\r\n}\r\n\r\nfunction getScoreById(\r\n  game: IMahJongGame,\r\n  id?: string\r\n): IMahJongScore | undefined {\r\n  return find(\r\n    game.score,\r\n    (score: IMahJongScore): boolean => score.playerId === id\r\n  );\r\n}\r\n","import { t } from \"../utils/LocalizationUtil\";\r\n\r\nexport const MahJongTitle = () => t({ da: \"MahJong\" });\r\nexport const MahJongHeader = () =>\r\n  t({ da: \"MahJong lommeregner\", us: \"MahJong calculator\" });\r\nexport const HomeButton = () => t({ da: \"Hjem\", us: \"Home\" });\r\nexport const CloseButton = () => t({ da: \"Luk\", us: \"Close\" });\r\nexport const CancelButton = () => t({ da: \"Afbryd\", us: \"Cancel\" });\r\nexport const BackButton = () => t({ da: \"Tilbage\", us: \"Back\" });\r\nexport const SaveButton = () => t({ da: \"Gem\", us: \"Save\" });\r\nexport const SaveScoreButton = () => t({ da: \"Gem point\", us: \"Save score\" });\r\nexport const OkButton = () => t({ da: \"Ok\" });\r\nexport const AddButton = () => t({ da: \"Tilføj\", us: \"Add\" });\r\nexport const AddUserTitle = () => t({ da: \"Tilføj spiller\", us: \"Add player\" });\r\nexport const WinnerToggleLabel = () =>\r\n  t({ da: \"Vandt du?\", us: \"Did you win?\" });\r\nexport const EastToggleLabel = () =>\r\n  t({ da: \"Er du øst?\", us: \"Are you east?\" });\r\nexport const OnToggle = () => t({ da: \"Jeps\", us: \"Yes\" });\r\nexport const OffToggle = () => t({ da: \"Nope\", us: \"No way\" });\r\nexport const EditPlayersButton = () =>\r\n  t({ da: \"Vælg spillere\", us: \"Choose players\" });\r\nexport const ClearButton = () => t({ da: \"Ryd op\", us: \"Clear\" });\r\nexport const ClearAllButton = () => t({ da: \"Slet alt\", us: \"Remove all\" });\r\nexport const ClearAllGamesButton = () =>\r\n  t({ da: \"Slet alle point\", us: \"Clear all points\" });\r\nexport const ClearGameButton = () =>\r\n  t({ da: \"Slet point\", us: \"Clear points\" });\r\nexport const EditPlayersTitle = () =>\r\n  t({ da: \"Vælg spillere\", us: \"Choose players\" });\r\nexport const EditButton = () => t({ da: \"Ændre spiller\", us: \"Change player\" });\r\nexport const DeleteButton = () =>\r\n  t({ da: \"Slet spiller\", us: \"Delete player\" });\r\nexport const AddPlayerLabel = () => {\r\n  return t({ da: \"Tilføj ny spiller\", us: \"Add new player\" });\r\n};\r\nexport const DeletePlayerLabel = () => {\r\n  return t({ da: \"Slet spiller\", us: \"Delete player\" });\r\n};\r\nexport const CurrentScore = (points: number) =>\r\n  t({ da: `Score: ${points}`, us: `Score: ${points}` });\r\nexport const GameScore = (points: number) =>\r\n  t({ da: `Samlet score: ${points}`, us: `Total score: ${points}` });\r\nexport const FullGameScore = (points: number, allGamePoints: number) =>\r\n  t({\r\n    da: `Samlet score: ${points} (${allGamePoints})`,\r\n    us: `Total score: ${points} (${allGamePoints})`,\r\n  });\r\n\r\nexport const EditScoreTitle = () => t({ da: \"Score\", us: \"Score picker\" });\r\nexport const ChooseTileTypeLabel = () =>\r\n  t({ da: \"Vælg sæt type\", us: \"Choose set type\" });\r\nexport const ChooseSetTypeLabel = () =>\r\n  t({ da: \"Vælg antal i sæt\", us: \"Choose count in set\" });\r\nexport const InHandLabel = () =>\r\n  t({ da: \"Er sæt på hånden?\", us: \"Is set in hand?\" });\r\nexport const OneOrNineLabel = () =>\r\n  t({ da: \"Er det ener eller nier?\", us: \"Is it one or nine?\" });\r\nexport const OwnWindLabel = () =>\r\n  t({ da: \"Er det egen vind?\", us: \"Is it your own wind?\" });\r\nexport const DragonLabel = () => t({ da: \"Drager\", us: \"Dragons\" });\r\nexport const WindLabel = () => t({ da: \"Vinde\", us: \"Wind\" });\r\nexport const CharacterLabel = () => t({ da: \"Tal\", us: \"Characters\" });\r\nexport const BambooLabel = () => t({ da: \"Bambus\", us: \"Bamboo\" });\r\nexport const CircleLabel = () => t({ da: \"Cirkler\", us: \"Circles\" });\r\nexport const FlowerLabel = () => t({ da: \"Blomster\", us: \"Flowers\" });\r\nexport const UnknownLabel = () => t({ da: \"Ukendt\", us: \"Unknown\" });\r\nexport const ChowLabel = () => t({ da: \"Chow\" });\r\nexport const PoongLabel = () => t({ da: \"Poong\" });\r\nexport const KongLabel = () => t({ da: \"Kong\" });\r\nexport const PairLabel = () => t({ da: \"Slut par\", us: \"End pair\" });\r\nexport const SingleLabel = () => t({ da: \"Enkelt\", us: \"Single\" });\r\n","import {\r\n  ICommandBarStyles,\r\n  IStackStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IButtonStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongOverviewStyles {\r\n  commandBar: ICommandBarStyles;\r\n  dashboard: IStackStyles;\r\n  listItem: Partial<IButtonStyles>;\r\n  footerButton: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongOverviewStyles = (): IMahjongOverviewStyles => ({\r\n  commandBar: {\r\n    root: {\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n  dashboard: {\r\n    root: { padding: \"24px 0 0 0\" },\r\n  },\r\n  listItem: {\r\n    root: {\r\n      maxWidth: \"100%\",\r\n      width: \"100%\",\r\n      padding: \"20px 10px 20px 20px\",\r\n      margin: \"10px 0\",\r\n    },\r\n    flexContainer: {\r\n      justifyContent: \"flex-start\",\r\n    },\r\n  },\r\n  footerButton: {\r\n    root: {\r\n      marginTop: 30,\r\n      float: \"right\",\r\n      marginRight: 30,\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IMahjongOverviewClassNames {\r\n  page: string;\r\n  list: string;\r\n  header: string;\r\n  winnerIcon: string;\r\n  winnerIcon2: string;\r\n  eastIcon: string;\r\n}\r\n\r\nexport const mahjongOverviewClassNames = memoizeFunction(\r\n  (): IMahjongOverviewClassNames => {\r\n    return mergeStyleSets({\r\n      page: {\r\n        overflow: \"auto\",\r\n      },\r\n      list: {\r\n        margin: \"0 10px\",\r\n      },\r\n      header: {\r\n        marginLeft: \"10px\",\r\n        marginRight: \"10px\",\r\n      },\r\n      winnerIcon: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"auto\",\r\n        color: \"green\",\r\n      },\r\n      winnerIcon2: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"0px\",\r\n        color: \"green\",\r\n      },\r\n      eastIcon: {\r\n        fontSize: 20,\r\n        height: 20,\r\n        width: 20,\r\n        marginRight: \"10px\",\r\n        marginLeft: \"auto\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","const storageName = 'Main';\r\n\r\nexport const loadData = () => {\r\n    if (isSupported) {\r\n        try {\r\n            return JSON.parse(localStorage.getItem(storageName) || '');\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport const saveData = (data: any): boolean => {\r\n    if (isSupported) {\r\n        try {\r\n            localStorage.setItem(storageName, JSON.stringify(data));\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport const isSupported = (() => {\r\n    try {\r\n        let itemBackup = localStorage.getItem('');\r\n        localStorage.removeItem('');\r\n        localStorage.setItem('', itemBackup || '');\r\n        if (itemBackup === null)\r\n            localStorage.removeItem('');\r\n        else\r\n            localStorage.setItem('', itemBackup);\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n})();\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport {\r\n  IMahJongUser,\r\n  IMahJongGame,\r\n  createGame,\r\n  createScore,\r\n  IMahJongScore,\r\n  IMahJongSet,\r\n  MahJongTileTypes,\r\n  MahJongSetTypes,\r\n} from \"../Mahjong.model\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport {\r\n  map,\r\n  find,\r\n  uniqBy,\r\n  filter,\r\n  without,\r\n  forEach,\r\n  sumBy,\r\n  some,\r\n  min,\r\n} from \"lodash\";\r\n\r\ninterface MahjongOverviewState {\r\n  players: IMahJongUser[];\r\n  games: IMahJongGame[];\r\n  currentPlayers: IMahJongUser[];\r\n  currentGame: IMahJongGame;\r\n}\r\n\r\nconst initialState: MahjongOverviewState = {\r\n  players: [],\r\n  games: [],\r\n  currentPlayers: [],\r\n  currentGame: createGame(),\r\n};\r\n\r\nexport const overviewSlice = createSlice({\r\n  name: \"mahjongOverview\",\r\n  initialState,\r\n  reducers: {\r\n    loadFailed: (state) => {\r\n      state = initialState;\r\n    },\r\n    loadSuccess: (state, action: PayloadAction<MahjongOverviewState>) => {\r\n      state.players = action.payload?.players ?? initialState.players;\r\n      state.games = action.payload?.games ?? initialState.games;\r\n      state.currentPlayers =\r\n        action.payload?.currentPlayers ?? initialState.currentPlayers;\r\n      state.currentGame =\r\n        action.payload?.currentGame ?? initialState.currentGame;\r\n      updateGameUsers(state);\r\n      updateCalculatedScore(state.currentGame);\r\n    },\r\n    setPlayers: (state, action: PayloadAction<IMahJongUser[]>) => {\r\n      state.currentPlayers = action.payload;\r\n      updateGameUsers(state);\r\n    },\r\n    addUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      state.players = uniqBy(\r\n        state.players,\r\n        (user: IMahJongUser): string => user.name\r\n      );\r\n      state.players = uniqBy(\r\n        state.players,\r\n        (user: IMahJongUser): string => user.id\r\n      );\r\n      if (\r\n        state.players &&\r\n        !find(\r\n          state.players,\r\n          (player: IMahJongUser) => player.name === action.payload.name\r\n        )\r\n      ) {\r\n        state.players.push(action.payload);\r\n      }\r\n      if (\r\n        state.currentPlayers.length < 4 &&\r\n        !find(\r\n          state.currentPlayers,\r\n          (player: IMahJongUser) => player.id === action.payload.id\r\n        )\r\n      ) {\r\n        state.currentPlayers.push(action.payload);\r\n      }\r\n      updateGameUsers(state);\r\n    },\r\n    deleteUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      if (state.players) {\r\n        state.players = filter(\r\n          state.players,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        state.currentPlayers = filter(\r\n          state.currentPlayers,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    clearGame: (state) => {\r\n      forEach(state.currentGame.score, (score: IMahJongScore) => {\r\n        score.sets = [];\r\n        score.points = 0;\r\n        score.gameScore = 0;\r\n        score.isWinner = false;\r\n        score.isEast = false;\r\n      });\r\n      saveData(state);\r\n    },\r\n    clearAllGames: (state) => {\r\n      forEach(state.currentGame.score, (score: IMahJongScore) => {\r\n        score.sets = [];\r\n        score.points = 0;\r\n        score.gameScore = 0;\r\n        score.isWinner = false;\r\n        score.isEast = false;\r\n      });\r\n      state.games = [];\r\n      saveData(state);\r\n    },\r\n    clearAll: (state) => {\r\n      state = initialState;\r\n      saveData(state);\r\n    },\r\n    updateScore: (state, action: PayloadAction<IMahJongScore>) => {\r\n      const found = find(\r\n        state.currentGame?.score,\r\n        (score: IMahJongScore): boolean =>\r\n          score.playerId === action.payload?.playerId\r\n      );\r\n      if (found) {\r\n        const otherScore = without<IMahJongScore>(\r\n          state.currentGame.score,\r\n          found\r\n        );\r\n        forEach(otherScore, (score: IMahJongScore) => {\r\n          if (action.payload.isWinner) {\r\n            score.isWinner = false;\r\n          }\r\n          if (action.payload.isEast) {\r\n            score.isEast = false;\r\n          }\r\n        });\r\n        state.currentGame.score = [...otherScore, { ...action.payload }];\r\n        updateCalculatedScore(state.currentGame);\r\n        saveData(state);\r\n      }\r\n    },\r\n    saveGame: (state) => {\r\n      updateCalculatedScore(state.currentGame);\r\n      if (\r\n        some(\r\n          state.currentGame.score,\r\n          (score: IMahJongScore): boolean => score.points !== 0\r\n        )\r\n      ) {\r\n        state.games = [...state.games, state.currentGame];\r\n        state.currentGame = createGame();\r\n        updateGameUsers(state);\r\n        saveData(state);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nfunction updateGameUsers(state: MahjongOverviewState) {\r\n  state.currentPlayers = filter(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser): boolean => {\r\n      return !!find(\r\n        state.players,\r\n        (player: IMahJongUser) => player.id === user.id\r\n      );\r\n    }\r\n  );\r\n  state.currentPlayers = uniqBy(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser): string => user.id\r\n  );\r\n  state.currentGame.score = map(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser, index: number): IMahJongScore => {\r\n      const found = find(\r\n        state.currentGame.score,\r\n        (score: IMahJongScore): boolean => score.playerId === user.id\r\n      );\r\n      return found || createScore(user.id);\r\n    }\r\n  );\r\n  saveData(state);\r\n}\r\n\r\nfunction updateCalculatedScore(game: IMahJongGame): void {\r\n  if (!game?.score || game.score.length <= 1) {\r\n    return; // Nothing to update\r\n  }\r\n\r\n  let winnerFound = false;\r\n  forEach(game.score, (score: IMahJongScore) => {\r\n    score.points = scoreToPoints(score);\r\n    winnerFound = winnerFound || !!score.isWinner;\r\n  });\r\n\r\n  if (!winnerFound) {\r\n    return;\r\n  }\r\n\r\n  forEach(game.score, (scoreToCalculate: IMahJongScore) => {\r\n    scoreToCalculate.gameScore = sumBy(\r\n      game.score,\r\n      (score: IMahJongScore): number => {\r\n        if (score.playerId === scoreToCalculate.playerId) {\r\n          return 0; // Skip\r\n        }\r\n\r\n        let difference = score.isWinner ? 0 : scoreToCalculate.points;\r\n        if (!scoreToCalculate.isWinner) {\r\n          difference -= score.points;\r\n        }\r\n\r\n        return score.isEast || scoreToCalculate.isEast\r\n          ? difference * 2\r\n          : difference;\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nexport const DefaultWinnerPoints = 10;\r\n\r\nexport function scoreToPoints(score: IMahJongScore): number {\r\n  let points = score.isWinner ? DefaultWinnerPoints : 0;\r\n  points += sumBy(score.sets, (set: IMahJongSet): number => {\r\n    if (set.tileType === MahJongTileTypes.Flower) {\r\n      switch (set.setType) {\r\n        // Each flower tile yields 4 points\r\n        case MahJongSetTypes.Pair:\r\n          return 8;\r\n        case MahJongSetTypes.Chow:\r\n        case MahJongSetTypes.Poong:\r\n          return 12;\r\n        case MahJongSetTypes.Kong:\r\n          return 16;\r\n        case MahJongSetTypes.Single:\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n\r\n    // Special end pair rule:\r\n    if (\r\n      set.setType === MahJongSetTypes.Pair &&\r\n      (set.tileType === MahJongTileTypes.Dragon ||\r\n        (set.tileType === MahJongTileTypes.Wind && set.ownWind))\r\n    ) {\r\n      return 2;\r\n    }\r\n\r\n    // All other tile types:\r\n    let sub = 0;\r\n    if (set.setType === MahJongSetTypes.Poong) {\r\n      sub = 2;\r\n    } else if (set.setType === MahJongSetTypes.Kong) {\r\n      sub = 8;\r\n    }\r\n    if (\r\n      set.oneOrNine ||\r\n      set.tileType === MahJongTileTypes.Dragon ||\r\n      set.tileType === MahJongTileTypes.Wind\r\n    ) {\r\n      sub *= 2;\r\n    }\r\n    if (set.inHand) {\r\n      sub *= 2;\r\n    }\r\n\r\n    return sub;\r\n  });\r\n\r\n  let honorFactor = 1;\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        !!set.ownWind &&\r\n        set.tileType === MahJongTileTypes.Wind &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in own wind\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        set.tileType === MahJongTileTypes.Dragon &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in dragons\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        set.tileType === MahJongTileTypes.Flower &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in flowers\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (score.isWinner) {\r\n    let containDragonsOrWinds = false;\r\n    let containBamboo = 0;\r\n    let containCircle = 0;\r\n    let containCharacter = 0;\r\n    forEach(score.sets, (set: IMahJongSet) => {\r\n      if (set.tileType === MahJongTileTypes.Bamboo) {\r\n        containBamboo = 1;\r\n      }\r\n      if (set.tileType === MahJongTileTypes.Circle) {\r\n        containCircle = 1;\r\n      }\r\n      if (set.tileType === MahJongTileTypes.Character) {\r\n        containCharacter = 1;\r\n      }\r\n      if (\r\n        set.tileType === MahJongTileTypes.Dragon ||\r\n        set.tileType === MahJongTileTypes.Wind\r\n      ) {\r\n        containDragonsOrWinds = true;\r\n      }\r\n    });\r\n\r\n    if (containBamboo + containCircle + containCharacter === 1) {\r\n      if (containDragonsOrWinds) {\r\n        honorFactor *= 2;\r\n      } else {\r\n        honorFactor *= 8;\r\n      }\r\n    }\r\n  }\r\n\r\n  return min([points * honorFactor, 300]) ?? 0;\r\n}\r\n\r\nexport interface IMahJongHistory {\r\n  playerId: string;\r\n  score: number;\r\n}\r\n\r\nexport function history(\r\n  games: IMahJongGame[],\r\n  players: IMahJongUser[]\r\n): IMahJongHistory[] {\r\n  const uniquePlayers = uniqBy(\r\n    players,\r\n    (user: IMahJongUser): string => user.id\r\n  );\r\n\r\n  const gameHistory = filter(games, (game: IMahJongGame): boolean => {\r\n    const uniqueScores = uniqBy(\r\n      game.score,\r\n      (score: IMahJongScore): string => score.playerId\r\n    );\r\n    if (uniquePlayers.length !== uniqueScores.length) {\r\n      return false;\r\n    }\r\n    return !some(\r\n      uniquePlayers,\r\n      (player: IMahJongUser) =>\r\n        !find(\r\n          uniqueScores,\r\n          (score: IMahJongScore) => score.playerId === player.id\r\n        )\r\n    );\r\n  });\r\n\r\n  if (gameHistory.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  return map(\r\n    uniquePlayers,\r\n    (user: IMahJongUser): IMahJongHistory => {\r\n      return {\r\n        playerId: user.id,\r\n        score: sumBy(gameHistory, (game: IMahJongGame): number => {\r\n          const foundScore = find(\r\n            game.score,\r\n            (score: IMahJongScore) => score.playerId === user.id\r\n          );\r\n          return foundScore?.gameScore ?? 0;\r\n        }),\r\n      };\r\n    }\r\n  );\r\n}\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const {\r\n  setPlayers,\r\n  addUser,\r\n  deleteUser,\r\n  clearGame,\r\n  clearAllGames,\r\n  clearAll,\r\n  updateScore,\r\n  saveGame,\r\n} = overviewSlice.actions;\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n  if (isSupported) {\r\n    dispatch(loadSuccess(loadData() as MahjongOverviewState));\r\n  } else {\r\n    dispatch(loadFailed());\r\n  }\r\n};\r\n\r\nexport const selectPlayers = (state: RootState) =>\r\n  state.mahjongOverview.players || [];\r\nexport const selectGames = (state: RootState) =>\r\n  state.mahjongOverview.games || [];\r\nexport const selectCurrentGame = (state: RootState) =>\r\n  state.mahjongOverview.currentGame || createGame();\r\nexport const selectCurrentPlayers = (state: RootState) =>\r\n  state.mahjongOverview.currentPlayers || [];\r\n\r\nexport default overviewSlice.reducer;\r\n","import {\r\n  IButtonStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IComboBoxStyles,\r\n  ITextFieldStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface ISelectUserPanelStyles {\r\n  combobox: Partial<IComboBoxStyles>;\r\n  footer: Partial<IButtonStyles>;\r\n  firstRoot: Partial<ITextFieldStyles>;\r\n  firstContainer: Partial<IComboBoxStyles>;\r\n}\r\n\r\nexport const getSelectUserPanelStyles = (): ISelectUserPanelStyles => ({\r\n  footer: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  combobox: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  firstRoot: {\r\n    root: {\r\n      flexGrow: \"1\",\r\n      flexShrink: \"1\",\r\n    },\r\n  },\r\n  firstContainer: {\r\n    container: {\r\n      flexGrow: \"1\",\r\n      flexShrink: \"1\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ISelectUserPanelClassNames {\r\n  wrapper: string;\r\n}\r\n\r\nexport const selectUserPanelClassNames = memoizeFunction(\r\n  (): ISelectUserPanelClassNames => {\r\n    return mergeStyleSets({\r\n      wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n        margin: \"30px 5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  classNamesFunction,\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  Panel,\r\n  PrimaryButton,\r\n  IconButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  selectUserPanelClassNames,\r\n  getSelectUserPanelStyles,\r\n  ISelectUserPanelClassNames,\r\n} from \"./SelectUserPanel.styles\";\r\nimport { map, find, filter, isEmpty } from \"lodash\";\r\nimport { IMahJongUser, createUser } from \"../Mahjong.model\";\r\nimport {\r\n  EditPlayersTitle,\r\n  CloseButton,\r\n  DeleteButton,\r\n  DeletePlayerLabel,\r\n  OkButton,\r\n} from \"../../../localization/DisplayStrings\";\r\n\r\nexport interface SelectUserPanelProps {\r\n  isOpen: boolean;\r\n  onSave: (selectedPlayers: IMahJongUser[]) => void;\r\n  onDelete: (player: IMahJongUser) => void;\r\n  allPlayers: IMahJongUser[];\r\n  currentPlayers: IMahJongUser[];\r\n}\r\n\r\nexport function SelectUserPanel(props: SelectUserPanelProps): JSX.Element {\r\n  const classNames = classNamesFunction<{}, ISelectUserPanelClassNames>()(\r\n    selectUserPanelClassNames\r\n  );\r\n  const styles = getSelectUserPanelStyles();\r\n\r\n  const { isOpen, onSave, onDelete, allPlayers, currentPlayers } = props;\r\n  const [selectedPlayers, setSelectedPlayers] = React.useState<IMahJongUser[]>(\r\n    []\r\n  );\r\n  const [userToDelete, setUserToDelete] = React.useState<IMahJongUser | null>(\r\n    null\r\n  );\r\n\r\n  useEffect((): void => {\r\n    const selected = [...currentPlayers];\r\n    let i = selected.length;\r\n    for (i; i < 4; i++) {\r\n      selected.push(createUser(\"\"));\r\n    }\r\n    setSelectedPlayers(selected);\r\n  }, [currentPlayers]);\r\n\r\n  const onChange = (selectedIndex: number) => (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    const selected = [...selectedPlayers];\r\n    if (selected.length > selectedIndex) {\r\n      selected[selectedIndex] = option?.data || createUser(\"\");\r\n    }\r\n    setSelectedPlayers(selected);\r\n  };\r\n\r\n  const onSaveClicked = () => {\r\n    onSave(\r\n      filter(\r\n        selectedPlayers,\r\n        (user: IMahJongUser): boolean => !isEmpty(user.name)\r\n      )\r\n    );\r\n  };\r\n\r\n  const options = [\r\n    { key: \"_\", text: \"\" },\r\n    ...map(\r\n      allPlayers,\r\n      (user: IMahJongUser): IComboBoxOption => {\r\n        return { key: user.id, text: user.name, data: user };\r\n      }\r\n    ),\r\n  ];\r\n\r\n  const filteredOptions = (user: IMahJongUser): IComboBoxOption[] => {\r\n    const filtered = filter(options, (option: IComboBoxOption): boolean => {\r\n      return (\r\n        option.key === user.id ||\r\n        !find(\r\n          selectedPlayers,\r\n          (selected: IMahJongUser): boolean => option.key === selected.id\r\n        )\r\n      );\r\n    });\r\n    return filtered.length === 1 ? [] : filtered;\r\n  };\r\n\r\n  const renderComboBox = (user: IMahJongUser, key: number): JSX.Element => (\r\n    <ComboBox\r\n      key={key}\r\n      aria-label=\"\"\r\n      selectedKey={user.id}\r\n      autoComplete=\"on\"\r\n      options={filteredOptions(user)}\r\n      onChange={onChange(key)}\r\n      styles={styles.combobox}\r\n    />\r\n  );\r\n\r\n  const allComboboxes = map(\r\n    selectedPlayers,\r\n    (user: IMahJongUser, index: number): JSX.Element =>\r\n      renderComboBox(user, index)\r\n  );\r\n\r\n  const onDeleteUserChange = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    setUserToDelete(option?.data);\r\n  };\r\n  const onDeleteUserClicked = () => {\r\n    if (userToDelete) {\r\n      onDelete(userToDelete);\r\n    }\r\n  };\r\n\r\n  const renderDeleteCombobox = (): JSX.Element => {\r\n    return (\r\n      <div className={classNames.wrapper}>\r\n        <ComboBox\r\n          label={DeletePlayerLabel()}\r\n          aria-label=\"\"\r\n          autoComplete=\"on\"\r\n          selectedKey={userToDelete?.id}\r\n          options={options.length === 1 ? [] : options}\r\n          onChange={onDeleteUserChange}\r\n          styles={styles.firstContainer}\r\n        />\r\n        <IconButton\r\n          iconProps={{ iconName: \"Delete\" }}\r\n          onClick={onDeleteUserClicked}\r\n          title={DeleteButton()}\r\n          ariaLabel={DeleteButton()}\r\n          disabled={isEmpty(userToDelete?.id)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onRenderFooterContent = () => (\r\n    <div>\r\n      <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n        {OkButton()}\r\n      </PrimaryButton>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={isOpen}\r\n        isLightDismiss\r\n        onDismiss={onSaveClicked}\r\n        headerText={EditPlayersTitle()}\r\n        closeButtonAriaLabel={CloseButton()}\r\n        onRenderFooterContent={onRenderFooterContent}\r\n        isFooterAtBottom={true}\r\n      >\r\n        {allComboboxes}\r\n        {renderDeleteCombobox()}\r\n      </Panel>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ICommandBarStyles,\r\n  IStackStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IButtonStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongDetailsStyles {\r\n  commandBar: ICommandBarStyles;\r\n  dashboard: IStackStyles;\r\n  listButton: Partial<IButtonStyles>;\r\n  footer: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongDetailsStyles = (): IMahjongDetailsStyles => ({\r\n  commandBar: {\r\n    root: {\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n  dashboard: {\r\n    root: { padding: \"24px 0 0 0\" },\r\n  },\r\n  listButton: {\r\n    root: {\r\n      marginTop: \"10px\",\r\n      marginLeft: \"auto\",\r\n    },\r\n  },\r\n  footer: {\r\n    root: {\r\n      marginTop: 30,\r\n      float: \"right\",\r\n      marginRight: 30,\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IMahjongDetailsClassNames {\r\n  page: string;\r\n  content: string;\r\n  listItem: string;\r\n  listDescription: string;\r\n}\r\n\r\nexport const mahjongDetailsClassNames = memoizeFunction(\r\n  (): IMahjongDetailsClassNames => {\r\n    return mergeStyleSets({\r\n      page: {\r\n        overflow: \"auto\",\r\n        // background: '#F8F8F9'\r\n      },\r\n      content: {\r\n        margin: \"10px\",\r\n      },\r\n      listItem: {\r\n        display: \"flex\",\r\n        margin: \"10px\",\r\n      },\r\n      listDescription: {\r\n        margin: \"0 20px\",\r\n        padding: \"5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  IButtonStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IChoiceGroupOptionStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IScorePanelStyles {\r\n  footer: Partial<IButtonStyles>;\r\n  choiceGroup: Partial<IChoiceGroupOptionStyles>;\r\n}\r\n\r\nexport const getScorePanelStyles = (): IScorePanelStyles => ({\r\n  footer: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  choiceGroup: {\r\n    choiceFieldWrapper: {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IScorePanelClassNames {\r\n  wrapper: string;\r\n}\r\n\r\nexport const scorePanelClassNames = memoizeFunction(\r\n  (): IScorePanelClassNames => {\r\n    return mergeStyleSets({\r\n      wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n        margin: \"30px 5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  DragonLabel,\r\n  WindLabel,\r\n  BambooLabel,\r\n  CircleLabel,\r\n  CharacterLabel,\r\n  FlowerLabel,\r\n  UnknownLabel,\r\n  SingleLabel,\r\n  PairLabel,\r\n  ChowLabel,\r\n  PoongLabel,\r\n  KongLabel,\r\n} from \"../../localization/DisplayStrings\";\r\nimport MahJongGreenDragon from \"../../images/MahjongGreenDragon.jpg\";\r\nimport MahJongEast from \"../../images/MahjongEast.jpg\";\r\nimport MahJongBamboo6 from \"../../images/MahjongBamboo6.jpg\";\r\nimport MahJongBambooChow from \"../../images/MahjongBambooChow.jpg\";\r\nimport MahJongCircle5 from \"../../images/MahjongCircle5.jpg\";\r\nimport MahJongCircleChow from \"../../images/MahjongCircleChow.jpg\";\r\nimport MahJongCharacter4 from \"../../images/MahjongCharacter4.jpg\";\r\nimport MahJongCharacterChow from \"../../images/MahjongCharacterChow.jpg\";\r\nimport MahJongSeason1 from \"../../images/MahjongSeason1.jpg\";\r\nimport MahJongSeason2 from \"../../images/MahjongSeason2.jpg\";\r\nimport MahJongSeason3 from \"../../images/MahjongSeason3.jpg\";\r\nimport MahJongSeason4 from \"../../images/MahjongSeason4.jpg\";\r\nimport MahJongFlower2 from \"../../images/MahjongFlower2.jpg\";\r\nimport {\r\n  MahJongTileTypes,\r\n  MahJongSetTypes,\r\n  IMahJongSet,\r\n} from \"./Mahjong.model\";\r\n\r\nexport function displayTileType(tile: MahJongTileTypes) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Dragon:\r\n      return DragonLabel();\r\n    case MahJongTileTypes.Wind:\r\n      return WindLabel();\r\n    case MahJongTileTypes.Bamboo:\r\n      return BambooLabel();\r\n    case MahJongTileTypes.Circle:\r\n      return CircleLabel();\r\n    case MahJongTileTypes.Character:\r\n      return CharacterLabel();\r\n    case MahJongTileTypes.Flower:\r\n      return FlowerLabel();\r\n    default:\r\n      return UnknownLabel();\r\n  }\r\n}\r\n\r\nexport function imageTileType(tile: MahJongTileTypes, index?: number) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Dragon:\r\n      return MahJongGreenDragon;\r\n    case MahJongTileTypes.Wind:\r\n      return MahJongEast;\r\n    case MahJongTileTypes.Bamboo:\r\n      return MahJongBamboo6;\r\n    case MahJongTileTypes.Circle:\r\n      return MahJongCircle5;\r\n    case MahJongTileTypes.Character:\r\n      return MahJongCharacter4;\r\n    case MahJongTileTypes.Flower:\r\n      if (index === 1) {\r\n        return MahJongSeason1;\r\n      }\r\n      if (index === 2) {\r\n        return MahJongSeason2;\r\n      }\r\n      if (index === 3) {\r\n        return MahJongSeason3;\r\n      }\r\n      if (index === 6) {\r\n        return MahJongFlower2;\r\n      }\r\n      return MahJongSeason4;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\nexport function imageSet(item?: IMahJongSet) {\r\n  if (!item) {\r\n    return [];\r\n  }\r\n\r\n  if (item.tileType === MahJongTileTypes.Flower) {\r\n    return getFlowerImageSet(item.setType);\r\n  }\r\n\r\n  return getOtherImageSet(item.tileType, item.setType);\r\n}\r\n\r\nfunction getFlowerImageSet(setType: MahJongSetTypes) {\r\n  switch (setType) {\r\n    case MahJongSetTypes.Single:\r\n      return [imageTileType(MahJongTileTypes.Flower)];\r\n    case MahJongSetTypes.Pair:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 6),\r\n        imageTileType(MahJongTileTypes.Flower, 3),\r\n      ];\r\n    case MahJongSetTypes.Chow:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 6),\r\n      ];\r\n    case MahJongSetTypes.Poong:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 4),\r\n      ];\r\n    case MahJongSetTypes.Kong:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 3),\r\n        imageTileType(MahJongTileTypes.Flower, 4),\r\n      ];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction getOtherImageSet(\r\n  tileType: MahJongTileTypes,\r\n  setType: MahJongSetTypes\r\n) {\r\n  const image = imageTileType(tileType);\r\n  switch (setType) {\r\n    case MahJongSetTypes.Pair:\r\n      return [image, image];\r\n    case MahJongSetTypes.Chow:\r\n      return imageChowType(tileType);\r\n    case MahJongSetTypes.Poong:\r\n      return [image, image, image];\r\n    case MahJongSetTypes.Kong:\r\n      return [image, image, image, image];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction imageChowType(tile: MahJongTileTypes) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Bamboo:\r\n      return [MahJongBambooChow];\r\n    case MahJongTileTypes.Circle:\r\n      return [MahJongCircleChow];\r\n    case MahJongTileTypes.Character:\r\n      return [MahJongCharacterChow];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nexport function displaySetType(set: MahJongSetTypes) {\r\n  switch (set) {\r\n    case MahJongSetTypes.Single:\r\n      return SingleLabel();\r\n    case MahJongSetTypes.Pair:\r\n      return PairLabel();\r\n    case MahJongSetTypes.Chow:\r\n      return ChowLabel();\r\n    case MahJongSetTypes.Poong:\r\n      return PoongLabel();\r\n    case MahJongSetTypes.Kong:\r\n      return KongLabel();\r\n    default:\r\n      return UnknownLabel();\r\n  }\r\n}\r\n","import {\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  Panel,\r\n  PrimaryButton,\r\n  IChoiceGroupOption,\r\n  ChoiceGroup,\r\n  Stack,\r\n  Toggle,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { getScorePanelStyles } from \"./ScorePanel.styles\";\r\nimport {\r\n  IMahJongSet,\r\n  MahJongSetTypes,\r\n  MahJongTileTypes,\r\n} from \"../Mahjong.model\";\r\nimport {\r\n  CloseButton,\r\n  OkButton,\r\n  EditScoreTitle,\r\n  ChooseTileTypeLabel,\r\n  OnToggle,\r\n  OffToggle,\r\n  InHandLabel,\r\n  OneOrNineLabel,\r\n  OwnWindLabel,\r\n  ChooseSetTypeLabel,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport {\r\n  displayTileType,\r\n  displaySetType,\r\n  imageTileType,\r\n} from \"../MahjongDisplay\";\r\n\r\nexport interface ScorePanelProps {\r\n  isOpen: boolean;\r\n  onClose: (set: IMahJongSet) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport function ScorePanel(props: ScorePanelProps): JSX.Element {\r\n  const styles = getScorePanelStyles();\r\n\r\n  const { isOpen, onClose, onCancel } = props;\r\n  const [setType, setSetType] = React.useState<MahJongSetTypes>(\r\n    MahJongSetTypes.Poong\r\n  );\r\n  const [tileType, setTileType] = React.useState<MahJongTileTypes>(\r\n    MahJongTileTypes.Bamboo\r\n  );\r\n  const [inHand, setInHand] = React.useState(false);\r\n  const [oneOrNine, setOneOrNine] = React.useState(false);\r\n  const [ownWind, setOwnWind] = React.useState(false);\r\n\r\n  useEffect((): void => {\r\n    setSetType(MahJongSetTypes.Poong);\r\n    setTileType(MahJongTileTypes.Bamboo);\r\n    setInHand(false);\r\n    setOneOrNine(false);\r\n    setOwnWind(false);\r\n  }, [isOpen]);\r\n\r\n  const onSaveClicked = () => {\r\n    onClose({\r\n      tileType,\r\n      setType,\r\n      inHand,\r\n      oneOrNine,\r\n      ownWind,\r\n    });\r\n  };\r\n  const onChangeInHand = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setInHand(!!checked);\r\n  };\r\n  const onChangeOneOrNine = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setOneOrNine(!!checked);\r\n  };\r\n  const onChangeOwnWind = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => {\r\n    setOwnWind(!!checked);\r\n  };\r\n  const onChangeTileType = (\r\n    ev?: React.FormEvent<HTMLElement | HTMLInputElement>,\r\n    option?: IChoiceGroupOption\r\n  ) => {\r\n    const tileType = parseInt(\r\n      option?.key ?? MahJongTileTypes.Bamboo.toString()\r\n    ) as MahJongTileTypes;\r\n    if (tileType === MahJongTileTypes.Flower) {\r\n      if (setType === MahJongSetTypes.Poong) {\r\n        setSetType(MahJongSetTypes.Single);\r\n      }\r\n    } else if (setType === MahJongSetTypes.Single) {\r\n      setSetType(MahJongSetTypes.Poong);\r\n    }\r\n    setTileType(tileType);\r\n  };\r\n  const onChangeSetType = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    setSetType((option?.key ?? MahJongSetTypes.Poong) as MahJongSetTypes);\r\n  };\r\n\r\n  const getTileOption = (\r\n    key: MahJongTileTypes,\r\n    disabled?: boolean\r\n  ): IChoiceGroupOption => {\r\n    return {\r\n      key: key.toString(),\r\n      imageSrc: imageTileType(key),\r\n      selectedImageSrc: imageTileType(key),\r\n      imageSize: { width: 40, height: 55 },\r\n      imageAlt: displayTileType(key),\r\n      text: displayTileType(key),\r\n      disabled,\r\n      styles: styles.choiceGroup,\r\n    };\r\n  };\r\n\r\n  const getTileOptions = (): IChoiceGroupOption[] => {\r\n    // const isSingle = setType === MahJongSetTypes.Single;\r\n    const isChow = setType === MahJongSetTypes.Chow;\r\n    return [\r\n      getTileOption(MahJongTileTypes.Dragon, isChow),\r\n      getTileOption(MahJongTileTypes.Wind, isChow),\r\n      getTileOption(MahJongTileTypes.Character),\r\n      getTileOption(MahJongTileTypes.Circle),\r\n      getTileOption(MahJongTileTypes.Bamboo),\r\n      getTileOption(MahJongTileTypes.Flower, isChow),\r\n    ];\r\n  };\r\n\r\n  const getSetOption = (key: MahJongSetTypes): IComboBoxOption => {\r\n    return { key, text: displaySetType(key) };\r\n  };\r\n\r\n  const getSetOptions = (): IComboBoxOption[] => {\r\n    const options = [];\r\n    if (\r\n      tileType === MahJongTileTypes.Bamboo ||\r\n      tileType === MahJongTileTypes.Circle ||\r\n      tileType === MahJongTileTypes.Character\r\n    ) {\r\n      options.push(getSetOption(MahJongSetTypes.Chow));\r\n    }\r\n\r\n    options.push(getSetOption(MahJongSetTypes.Poong));\r\n    options.push(getSetOption(MahJongSetTypes.Kong));\r\n    options.push(getSetOption(MahJongSetTypes.Pair));\r\n\r\n    if (tileType === MahJongTileTypes.Flower) {\r\n      options.push(getSetOption(MahJongSetTypes.Single));\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  // <DefaultButton styles={styles.footer} onClick={onCancel}>{CancelButton()}</DefaultButton>;\r\n  const onRenderFooterContent = () => (\r\n    <div>\r\n      <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n        {OkButton()}\r\n      </PrimaryButton>\r\n    </div>\r\n  );\r\n\r\n  const isInHandVisible = tileType !== MahJongTileTypes.Flower;\r\n  const isOneOrNineVisible =\r\n    tileType === MahJongTileTypes.Bamboo ||\r\n    tileType === MahJongTileTypes.Circle ||\r\n    tileType === MahJongTileTypes.Character;\r\n  const isOwnWindVisible = tileType === MahJongTileTypes.Wind;\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={isOpen}\r\n        isLightDismiss\r\n        onDismiss={onCancel}\r\n        headerText={EditScoreTitle()}\r\n        closeButtonAriaLabel={CloseButton()}\r\n        onRenderFooterContent={onRenderFooterContent}\r\n        isFooterAtBottom={true}\r\n      >\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n          <ChoiceGroup\r\n            label={ChooseTileTypeLabel()}\r\n            selectedKey={tileType.toString()}\r\n            onChange={onChangeTileType}\r\n            options={getTileOptions()}\r\n          />\r\n          <ComboBox\r\n            label={ChooseSetTypeLabel()}\r\n            aria-label=\"\"\r\n            autoComplete=\"on\"\r\n            selectedKey={setType}\r\n            options={getSetOptions()}\r\n            onChange={onChangeSetType}\r\n          />\r\n          {isInHandVisible && (\r\n            <Toggle\r\n              label={InHandLabel()}\r\n              checked={inHand}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeInHand}\r\n            />\r\n          )}\r\n          {isOneOrNineVisible && (\r\n            <Toggle\r\n              label={OneOrNineLabel()}\r\n              checked={oneOrNine}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeOneOrNine}\r\n            />\r\n          )}\r\n          {isOwnWindVisible && (\r\n            <Toggle\r\n              label={OwnWindLabel()}\r\n              checked={ownWind}\r\n              inlineLabel\r\n              onText={OnToggle()}\r\n              offText={OffToggle()}\r\n              onChange={onChangeOwnWind}\r\n            />\r\n          )}\r\n        </Stack>\r\n      </Panel>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  CommandBar,\r\n  ICommandBarItemProps,\r\n  classNamesFunction,\r\n  Toggle,\r\n  Stack,\r\n  List,\r\n  Image,\r\n  IconButton,\r\n  PrimaryButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  mahjongDetailsClassNames,\r\n  getMahjongDetailsStyles,\r\n  IMahjongDetailsClassNames,\r\n} from \"./MahjongDetails.styles\";\r\nimport {\r\n  BackButton,\r\n  EastToggleLabel,\r\n  WinnerToggleLabel,\r\n  OnToggle,\r\n  OffToggle,\r\n  CurrentScore,\r\n  AddButton,\r\n  DeleteButton,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport {\r\n  updateScore,\r\n  selectCurrentGame,\r\n  scoreToPoints,\r\n} from \"../overview/MahjongOverviewSlice\";\r\nimport {\r\n  IMahJongUser,\r\n  IMahJongScore,\r\n  getScore,\r\n  createScore,\r\n  IMahJongSet,\r\n} from \"../Mahjong.model\";\r\nimport { ScorePanel } from \"../scorePanel/ScorePanel\";\r\nimport { displayTileType, displaySetType, imageSet } from \"../MahjongDisplay\";\r\nimport { map, without } from \"lodash\";\r\n\r\nexport interface MahjongDetailsProps {\r\n  user: IMahJongUser;\r\n  onNavigateBack: () => void;\r\n}\r\n\r\nexport function MahjongDetails(props: MahjongDetailsProps): JSX.Element {\r\n  const classNames = classNamesFunction<{}, IMahjongDetailsClassNames>()(\r\n    mahjongDetailsClassNames\r\n  );\r\n  const styles = getMahjongDetailsStyles();\r\n\r\n  const { user, onNavigateBack } = props;\r\n\r\n  const currentGame = useSelector(selectCurrentGame);\r\n  const [userScore, setUserScore] = React.useState<IMahJongScore | undefined>(\r\n    undefined\r\n  );\r\n  const [showScorePanel, setShowScorePanel] = React.useState(false);\r\n\r\n  useEffect((): void => {\r\n    if (user && currentGame) {\r\n      setUserScore(getScore(currentGame, user));\r\n    }\r\n  }, [user, currentGame]);\r\n\r\n  const initialScore = createScore(\"\");\r\n  const setWinner = (isWinner?: boolean) => {\r\n    const tempScore = {\r\n      ...initialScore,\r\n      ...userScore,\r\n      isWinner,\r\n    };\r\n    tempScore.points = scoreToPoints(tempScore);\r\n    setUserScore(tempScore);\r\n  };\r\n  const setEast = (isEast?: boolean) => {\r\n    setUserScore({ ...initialScore, ...userScore, isEast });\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const closeDetails = () => {\r\n    if (userScore) {\r\n      dispatch(updateScore(userScore));\r\n    }\r\n    onNavigateBack();\r\n  };\r\n  const closeScorePanel = (set: IMahJongSet) => {\r\n    if (userScore) {\r\n      const tempScore = {\r\n        ...initialScore,\r\n        ...userScore,\r\n        sets: [...(userScore.sets || []), set],\r\n      };\r\n      tempScore.points = scoreToPoints(tempScore);\r\n      setUserScore(tempScore);\r\n    }\r\n    setShowScorePanel(false);\r\n  };\r\n  const removeSetClicked = (set: IMahJongSet) => {\r\n    if (userScore) {\r\n      const tempScore = {\r\n        ...initialScore,\r\n        ...userScore,\r\n        sets: without(userScore.sets, set),\r\n      };\r\n      tempScore.points = scoreToPoints(tempScore);\r\n      setUserScore(tempScore);\r\n    }\r\n  };\r\n  const cancelScorePanel = () => setShowScorePanel(false);\r\n  const onshowScorePanel = () => {\r\n    setShowScorePanel(true);\r\n  };\r\n  const onChangeWinner = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => setWinner(checked);\r\n  const onChangeEast = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    checked?: boolean\r\n  ) => setEast(checked);\r\n\r\n  const items: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"Back\",\r\n      name: BackButton(),\r\n      iconProps: {\r\n        iconName: \"Back\",\r\n      },\r\n      onClick: closeDetails,\r\n    },\r\n    {\r\n      key: \"Score\",\r\n      name: AddButton(),\r\n      iconProps: {\r\n        iconName: \"6PointStar\",\r\n      },\r\n      onClick: onshowScorePanel,\r\n    },\r\n  ];\r\n\r\n  const getImage = (item: IMahJongSet): JSX.Element[] | JSX.Element => {\r\n    return map(\r\n      imageSet(item),\r\n      (imageSrc, index): JSX.Element => {\r\n        return (\r\n          <Image\r\n            key={index}\r\n            src={imageSrc}\r\n            alt={displayTileType(item.tileType)}\r\n            height={55}\r\n          />\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  const onRenderCell = (item?: IMahJongSet): JSX.Element | null => {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className={classNames.listItem}>\r\n        {getImage(item)}\r\n        <div className={classNames.listDescription}>\r\n          <div>{displayTileType(item?.tileType)}</div>\r\n          <div>{displaySetType(item?.setType)}</div>\r\n        </div>\r\n        <IconButton\r\n          iconProps={{ iconName: \"Delete\" }}\r\n          title={DeleteButton()}\r\n          ariaLabel={DeleteButton()}\r\n          onClick={() => {\r\n            removeSetClicked(item);\r\n          }}\r\n          styles={styles.listButton}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classNames.page}>\r\n      <CommandBar items={items} styles={styles.commandBar} />\r\n      <div className={classNames.content}>\r\n        <h1>{user.name}</h1>\r\n        <p>{CurrentScore(userScore?.points ?? 0)}</p>\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n          <Toggle\r\n            label={WinnerToggleLabel()}\r\n            checked={userScore?.isWinner}\r\n            inlineLabel\r\n            onText={OnToggle()}\r\n            offText={OffToggle()}\r\n            onChange={onChangeWinner}\r\n          />\r\n          <Toggle\r\n            label={EastToggleLabel()}\r\n            checked={userScore?.isEast}\r\n            inlineLabel\r\n            onText={OnToggle()}\r\n            offText={OffToggle()}\r\n            onChange={onChangeEast}\r\n          />\r\n        </Stack>\r\n        <List items={userScore?.sets} onRenderCell={onRenderCell} />\r\n        <PrimaryButton styles={styles.footer} onClick={onshowScorePanel}>\r\n          {AddButton()}\r\n        </PrimaryButton>\r\n      </div>\r\n      <ScorePanel\r\n        isOpen={showScorePanel}\r\n        onClose={closeScorePanel}\r\n        onCancel={cancelScorePanel}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  PrimaryButton,\r\n  DefaultButton,\r\n  Dialog,\r\n  DialogType,\r\n  DialogFooter,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { map } from \"lodash\";\r\nimport { IMahJongUser, createUser } from \"../Mahjong.model\";\r\nimport {\r\n  OkButton,\r\n  CancelButton,\r\n  AddUserTitle,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../overview/MahjongOverviewSlice\";\r\n\r\nexport interface AddUserPanelProps {\r\n  isOpen: boolean;\r\n  onAdd: (player: IMahJongUser) => void;\r\n  onCancel: () => void;\r\n  allPlayers: IMahJongUser[];\r\n}\r\n\r\nexport function AddUserPanel(props: AddUserPanelProps): JSX.Element {\r\n  const { isOpen, onAdd, onCancel, allPlayers } = props;\r\n  const [newPlayer, setNewPlayer] = React.useState<IMahJongUser | undefined>();\r\n  const [options, setOptions] = React.useState<IComboBoxOption[]>([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect((): void => {\r\n    setNewPlayer(undefined);\r\n  }, [isOpen]);\r\n\r\n  const mapUserToOption = (user: IMahJongUser): IComboBoxOption => {\r\n    return { key: user.id, text: user.name, data: user };\r\n  };\r\n\r\n  useEffect((): void => {\r\n    setOptions(map(allPlayers, mapUserToOption));\r\n  }, [allPlayers]);\r\n\r\n  const onSaveClicked = () => {\r\n    if (newPlayer) {\r\n      onAdd(newPlayer);\r\n    }\r\n  };\r\n\r\n  const onAddUserChange = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption,\r\n    index?: number,\r\n    value?: string\r\n  ) => {\r\n    if (option?.data) {\r\n      setNewPlayer(option.data);\r\n    } else {\r\n      const text: string | undefined = option?.text || value;\r\n      if (text) {\r\n        const createdPlayer = createUser(text);\r\n        dispatch(addUser(createdPlayer));\r\n        setNewPlayer(createdPlayer);\r\n        setOptions([...options, mapUserToOption(createdPlayer)]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      hidden={!isOpen}\r\n      onDismiss={onCancel}\r\n      dialogContentProps={{\r\n        type: DialogType.normal,\r\n        title: AddUserTitle(),\r\n        closeButtonAriaLabel: CancelButton(),\r\n      }}\r\n      modalProps={{\r\n        isBlocking: false,\r\n        // styles: { main: { maxWidth: 450 } },\r\n      }}\r\n    >\r\n      <ComboBox\r\n        ariaLabel={AddUserTitle()}\r\n        key=\"User\"\r\n        selectedKey={newPlayer?.id}\r\n        allowFreeform={true}\r\n        autoComplete=\"on\"\r\n        onChange={onAddUserChange}\r\n        options={options}\r\n      />\r\n      <DialogFooter>\r\n        <PrimaryButton onClick={onSaveClicked} text={OkButton()} />\r\n        <DefaultButton onClick={onCancel} text={CancelButton()} />\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {\r\n  CommandBar,\r\n  ICommandBarItemProps,\r\n  classNamesFunction,\r\n  CompoundButton,\r\n  Persona,\r\n  PersonaSize,\r\n  List,\r\n  FontIcon,\r\n  PrimaryButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  mahjongOverviewClassNames,\r\n  getMahjongOverviewStyles,\r\n  IMahjongOverviewClassNames,\r\n} from \"./MahjongOverview.styles\";\r\nimport {\r\n  HomeButton,\r\n  EditPlayersButton,\r\n  CurrentScore,\r\n  GameScore,\r\n  MahJongHeader,\r\n  ClearButton,\r\n  ClearAllButton,\r\n  ClearGameButton,\r\n  AddButton,\r\n  SaveScoreButton,\r\n  ClearAllGamesButton,\r\n  FullGameScore,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { navigate, Page } from \"../../main/MainSlice\";\r\nimport {\r\n  load,\r\n  selectPlayers,\r\n  selectCurrentPlayers,\r\n  setPlayers,\r\n  addUser,\r\n  deleteUser,\r\n  selectCurrentGame,\r\n  clearAll,\r\n  clearGame,\r\n  saveGame,\r\n  clearAllGames,\r\n  selectGames,\r\n  history,\r\n  IMahJongHistory,\r\n} from \"./MahjongOverviewSlice\";\r\nimport { IMahJongUser, getScore } from \"../Mahjong.model\";\r\nimport { SelectUserPanel } from \"../userPanel/SelectUserPanel\";\r\nimport { MahjongDetails } from \"../details/MahjongDetails\";\r\nimport { AddUserPanel } from \"../addUserPanel/AddUserPanel\";\r\nimport { find } from \"lodash\";\r\n\r\nexport function MahjongOverview(): JSX.Element {\r\n  const classNames = classNamesFunction<{}, IMahjongOverviewClassNames>()(\r\n    mahjongOverviewClassNames\r\n  );\r\n  const styles = getMahjongOverviewStyles();\r\n\r\n  const [refreshCount, setRefreshCount] = React.useState(0);\r\n  const [isPlayerAddOpen, setIsPlayerAddOpen] = React.useState(false);\r\n  const [isPlayerSelectOpen, setIsPlayerSelectOpen] = React.useState(false);\r\n  const [currentPlayer, setCurrentPlayer] = React.useState<\r\n    IMahJongUser | undefined\r\n  >(undefined);\r\n  const [historyGames, setHistoryGames] = React.useState<IMahJongHistory[]>([]);\r\n\r\n  const allPlayers = useSelector(selectPlayers);\r\n  const currentPlayers = useSelector(selectCurrentPlayers);\r\n  const players = useSelector(selectCurrentPlayers);\r\n  const game = useSelector(selectCurrentGame);\r\n  const games = useSelector(selectGames);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect((): void => {\r\n    dispatch(load());\r\n  }, [dispatch]);\r\n\r\n  useEffect((): void => {\r\n    const hist = history(games, currentPlayers);\r\n    setHistoryGames(hist);\r\n    setRefreshCount(refreshCount + 1);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [games, currentPlayers]);\r\n\r\n  const onSaveSelectedPlayers = (selectedPlayers: IMahJongUser[]): void => {\r\n    dispatch(setPlayers(selectedPlayers));\r\n    setIsPlayerSelectOpen(false);\r\n  };\r\n\r\n  const onAddPlayer = (player: IMahJongUser): void => {\r\n    dispatch(addUser(player));\r\n    setIsPlayerAddOpen(false);\r\n  };\r\n  const onCancel = (): void => {\r\n    setIsPlayerAddOpen(false);\r\n    setIsPlayerSelectOpen(false);\r\n  };\r\n\r\n  const onDeletePlayer = (player: IMahJongUser): void => {\r\n    dispatch(deleteUser(player));\r\n  };\r\n  const onOpenSelectedPlayers = () => setIsPlayerSelectOpen(true);\r\n  const onOpenAddPlayers = () => setIsPlayerAddOpen(true);\r\n\r\n  const onClearAll = (): void => {\r\n    dispatch(clearAll());\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n  const onClearGame = (): void => {\r\n    dispatch(clearGame());\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n  const onClearAllGames = (): void => {\r\n    dispatch(clearAllGames());\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n  const onNavigateBackFromDetails = (): void => {\r\n    setCurrentPlayer(undefined);\r\n    setRefreshCount(refreshCount + 1);\r\n  };\r\n\r\n  const openPlayer = (item?: IMahJongUser) => () => {\r\n    setCurrentPlayer(item);\r\n  };\r\n\r\n  const items: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"Back\",\r\n      text: HomeButton(),\r\n      iconProps: {\r\n        iconName: \"Home\",\r\n      },\r\n      onClick: () => {\r\n        dispatch(navigate(Page.Main));\r\n      },\r\n    },\r\n    {\r\n      key: \"Select\",\r\n      text: EditPlayersButton(),\r\n      iconProps: {\r\n        iconName: \"People\",\r\n      },\r\n      ariaLabel: EditPlayersButton(),\r\n      subMenuProps: {\r\n        items: [\r\n          {\r\n            key: \"add\",\r\n            text: AddButton(),\r\n            iconProps: { iconName: \"People\" },\r\n            onClick: onOpenAddPlayers,\r\n          },\r\n          {\r\n            key: \"SelectOrDelete\",\r\n            text: EditPlayersButton(),\r\n            iconProps: { iconName: \"People\" },\r\n            onClick: onOpenSelectedPlayers,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      key: \"save\",\r\n      text: SaveScoreButton(),\r\n      iconProps: {\r\n        iconName: \"Save\",\r\n      },\r\n      onClick: () => {\r\n        dispatch(saveGame());\r\n      },\r\n    },\r\n    {\r\n      key: \"Clear\",\r\n      text: ClearButton(),\r\n      iconProps: {\r\n        iconName: \"Delete\",\r\n      },\r\n      ariaLabel: ClearButton(),\r\n      subMenuProps: {\r\n        items: [\r\n          {\r\n            key: \"ClearAll\",\r\n            text: ClearAllButton(),\r\n            iconProps: { iconName: \"UserRemove\" },\r\n            onClick: onClearAll,\r\n            disabled: true,\r\n          },\r\n          {\r\n            key: \"ClearGames\",\r\n            text: ClearAllGamesButton(),\r\n            iconProps: { iconName: \"RemoveFromShoppingList\" },\r\n            onClick: onClearAllGames,\r\n          },\r\n          {\r\n            key: \"ClearGame\",\r\n            text: ClearGameButton(),\r\n            iconProps: { iconName: \"RemoveFromShoppingList\" },\r\n            onClick: onClearGame,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onRenderCell = (item?: IMahJongUser): JSX.Element | null => {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n\r\n    const currentScore = getScore(game, item);\r\n    const winner = currentScore.isWinner ? (\r\n      <FontIcon\r\n        iconName=\"SkypeCheck\"\r\n        className={\r\n          currentScore.isEast ? classNames.winnerIcon2 : classNames.winnerIcon\r\n        }\r\n      />\r\n    ) : null;\r\n    const east = currentScore.isEast ? (\r\n      <FontIcon iconName=\"CompassNW\" className={classNames.eastIcon} />\r\n    ) : null;\r\n\r\n    const summarizedGameScore = find(\r\n      historyGames,\r\n      (hist) => hist.playerId === item.id\r\n    );\r\n    const scoreText = summarizedGameScore\r\n      ? FullGameScore(currentScore.gameScore, summarizedGameScore.score)\r\n      : GameScore(currentScore.gameScore);\r\n    return (\r\n      <CompoundButton styles={styles.listItem} onClick={openPlayer(item)}>\r\n        <Persona\r\n          text={item?.name}\r\n          secondaryText={CurrentScore(currentScore.points)}\r\n          tertiaryText={scoreText}\r\n          size={PersonaSize.size72}\r\n        />\r\n        {east}\r\n        {winner}\r\n      </CompoundButton>\r\n    );\r\n  };\r\n\r\n  if (currentPlayer) {\r\n    return (\r\n      <MahjongDetails\r\n        user={currentPlayer}\r\n        onNavigateBack={onNavigateBackFromDetails}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classNames.page}>\r\n      <CommandBar items={items} styles={styles.commandBar} />\r\n      <h1 className={classNames.header}>{MahJongHeader()}</h1>\r\n      <AddUserPanel\r\n        isOpen={isPlayerAddOpen}\r\n        onAdd={onAddPlayer}\r\n        onCancel={onCancel}\r\n        allPlayers={allPlayers}\r\n      />\r\n      <SelectUserPanel\r\n        isOpen={isPlayerSelectOpen}\r\n        onSave={onSaveSelectedPlayers}\r\n        onDelete={onDeletePlayer}\r\n        allPlayers={allPlayers}\r\n        currentPlayers={currentPlayers}\r\n      />\r\n      <List\r\n        className={classNames.list}\r\n        version={refreshCount}\r\n        items={players}\r\n        onRenderCell={onRenderCell}\r\n      />\r\n      {players?.length < 4 && (\r\n        <PrimaryButton styles={styles.footerButton} onClick={onOpenAddPlayers}>\r\n          {EditPlayersButton()}\r\n        </PrimaryButton>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { navigate, selectPage, Page } from \"./MainSlice\";\r\nimport { Nav } from \"office-ui-fabric-react\";\r\nimport { MahJongTitle } from \"../../localization/DisplayStrings\";\r\nimport { MahjongOverview } from \"../mahjong/overview/MahjongOverview\";\r\n\r\nexport function MainPage() {\r\n  const page = useSelector(selectPage);\r\n  const dispatch = useDispatch();\r\n\r\n  switch (page) {\r\n    case Page.MahJong:\r\n      return <MahjongOverview />;\r\n    case Page.Main:\r\n      return (\r\n        <Nav\r\n          selectedKey=\"key0\"\r\n          ariaLabel=\"Nav basic example\"\r\n          groups={[\r\n            {\r\n              links: [\r\n                {\r\n                  name: MahJongTitle(),\r\n                  url: \"\",\r\n                  key: \"key0\",\r\n                  target: \"_blank\",\r\n                  onClick: () => {\r\n                    dispatch(navigate(Page.MahJong));\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n  }\r\n}\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport mainReducer from \"../pages/main/MainSlice\";\r\nimport overviewReducer from \"../pages/mahjong/overview/MahjongOverviewSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    main: mainReducer,\r\n    mahjongOverview: overviewReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { MainPage } from './pages/main/Main';\r\nimport { initializeIcons, loadTheme } from 'office-ui-fabric-react';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from 'office-ui-fabric-react/lib/Foundation';\r\n\r\nconst myTheme = loadTheme({\r\n  palette: {\r\n      themePrimary: '#2266e3',\r\n      themeLighterAlt: '#f5f8fe',\r\n      themeLighter: '#d8e4fb',\r\n      themeLight: '#b8cef7',\r\n      themeTertiary: '#759fee',\r\n      themeSecondary: '#3a76e6',\r\n      themeDarkAlt: '#1f5bcc',\r\n      themeDark: '#1a4dac',\r\n      themeDarker: '#13397f',\r\n      neutralLighterAlt: '#faf9f8',\r\n      neutralLighter: '#f3f2f1',\r\n      neutralLight: '#edebe9',\r\n      neutralQuaternaryAlt: '#e1dfdd',\r\n      neutralQuaternary: '#d0d0d0',\r\n      neutralTertiaryAlt: '#c8c6c4',\r\n      neutralTertiary: '#a19f9d',\r\n      neutralSecondary: '#605e5c',\r\n      neutralPrimaryAlt: '#3b3a39',\r\n      neutralPrimary: '#323130',\r\n      neutralDark: '#201f1e',\r\n      black: '#000000',\r\n      white: '#ffffff'\r\n  }\r\n});\r\n\r\nconst App = (): JSX.Element => {\r\n  useEffect(() => {\r\n    initializeIcons();\r\n    // initializeTheme();\r\n  });\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={myTheme}>\r\n          <MainPage />\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  );\r\n\r\n};\r\n\r\n// function initializeTheme(): void {\r\n//   if (!environment.production && !window[GlobalObjects.theme]) {\r\n//       window[GlobalObjects.theme] = myTheme;\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/MahjongGreenDragon.ae5a6502.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongEast.7287d189.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongBamboo6.93503ad1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongBambooChow.b2d6588f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCircle5.5776cb62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCircleChow.cc8debbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCharacter4.711aa9d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCharacterChow.79f76632.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason1.2d153ff1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason2.ce673dd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason3.d676d4a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason4.81b5c8aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongFlower2.9efa08e5.jpg\";"],"sourceRoot":""}