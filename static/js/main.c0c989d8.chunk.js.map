{"version":3,"sources":["pages/main/MainSlice.ts","utils/StorageUtil.ts","utils/LocalizationUtil.ts","pages/mahjong/Mahjong.model.ts","pages/mahjong/overview/MahjongOverviewSlice.ts","pages/training/overview/TrainingOverviewSlice.ts","pages/playground/overview/PlaygroundOverviewSlice.ts","pages/mahjong/overview/MahjongOverview.styles.ts","localization/DisplayStrings.ts","pages/mahjong/userPanel/SelectUserPanel.styles.ts","pages/mahjong/userPanel/SelectUserPanel.tsx","pages/mahjong/details/MahjongDetails.styles.ts","pages/mahjong/scorePanel/ScorePanel.styles.ts","pages/mahjong/MahjongDisplay.ts","pages/mahjong/scorePanel/ScorePanel.tsx","pages/mahjong/details/MahjongDetails.tsx","pages/mahjong/addUserPanel/AddUserPanel.tsx","components/page/Page.styles.ts","components/page/Page.tsx","pages/mahjong/overview/MahjongOverview.tsx","pages/playground/overview/PlaygroundOverview.styles.ts","pages/playground/overview/PlaygroundOverview.tsx","pages/training/overview/TrainingOverview.styles.ts","pages/training/overview/TrainingOverview.tsx","pages/main/MainContent.tsx","pages/main/Main.tsx","app/store.ts","App.tsx","serviceWorker.ts","index.tsx","images/MahjongGreenDragon.jpg","images/MahjongEast.jpg","images/MahjongBamboo6.jpg","images/MahjongBambooChow.jpg","images/MahjongCircle5.jpg","images/MahjongCircleChow.jpg","images/MahjongCharacter4.jpg","images/MahjongCharacterChow.jpg","images/MahjongSeason1.jpg","images/MahjongSeason2.jpg","images/MahjongSeason3.jpg","images/MahjongSeason4.jpg","images/MahjongFlower2.jpg"],"names":["Page","loadData","storageName","isSupported","JSON","parse","localStorage","getItem","e","saveData","data","setItem","stringify","itemBackup","removeItem","supportedRegions","da","en","ru","zh","supportedLanguages","locale","setLocale","value","getLocale","getRegion","t","loc","dateToString","date","toLocaleDateString","initialState","page","MahJong","language","mainSlice","createSlice","name","reducers","navigate","state","action","payload","saveState","setLanguage","loadFailed","loadSuccess","actions","MahJongTileTypes","MahJongSetTypes","selectPage","main","selectLanguage","createUser","id","uuidv4","createGame","score","createScore","playerId","gameScore","points","sets","getScore","game","player","find","getScoreById","players","games","currentPlayers","currentGame","overviewSlice","updateGameUsers","updateCalculatedScore","setPlayers","addUser","uniqBy","user","push","length","deleteUser","filter","clearGame","forEach","isWinner","isEast","clearAllGames","clearAll","updateScore","found","otherScore","without","saveGame","some","map","index","winnerFound","scoreToPoints","scoreToCalculate","sumBy","difference","set","tileType","Flower","setType","Pair","Chow","Poong","Kong","Single","Dragon","Wind","ownWind","sub","oneOrNine","inHand","honorFactor","containDragonsOrWinds","containBamboo","containCircle","containCharacter","Bamboo","Circle","Character","min","selectPlayers","mahjongOverview","selectGames","selectCurrentGame","selectCurrentPlayers","pushups","addPushups","today","Date","pushup","getDate","getMonth","getFullYear","newSet","count","toString","minCount","minBy","removePushups","pushUp","calcMissing","max","calcMissingAverage","current","daysInMonth","summaryDate","selectPushups","training","area","graph","townHall","width","needRoad","createBuilding","buildings","mahjongOverviewClassNames","memoizeFunction","mergeStyleSets","list","margin","winnerIcon","fontSize","height","marginRight","marginLeft","color","winnerIcon2","eastIcon","CloseButton","CancelButton","OkButton","AddButton","AddUserTitle","OnToggle","OffToggle","EditPlayersButton","DeleteButton","CurrentScore","UnknownLabel","TrainingAddMenuButton","TrainingDateButton","TrainingAddButton","TrainingDetails","selectUserPanelClassNames","wrapper","display","alignItems","SelectUserPanel","props","classNames","classNamesFunction","styles","footer","root","combobox","firstRoot","flexGrow","flexShrink","firstContainer","container","isOpen","onSave","onDelete","allPlayers","React","useState","selectedPlayers","setSelectedPlayers","userToDelete","setUserToDelete","useEffect","selected","i","onSaveClicked","isEmpty","options","key","text","filteredOptions","filtered","option","allComboboxes","ComboBox","aria-label","selectedKey","autoComplete","onChange","selectedIndex","event","renderComboBox","onDeleteUserChange","onDeleteUserClicked","Panel","isLightDismiss","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","isFooterAtBottom","className","label","IconButton","iconProps","iconName","title","ariaLabel","disabled","mahjongDetailsClassNames","overflow","content","listItem","listDescription","padding","displayTileType","tile","imageTileType","MahJongGreenDragon","MahJongEast","MahJongBamboo6","MahJongCircle5","MahJongCharacter4","MahJongSeason1","MahJongSeason2","MahJongSeason3","MahJongFlower2","MahJongSeason4","imageSet","item","getFlowerImageSet","image","MahJongBambooChow","MahJongCircleChow","MahJongCharacterChow","imageChowType","getOtherImageSet","displaySetType","ScorePanel","choiceGroup","choiceFieldWrapper","backgroundColor","onClose","onCancel","setSetType","setTileType","setInHand","setOneOrNine","setOwnWind","getTileOption","imageSrc","selectedImageSrc","imageSize","imageAlt","getSetOption","isInHandVisible","isOneOrNineVisible","isOwnWindVisible","Stack","tokens","childrenGap","ChoiceGroup","ev","parseInt","isChow","getTileOptions","getSetOptions","Toggle","checked","inlineLabel","onText","offText","MahjongDetails","commandBar","dashboard","listButton","marginTop","float","onNavigateBack","useSelector","undefined","userScore","setUserScore","showScorePanel","setShowScorePanel","initialScore","dispatch","useDispatch","onshowScorePanel","items","CommandBar","tempScore","setWinner","List","onRenderCell","Image","src","alt","getImage","removeSetClicked","AddUserPanel","onAdd","newPlayer","setNewPlayer","setOptions","mapUserToOption","Dialog","hidden","dialogContentProps","type","DialogType","normal","modalProps","isBlocking","allowFreeform","createdPlayer","DialogFooter","DefaultButton","pageClassNames","commandBarItems","hideHome","header","children","setItems","PageType","Training","Main","MahjongOverview","maxWidth","flexContainer","justifyContent","footerButton","refreshCount","setRefreshCount","isPlayerAddOpen","setIsPlayerAddOpen","isPlayerSelectOpen","setIsPlayerSelectOpen","currentPlayer","setCurrentPlayer","historyGames","setHistoryGames","hist","uniquePlayers","gameHistory","uniqueScores","foundScore","history","onOpenAddPlayers","openPlayer","subMenuProps","version","allGamePoints","currentScore","winner","FontIcon","east","summarizedGameScore","scoreText","GameScore","CompoundButton","Persona","secondaryText","tertiaryText","size","PersonaSize","size72","playgroundOverviewClassNames","PlaygroundOverview","trainingOverviewClassNames","listText","TrainingOverview","total","setTotal","average","setAverage","missing","setMissing","missingAverage","setMissingAverage","showAll","setShowAll","currentDate","setCurrentDate","showDate","setShowDate","showCalendar","setShowCalendar","sortedPushups","setSortedPushups","pushUps","fromThisMonth","fromMonth","calcTotal","sortBy","reverse","isSummary","mapSummary","sorted","thisMonth","result","actualDate","sumDate","sum","combineSummary","addItem","itemType","ContextualMenuItemType","Header","TrainingHeaderWithDate","month","day","toFixed","TrainingAverage","TrainingMissing","TrainingMissingAverage","year","removeClicked","Callout","isBeakVisible","gapSpace","doNotLayer","setInitialFocus","FocusTrapZone","firstFocusableSelector","isClickableOutsideFocusTrap","Calendar","onSelectDate","isMonthPickerVisible","firstDayOfWeek","DayOfWeek","Monday","strings","months","shortMonths","days","shortDays","goToToday","weekNumberFormatString","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","isDayPickerVisible","highlightCurrentMonth","highlightSelectedMonth","showMonthPickerAsOverlay","showGoToToday","MainContent","Nav","groups","links","url","target","Playground","MainPage","store","configureStore","reducer","mainReducer","overviewReducer","trainingReducer","playground","playgroundReducer","myTheme","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","App","initializeIcons","StrictMode","ThemeProvider","theme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"2KAKYA,E,0DCLCC,EAAW,SAACC,GACvB,GAAIC,EACF,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQL,IAAgB,IACvD,MAAOM,GACP,OAAO,KAIX,OAAO,MAGIC,EAAW,SAACP,EAAqBQ,GAC5C,GAAIP,EACF,IAEE,OADAG,aAAaK,QAAQT,EAAaE,KAAKQ,UAAUF,KAC1C,EACP,MAAOF,GACP,OAAO,EAIX,OAAO,GAGIL,EAAe,WAC1B,IACE,IAAIU,EAAaP,aAAaC,QAAQ,IAKtC,OAJAD,aAAaQ,WAAW,IACxBR,aAAaK,QAAQ,GAAIE,GAAc,IACpB,OAAfA,EAAqBP,aAAaQ,WAAW,IAC5CR,aAAaK,QAAQ,GAAIE,IACvB,EACP,MAAOL,GACP,OAAO,GATiB,GCvBtBO,EAA8C,CAAEC,GAAI,QAASC,GAAI,QAASC,GAAI,QAASC,GAAI,SAC3FC,EAAgD,CAAEJ,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMC,GAAI,MAEtFE,EAAiB,KACd,SAASC,EAAUC,GACtBF,EAASE,EAGN,SAASC,IACZ,OAAOJ,EAAmBC,GAG9B,SAASI,IACL,OAAOV,EAAiBS,KAGrB,SAASE,EAAKC,GACjB,IAAMN,EAASG,IACf,OAAIH,GAAUM,GAAOA,EAAIN,GACdM,EAAIN,GAGRM,EAAG,IAAUA,EAAG,GAOpB,SAASC,EAAaC,GACzB,OAAOA,EAAKC,mBAAmBL,M,SF3BvBzB,O,eAAAA,I,qBAAAA,I,uBAAAA,I,4BAAAA,M,KAYZ,IAAM+B,EAA0B,CAC5BC,KAAMhC,EAAKiC,QACXC,SAAU,MAGDC,EAAYC,YAAY,CACjCC,KAAM,OACNN,eACAO,SAAU,CACNC,SAAU,SAACC,EAAOC,GACdD,EAAMR,KAAOS,EAAOC,QACpBC,EAAUH,IAEdI,YAAa,SAACJ,EAAOC,GACjBnB,EAAUmB,EAAOC,SACjBF,EAAMN,SAAWO,EAAOC,QACxBC,EAAUH,IAEdK,WAAY,SAACL,GACTlB,EAAUS,EAAaG,WAG3BY,YAAa,SAACN,EAAOC,GAAsC,IAAD,IACtDD,EAAMR,KAAN,oBAAaS,EAAOC,eAApB,aAAa,EAAgBV,YAA7B,QAAqChC,EAAKiC,Y,EAKlBE,EAAUY,QAAtCD,E,EAAAA,YAAaD,E,EAAAA,W,EACoBV,EAAUY,QAApCR,E,EAAAA,SAAUK,E,EAAAA,YAIzB,SAASD,EAAUH,GACf/B,EAHgB,OAGM+B,GAGnB,IGpCKQ,EASAC,EHmCCC,EAAa,SAACV,GAAD,OAAsBA,EAAMW,KAAKnB,MAC9CoB,EAAiB,SAACZ,GAAD,OAAsBA,EAAMW,KAAKjB,UAEhDC,IAAf,Q,gCGjBO,SAASkB,EAAWhB,GACzB,MAAO,CAAEiB,GAAIC,cAAUlB,QAGlB,SAASmB,IACd,MAAO,CAAEF,GAAIC,cAAUE,MAAO,IAGzB,SAASC,EAAYC,GAC1B,MAAO,CACLC,UAAW,EACXC,OAAQ,EACRC,KAAM,GACNH,YAIG,SAASI,EACdC,EACAC,GAEA,OAGF,SACED,EACAV,GAEA,OAAOY,eACLF,EAAKP,OACL,SAACA,GAAD,OAAmCA,EAAME,WAAaL,KATjDa,CAAaH,EAAMC,EAAOX,KAAOI,EAAYO,EAAOX,K,SAnDjDN,O,mBAAAA,I,eAAAA,I,mBAAAA,I,mBAAAA,I,yBAAAA,I,oBAAAA,M,cASAC,O,eAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,oBAAAA,M,KCKZ,IAAMlB,EAAqC,CACzCqC,QAAS,GACTC,MAAO,GACPC,eAAgB,GAChBC,YAAaf,KAGFgB,EAAgBpC,YAAY,CACvCC,KAAM,kBACNN,eACAO,SAAU,CACRO,WAAY,SAACL,GACHT,GAEVe,YAAa,SAACN,EAAOC,GAAiD,IAAD,gBACnED,EAAM4B,QAAN,oBAAgB3B,EAAOC,eAAvB,aAAgB,EAAgB0B,eAAhC,QAA2CrC,EAAaqC,QACxD5B,EAAM6B,MAAN,oBAAc5B,EAAOC,eAArB,aAAc,EAAgB2B,aAA9B,QAAuCtC,EAAasC,MACpD7B,EAAM8B,eAAN,oBACE7B,EAAOC,eADT,aACE,EAAgB4B,sBADlB,QACoCvC,EAAauC,eACjD9B,EAAM+B,YAAN,oBACE9B,EAAOC,eADT,aACE,EAAgB6B,mBADlB,QACiCxC,EAAawC,YAC9CE,EAAgBjC,GAChBkC,EAAsBlC,EAAM+B,cAE9BI,WAAY,SAACnC,EAAOC,GAClBD,EAAM8B,eAAiB7B,EAAOC,QAC9B+B,EAAgBjC,IAElBoC,QAAS,SAACpC,EAAOC,GACfD,EAAM4B,QAAUS,iBACdrC,EAAM4B,SACN,SAACU,GAAD,OAAgCA,EAAKzC,QAEvCG,EAAM4B,QAAUS,iBACdrC,EAAM4B,SACN,SAACU,GAAD,OAAgCA,EAAKxB,MAGrCd,EAAM4B,UACLF,eACC1B,EAAM4B,SACN,SAACH,GAAD,OAA0BA,EAAO5B,OAASI,EAAOC,QAAQL,SAG3DG,EAAM4B,QAAQW,KAAKtC,EAAOC,SAG1BF,EAAM8B,eAAeU,OAAS,IAC7Bd,eACC1B,EAAM8B,gBACN,SAACL,GAAD,OAA0BA,EAAOX,KAAOb,EAAOC,QAAQY,OAGzDd,EAAM8B,eAAeS,KAAKtC,EAAOC,SAEnC+B,EAAgBjC,IAElByC,WAAY,SAACzC,EAAOC,GACdD,EAAM4B,UACR5B,EAAM4B,QAAUc,iBACd1C,EAAM4B,SACN,SAACU,GAAD,OAAiCA,EAAKxB,KAAOb,EAAOC,QAAQY,MAE9Dd,EAAM8B,eAAiBY,iBACrB1C,EAAM8B,gBACN,SAACQ,GAAD,OAAiCA,EAAKxB,KAAOb,EAAOC,QAAQY,MAE9DmB,EAAgBjC,KAGpB2C,UAAW,SAAC3C,GACV4C,kBAAQ5C,EAAM+B,YAAYd,OAAO,SAACA,GAChCA,EAAMK,KAAO,GACbL,EAAMI,OAAS,EACfJ,EAAMG,UAAY,EAClBH,EAAM4B,UAAW,EACjB5B,EAAM6B,QAAS,KAEjB3C,GAAUH,IAEZ+C,cAAe,SAAC/C,GACd4C,kBAAQ5C,EAAM+B,YAAYd,OAAO,SAACA,GAChCA,EAAMK,KAAO,GACbL,EAAMI,OAAS,EACfJ,EAAMG,UAAY,EAClBH,EAAM4B,UAAW,EACjB5B,EAAM6B,QAAS,KAEjB9C,EAAM6B,MAAQ,GACd1B,GAAUH,IAEZgD,SAAU,SAAChD,GAETG,GADQZ,IAGV0D,YAAa,SAACjD,EAAOC,GAA0C,IAAD,EACtDiD,EAAQxB,eAAI,UAChB1B,EAAM+B,mBADU,aAChB,EAAmBd,OACnB,SAACA,GAAD,aACEA,EAAME,YAAN,UAAmBlB,EAAOC,eAA1B,aAAmB,EAAgBiB,aAEvC,GAAI+B,EAAO,CACT,IAAMC,EAAaC,kBACjBpD,EAAM+B,YAAYd,MAClBiC,GAEFN,kBAAQO,GAAY,SAAClC,GACfhB,EAAOC,QAAQ2C,WACjB5B,EAAM4B,UAAW,GAEf5C,EAAOC,QAAQ4C,SACjB7B,EAAM6B,QAAS,MAGnB9C,EAAM+B,YAAYd,MAAlB,sBAA8BkC,GAA9B,gBAA+ClD,EAAOC,WACtDgC,EAAsBlC,EAAM+B,aAC5B5B,GAAUH,KAGdqD,SAAU,SAACrD,GACTkC,EAAsBlC,EAAM+B,aAE1BuB,eACEtD,EAAM+B,YAAYd,OAClB,SAACA,GAAD,OAAoD,IAAjBA,EAAMI,YAG3CrB,EAAM6B,MAAN,sBAAkB7B,EAAM6B,OAAxB,CAA+B7B,EAAM+B,cACrC/B,EAAM+B,YAAcf,IACpBiB,EAAgBjC,GAChBG,GAAUH,QAMlB,SAASiC,EAAgBjC,GACvBA,EAAM8B,eAAiBY,iBACrB1C,EAAM8B,gBACN,SAACQ,GACC,QAASZ,eACP1B,EAAM4B,SACN,SAACH,GAAD,OAA0BA,EAAOX,KAAOwB,EAAKxB,SAInDd,EAAM8B,eAAiBO,iBACrBrC,EAAM8B,gBACN,SAACQ,GAAD,OAAgCA,EAAKxB,MAEvCd,EAAM+B,YAAYd,MAAQsC,cACxBvD,EAAM8B,gBACN,SAACQ,EAAoBkB,GAKnB,OAJc9B,eACZ1B,EAAM+B,YAAYd,OAClB,SAACA,GAAD,OAAmCA,EAAME,WAAamB,EAAKxB,OAE7CI,EAAYoB,EAAKxB,OAGrCX,GAAUH,GAGZ,SAASkC,EAAsBV,GAC7B,IAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMP,UAASO,EAAKP,MAAMuB,QAAU,GAAzC,CAIA,IAAIiB,GAAc,EAClBb,kBAAQpB,EAAKP,OAAO,SAACA,GACnBA,EAAMI,OAASqC,EAAczC,GAC7BwC,EAAcA,KAAiBxC,EAAM4B,YAGlCY,GAILb,kBAAQpB,EAAKP,OAAO,SAAC0C,GACnBA,EAAiBvC,UAAYwC,gBAC3BpC,EAAKP,OACL,SAACA,GACC,GAAIA,EAAME,WAAawC,EAAiBxC,SACtC,OAAO,EAGT,IAAI0C,EAAa5C,EAAM4B,SAAW,EAAIc,EAAiBtC,OAKvD,OAJKsC,EAAiBd,WACpBgB,GAAc5C,EAAMI,QAGfJ,EAAM6B,QAAUa,EAAiBb,OACvB,EAAbe,EACAA,SAQL,SAASH,EAAczC,GAA+B,IAAD,EACtDI,EAASJ,EAAM4B,SAHc,GAGmB,EACpDxB,GAAUuC,gBAAM3C,EAAMK,MAAM,SAACwC,GAC3B,GAAIA,EAAIC,WAAavD,EAAiBwD,OACpC,OAAQF,EAAIG,SAEV,KAAKxD,EAAgByD,KACnB,OAAO,EACT,KAAKzD,EAAgB0D,KACrB,KAAK1D,EAAgB2D,MACnB,OAAO,GACT,KAAK3D,EAAgB4D,KACnB,OAAO,GACT,KAAK5D,EAAgB6D,OACrB,QACE,OAAO,EAKb,GACER,EAAIG,UAAYxD,EAAgByD,OAC/BJ,EAAIC,WAAavD,EAAiB+D,QAChCT,EAAIC,WAAavD,EAAiBgE,MAAQV,EAAIW,SAEjD,OAAO,EAIT,IAAIC,EAAM,EAiBV,OAhBIZ,EAAIG,UAAYxD,EAAgB2D,MAClCM,EAAM,EACGZ,EAAIG,UAAYxD,EAAgB4D,OACzCK,EAAM,IAGNZ,EAAIa,WACJb,EAAIC,WAAavD,EAAiB+D,QAClCT,EAAIC,WAAavD,EAAiBgE,QAElCE,GAAO,GAELZ,EAAIc,SACNF,GAAO,GAGFA,KAGT,IAAIG,EAAc,EAyClB,GAvCEvB,eAAKrC,EAAMK,MAAM,SAACwC,GAChB,QACIA,EAAIW,SACNX,EAAIC,WAAavD,EAAiBgE,OACjCV,EAAIG,UAAYxD,EAAgB2D,OAC/BN,EAAIG,UAAYxD,EAAgB4D,WAKtCQ,GAAe,GAIfvB,eAAKrC,EAAMK,MAAM,SAACwC,GAChB,OACEA,EAAIC,WAAavD,EAAiB+D,SACjCT,EAAIG,UAAYxD,EAAgB2D,OAC/BN,EAAIG,UAAYxD,EAAgB4D,WAKtCQ,GAAe,GAIfvB,eAAKrC,EAAMK,MAAM,SAACwC,GAChB,OACEA,EAAIC,WAAavD,EAAiBwD,SACjCF,EAAIG,UAAYxD,EAAgB2D,OAC/BN,EAAIG,UAAYxD,EAAgB4D,WAKtCQ,GAAe,GAGb5D,EAAM4B,SAAU,CAClB,IAAIiC,GAAwB,EACxBC,EAAgB,EAChBC,EAAgB,EAChBC,EAAmB,EACvBrC,kBAAQ3B,EAAMK,MAAM,SAACwC,GACfA,EAAIC,WAAavD,EAAiB0E,SACpCH,EAAgB,GAEdjB,EAAIC,WAAavD,EAAiB2E,SACpCH,EAAgB,GAEdlB,EAAIC,WAAavD,EAAiB4E,YACpCH,EAAmB,GAGnBnB,EAAIC,WAAavD,EAAiB+D,QAClCT,EAAIC,WAAavD,EAAiBgE,OAElCM,GAAwB,MAIxBC,EAAgBC,EAAgBC,IAAqB,IAErDJ,GADEC,EACa,EAEA,GAKrB,iBAAOO,cAAI,CAAChE,EAASwD,EAAa,aAAlC,QAA2C,E,MAwDT7C,EAAczB,QAA1CF,E,EAAAA,WAAYC,E,EAAAA,Y,EAUhB0B,EAAczB,QARhB4B,E,EAAAA,WACAC,E,EAAAA,QACAK,G,EAAAA,WACAE,G,EAAAA,UACAI,G,EAAAA,cACAC,G,EAAAA,SACAC,G,EAAAA,YACAI,G,EAAAA,SAKF,SAASlD,GAAUH,GACjB/B,EAHkB,UAGI+B,GAGjB,IAQMsF,GAAgB,SAACtF,GAAD,OAC3BA,EAAMuF,gBAAgB3D,SAAW,IACtB4D,GAAc,SAACxF,GAAD,OACzBA,EAAMuF,gBAAgB1D,OAAS,IACpB4D,GAAoB,SAACzF,GAAD,OAC/BA,EAAMuF,gBAAgBxD,aAAef,KAC1B0E,GAAuB,SAAC1F,GAAD,OAClCA,EAAMuF,gBAAgBzD,gBAAkB,IAE3BE,KAAf,QCzaMzC,GAAsC,CACxCoG,QAAS,IAKA3D,GAAgBpC,YAAY,CACrCC,KAAM,mBACNN,gBACAO,SAAU,CACNO,WAAY,SAACL,GACDT,IAEZe,YAAa,SAACN,EAAOC,GAAkD,IAAD,IAClED,EAAM2F,QAAN,oBAAgB1F,EAAOC,eAAvB,aAAgB,EAAgByF,eAAhC,QAA2C,IAE/CC,WAAY,SAAC5F,EAAOC,GAAoC,IAAD,MA+C7C0F,EAAoBtG,EA9CtBwG,GA8CEF,EA9Ce3F,EAAM2F,QA8CDtG,EA9CU,IAAIyG,KAAJ,UAAS7F,EAAOC,QAAQb,YAAxB,QAAgC,IAAIyG,MA+CzEpD,iBACHiD,GACA,SAACI,GAAD,iBACI,IAAID,KAAJ,UAASC,EAAO1G,YAAhB,QAAwB,IAAIyG,MAAQE,YAAc3G,EAAK2G,WACvD,IAAIF,KAAJ,UAASC,EAAO1G,YAAhB,QAAwB,IAAIyG,MAAQG,aAAe5G,EAAK4G,YACxD,IAAIH,KAAJ,UAASC,EAAO1G,YAAhB,QAAwB,IAAIyG,MAAQI,gBAAkB7G,EAAK6G,kBAnD3DlG,EAAM2F,QAAUvC,UAAO,WAAP,GAAQpD,EAAM2F,SAAd,mBAA0BE,KAE1C,IAAMM,EAAS,CACXC,MAAOnG,EAAOC,QAAQkG,MACtB/G,MAAM,UAACY,EAAOC,QAAQb,YAAhB,QAAwB,IAAIyG,MAAQO,YAG9C,IADAR,EAAMtD,KAAK4D,GACJN,EAAMrD,OAAS,GAAG,CACrB,IAAM8D,EAAWC,gBAAMV,GAAO,SAACE,GAAD,OAA6BA,EAAOK,UAAUD,EAC5EN,EAAQzC,kBAAiByC,EAAOS,IAEpC,EAAAtG,EAAM2F,SAAQpD,KAAd,oBAAsBsD,IACtB1F,GAAUH,IAEdwG,cAAe,SAACxG,EAAOC,GACnB,IAAMiD,EAAQxB,eACV1B,EAAM2F,SACN,SAACc,GAAD,OAA8BA,EAAOL,QAAUnG,EAAOC,QAAQkG,OAASK,EAAOpH,OAASY,EAAOC,QAAQb,QAEtG6D,IACAlD,EAAM2F,QAAUvC,kBAAQpD,EAAM2F,QAASzC,IAG3C/C,GAAUH,O,GAKcgC,GAAczB,QAA1CF,G,GAAAA,WAAYC,G,GAAAA,Y,GACyB0B,GAAczB,QAA5CqF,G,GAAAA,WAAYY,G,GAAAA,cAI3B,SAASrG,GAAUH,GACf/B,EAHgB,WAGM+B,GAuCnB,SAAS0G,GAAYf,GAAqB,IAAD,EAC5C,iBAAOgB,cAAY,CAxFC,IAwFW/C,gBAAM+B,GAAS,SAACI,GAAD,OAA6BA,EAAOK,SAAQ,WAA1F,QAAiG,EAG9F,SAASQ,GAAmBjB,EAAoBkB,GAEnD,OADcH,GAAYf,IAI9B,SAAqBkB,GACjB,OAAO,IAAIf,KAAKe,EAAQX,cAAeW,EAAQZ,WAAa,EAAG,GAAGD,UAJlDc,CAAYD,GAAWA,EAAQb,UAAY,GAO/D,SAASe,GAAYF,GACjB,OAAO,IAAIf,KAAKe,EAAQX,cAAeW,EAAQZ,WAAY,GAgCxD,IAAMe,GAAgB,SAAChH,GAAD,OAAsBA,EAAMiH,SAAStB,SAEnD3D,MAAf,Q,SCnHMzC,GAAwC,CAC5C2H,KAAM,CAAEC,MAAO,IACfC,SAkCF,SACEvH,EACAwH,EACA7E,GAEC,IADD8E,IACA,yDACA,MAAO,CAAEzH,OAAMwH,QAAO7E,SAAQ8E,YAxCpBC,CAAe,WAAY,EAAG,GAAG,GAC3CC,UAAW,CAAC,CAAE3H,KAAM,KAAMwH,MAAO,EAAG7E,OAAQ,EAAG8E,UAAU,KAG9CtF,GAAgBpC,YAAY,CACvCC,KAAM,qBACNN,gBACAO,SAAU,CACRO,WAAY,SAACL,GACHT,IAEVe,YAAa,SAACN,EAAOC,Q,GAIW+B,GAAczB,QAA1CF,G,GAAAA,WAAYC,G,GAAAA,Y,aAGhB0B,GAAczB,SA8CHyB,UAAf,Q,4FCxEayF,GAA4BC,cACrC,WACI,OAAOC,aAAe,CAClBC,KAAM,CACFC,OAAQ,UAEZC,WAAY,CACRC,SAAU,GACVC,OAAQ,GACRX,MAAO,GACPY,YAAa,OACbC,WAAY,OACZC,MAAO,SAEXC,YAAa,CACTL,SAAU,GACVC,OAAQ,GACRX,MAAO,GACPY,YAAa,OACbC,WAAY,MACZC,MAAO,SAEXE,SAAU,CACNN,SAAU,GACVC,OAAQ,GACRX,MAAO,GACPY,YAAa,OACbC,WAAY,aC1DfI,GAAc,kBAAMpJ,EAAE,CAAEV,GAAI,MAAOC,GAAI,WACvC8J,GAAe,kBAAMrJ,EAAE,CAAEV,GAAI,SAAUC,GAAI,YAI3C+J,GAAW,kBAAMtJ,EAAE,CAAEV,GAAI,QACzBiK,GAAY,kBAAMvJ,EAAE,CAAEV,GAAI,YAAUC,GAAI,SACxCiK,GAAe,kBAAMxJ,EAAE,CAAEV,GAAI,oBAAkBC,GAAI,gBAGnDkK,GAAW,kBAAMzJ,EAAE,CAAEV,GAAI,OAAQC,GAAI,SACrCmK,GAAY,kBAAM1J,EAAE,CAAEV,GAAI,OAAQC,GAAI,YACtCoK,GAAoB,kBAAM3J,EAAE,CAAEV,GAAI,mBAAiBC,GAAI,oBAOvDqK,GAAe,kBAAM5J,EAAE,CAAEV,GAAI,eAAgBC,GAAI,mBAOjDsK,GAAe,SAAC1H,GAAD,OAAoBnC,EAAE,CAAEV,GAAG,UAAD,OAAY6C,GAAU5C,GAAG,UAAD,OAAY4C,MAoB7E2H,GAAe,kBAAM9J,EAAE,CAAEV,GAAI,SAAUC,GAAI,aAY3CwK,GAAwB,kBAAM/J,EAAE,CAAEV,GAAI,YAAUC,GAAI,SACpDyK,GAAqB,kBAAMhK,EAAE,CAAEV,GAAI,OAAQC,GAAI,UAC/C0K,GAAoB,SAAC/C,GAAD,OAAmBlH,EAAE,CAAEV,GAAG,aAAD,OAAY4H,GAAS3H,GAAG,OAAD,OAAS2H,MAK7EgD,GAAkB,SAAChD,EAAe/G,GAAhB,OAAiCH,EAAE,CAAEV,GAAG,GAAD,OAAKa,EAAL,aAAc+G,M,8BCvCvEiD,GAA4B3B,cACrC,WACI,OAAOC,aAAe,CAClB2B,QAAS,CACLC,QAAS,OACTC,WAAY,WACZ3B,OAAQ,iBCxBjB,SAAS4B,GAAgBC,GAC5B,IAAMC,EAAaC,eAAqDP,IAClEQ,EDT6D,CACnEC,OAAQ,CACJC,KAAM,CAAElC,OAAQ,QAEpBmC,SAAU,CACND,KAAM,CAAElC,OAAQ,QAEpBoC,UAAW,CACPF,KAAM,CACFG,SAAU,IACVC,WAAY,MAGpBC,eAAgB,CACZC,UAAW,CACPH,SAAU,IACVC,WAAY,OCLZG,EAAyDZ,EAAzDY,OAAQC,EAAiDb,EAAjDa,OAAQC,EAAyCd,EAAzCc,SAAUC,EAA+Bf,EAA/Be,WAAY3I,EAAmB4H,EAAnB5H,eAJwB,EAKxB4I,IAAMC,SAAyB,IALP,oBAK/DC,EAL+D,KAK9CC,EAL8C,OAM9BH,IAAMC,SAA8B,MANN,oBAM/DG,EAN+D,KAMjDC,EANiD,KAQtEC,qBAAU,WAGN,IAFA,IAAMC,EAAQ,YAAOnJ,GACjBoJ,EAAID,EAASzI,OACT0I,EAAI,EAAGA,IACXD,EAAS1I,KAAK1B,EAAW,KAE7BgK,EAAmBI,KACpB,CAACnJ,IAEJ,IAQMqJ,EAAgB,WAClBZ,EAAO7H,iBAAOkI,GAAiB,SAACtI,GAAD,OAAkC8I,kBAAQ9I,EAAKzC,WAG5EwL,EAAO,CACT,CAAEC,IAAK,IAAKC,KAAM,KADT,mBAENhI,cACCkH,GACA,SAACnI,GACG,MAAO,CAAEgJ,IAAKhJ,EAAKxB,GAAIyK,KAAMjJ,EAAKzC,KAAM3B,KAAMoE,QAKpDkJ,EAAkB,SAAClJ,GACrB,IAAMmJ,EAAW/I,iBAAO2I,GAAS,SAACK,GAC9B,OAAOA,EAAOJ,MAAQhJ,EAAKxB,KAAOY,eAAKkJ,GAAiB,SAACK,GAAD,OAAqCS,EAAOJ,MAAQL,EAASnK,SAEzH,OAA2B,IAApB2K,EAASjJ,OAAe,GAAKiJ,GAelCE,EAAgBpI,cAAIqH,GAAiB,SAACtI,EAAoBkB,GAArB,OAZpB,SAAClB,EAAoBgJ,GAArB,OACnB,kBAACM,GAAA,EAAD,CACIN,IAAKA,EACLO,aAAW,GACXC,YAAaxJ,EAAKxB,GAClBiL,aAAa,KACbV,QAASG,EAAgBlJ,GACzB0J,UApCUC,EAoCSX,EApCiB,SAACY,EAAmCR,GAC5E,IAAMT,EAAQ,YAAOL,GACjBK,EAASzI,OAASyJ,IAClBhB,EAASgB,IAAuB,OAANP,QAAM,IAANA,OAAA,EAAAA,EAAQxN,OAAQ2C,EAAW,KAEzDgK,EAAmBI,KAgCfpB,OAAQA,EAAOG,WArCN,IAACiC,EAyC6EE,CAAe7J,EAAMkB,MAE9G4I,EAAqB,SAACF,EAAmCR,GAC3DX,EAAe,OAACW,QAAD,IAACA,OAAD,EAACA,EAAQxN,OAEtBmO,EAAsB,WACpBvB,GACAN,EAASM,IAmCjB,OACI,6BACI,kBAACwB,GAAA,EAAD,CACIhC,OAAQA,EACRiC,gBAAc,EACdC,UAAWrB,EACXsB,WFjGsBvN,EAAE,CAAEV,GAAI,mBAAiBC,GAAI,mBEkGnDiO,qBAAsBpE,KACtBqE,sBAhBkB,kBAC1B,6BACI,kBAACC,GAAA,EAAD,CAAe/C,OAAQA,EAAOC,OAAQ+C,QAAS1B,GAC1C3C,QAcDsE,kBAAkB,GAEjBnB,EAxCL,yBAAKoB,UAAWpD,EAAWL,SACvB,kBAACsC,GAAA,EAAD,CACIoB,MFzDT9N,EAAE,CAAEV,GAAI,eAAgBC,GAAI,kBE0DnBoN,aAAW,GACXE,aAAa,KACbD,YAAW,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAchK,GAC3BuK,QAA4B,IAAnBA,EAAQ7I,OAAe,GAAK6I,EACrCW,SAAUI,EACVvC,OAAQA,EAAOO,iBAEnB,kBAAC6C,GAAA,EAAD,CACIC,UAAW,CAAEC,SAAU,UACvBN,QAASR,EACTe,MAAOtE,KACPuE,UAAWvE,KACXwE,SAAUlC,kBAAO,OAACN,QAAD,IAACA,OAAD,EAACA,EAAchK,S,2CC9DvCyM,GAA2B7F,cACpC,WACI,OAAOC,aAAe,CAClBnI,KAAM,CACFgO,SAAU,QAGdC,QAAS,CACL5F,OAAQ,QAEZ6F,SAAU,CACNnE,QAAS,OACT1B,OAAQ,QAEZ8F,gBAAiB,CACb9F,OAAQ,SACR+F,QAAS,Y,cClCWlG,cAChC,WACI,OAAOC,aAAe,CAClB2B,QAAS,CACLC,QAAS,OACTC,WAAY,WACZ3B,OAAQ,iB,kQCKjB,SAASgG,GAAgBC,GAC9B,OAAQA,GACN,KAAKtN,EAAiB+D,OACpB,OLY2BrF,EAAE,CAAEV,GAAI,SAAUC,GAAI,YKXnD,KAAK+B,EAAiBgE,KACpB,OLWyBtF,EAAE,CAAEV,GAAI,QAASC,GAAI,SKVhD,KAAK+B,EAAiB0E,OACpB,OLW2BhG,EAAE,CAAEV,GAAI,SAAUC,GAAI,WKVnD,KAAK+B,EAAiB2E,OACpB,OLU2BjG,EAAE,CAAEV,GAAI,UAAWC,GAAI,YKTpD,KAAK+B,EAAiB4E,UACpB,OLM8BlG,EAAE,CAAEV,GAAI,MAAOC,GAAI,eKLnD,KAAK+B,EAAiBwD,OACpB,OLO2B9E,EAAE,CAAEV,GAAI,WAAYC,GAAI,YKNrD,QACE,OAAOuK,MAIN,SAAS+E,GAAcD,EAAwBtK,GACpD,OAAQsK,GACN,KAAKtN,EAAiB+D,OACpB,OAAOyJ,KACT,KAAKxN,EAAiBgE,KACpB,OAAOyJ,KACT,KAAKzN,EAAiB0E,OACpB,OAAOgJ,KACT,KAAK1N,EAAiB2E,OACpB,OAAOgJ,KACT,KAAK3N,EAAiB4E,UACpB,OAAOgJ,KACT,KAAK5N,EAAiBwD,OACpB,OAAc,IAAVR,EACK6K,KAEK,IAAV7K,EACK8K,KAEK,IAAV9K,EACK+K,KAEK,IAAV/K,EACKgL,KAEFC,KACT,QACE,QAIC,SAASC,GAASC,GACvB,OAAKA,EAIDA,EAAK5K,WAAavD,EAAiBwD,OAOzC,SAA2BC,GACzB,OAAQA,GACN,KAAKxD,EAAgB6D,OACnB,MAAO,CAACyJ,GAAcvN,EAAiBwD,SACzC,KAAKvD,EAAgByD,KACnB,MAAO,CACL6J,GAAcvN,EAAiBwD,OAAQ,GACvC+J,GAAcvN,EAAiBwD,OAAQ,IAE3C,KAAKvD,EAAgB0D,KACnB,MAAO,CACL4J,GAAcvN,EAAiBwD,OAAQ,GACvC+J,GAAcvN,EAAiBwD,OAAQ,GACvC+J,GAAcvN,EAAiBwD,OAAQ,IAE3C,KAAKvD,EAAgB2D,MACnB,MAAO,CACL2J,GAAcvN,EAAiBwD,OAAQ,GACvC+J,GAAcvN,EAAiBwD,OAAQ,GACvC+J,GAAcvN,EAAiBwD,OAAQ,IAE3C,KAAKvD,EAAgB4D,KACnB,MAAO,CACL0J,GAAcvN,EAAiBwD,OAAQ,GACvC+J,GAAcvN,EAAiBwD,OAAQ,GACvC+J,GAAcvN,EAAiBwD,OAAQ,GACvC+J,GAAcvN,EAAiBwD,OAAQ,IAE3C,QACE,MAAO,IAnCF4K,CAAkBD,EAAK1K,SAuClC,SACEF,EACAE,GAEA,IAAM4K,EAAQd,GAAchK,GAC5B,OAAQE,GACN,KAAKxD,EAAgByD,KACnB,MAAO,CAAC2K,EAAOA,GACjB,KAAKpO,EAAgB0D,KACnB,OAUN,SAAuB2J,GACrB,OAAQA,GACN,KAAKtN,EAAiB0E,OACpB,MAAO,CAAC4J,MACV,KAAKtO,EAAiB2E,OACpB,MAAO,CAAC4J,MACV,KAAKvO,EAAiB4E,UACpB,MAAO,CAAC4J,MACV,QACE,MAAO,IAnBAC,CAAclL,GACvB,KAAKtD,EAAgB2D,MACnB,MAAO,CAACyK,EAAOA,EAAOA,GACxB,KAAKpO,EAAgB4D,KACnB,MAAO,CAACwK,EAAOA,EAAOA,EAAOA,GAC/B,QACE,MAAO,IAnDJK,CAAiBP,EAAK5K,SAAU4K,EAAK1K,SAPnC,GA2EJ,SAASkL,GAAerL,GAC7B,OAAQA,GACN,KAAKrD,EAAgB6D,OACnB,OLxG2BpF,EAAE,CAAEV,GAAI,SAAUC,GAAI,WKyGnD,KAAKgC,EAAgByD,KACnB,OL3GyBhF,EAAE,CAAEV,GAAI,WAAYC,GAAI,aK4GnD,KAAKgC,EAAgB0D,KACnB,OLhHyBjF,EAAE,CAAEV,GAAI,SKiHnC,KAAKiC,EAAgB2D,MACnB,OLjH0BlF,EAAE,CAAEV,GAAI,UKkHpC,KAAKiC,EAAgB4D,KACnB,OLlHyBnF,EAAE,CAAEV,GAAI,SKmHnC,QACE,OAAOwK,MCpJN,SAASoG,GAAW1F,GACvB,IAAMG,EFnBmD,CACzDC,OAAQ,CACJC,KAAM,CAAElC,OAAQ,QAEpBwH,YAAa,CACTC,mBAAoB,CAChBC,gBAAiB,WEejBjF,EAA8BZ,EAA9BY,OAAQkF,EAAsB9F,EAAtB8F,QAASC,EAAa/F,EAAb+F,SAHmC,EAI9B/E,IAAMC,SAA0BlK,EAAgB2D,OAJlB,oBAIrDH,EAJqD,KAI5CyL,EAJ4C,OAK5BhF,IAAMC,SAA2BnK,EAAiB0E,QALtB,oBAKrDnB,EALqD,KAK3C4L,EAL2C,OAMhCjF,IAAMC,UAAS,GANiB,oBAMrD/F,EANqD,KAM7CgL,EAN6C,OAO1BlF,IAAMC,UAAS,GAPW,oBAOrDhG,EAPqD,KAO1CkL,EAP0C,OAQ9BnF,IAAMC,UAAS,GARe,oBAQrDlG,EARqD,KAQ5CqL,EAR4C,KAU5D9E,qBAAU,WACN0E,EAAWjP,EAAgB2D,OAC3BuL,EAAYnP,EAAiB0E,QAC7B0K,GAAU,GACVC,GAAa,GACbC,GAAW,KACZ,CAACxF,IAEJ,IAAMa,EAAgB,WAClBqE,EAAQ,CACJzL,WACAE,UACAW,SACAD,YACAF,aA2BFsL,EAAgB,SAACzE,EAAuBgC,GAC1C,MAAO,CACHhC,IAAKA,EAAIjF,WACT2J,SAAUjC,GAAczC,GACxB2E,iBAAkBlC,GAAczC,GAChC4E,UAAW,CAAE7I,MAAO,GAAIW,OAAQ,IAChCmI,SAAUtC,GAAgBvC,GAC1BC,KAAMsC,GAAgBvC,GACtBgC,WACAzD,OAAQA,EAAOwF,cAiBjBe,EAAe,SAAC9E,GAClB,MAAO,CAAEA,MAAKC,KAAM4D,GAAe7D,KA6BjC+E,EAAkBtM,IAAavD,EAAiBwD,OAChDsM,EACFvM,IAAavD,EAAiB0E,QAAUnB,IAAavD,EAAiB2E,QAAUpB,IAAavD,EAAiB4E,UAC5GmL,EAAmBxM,IAAavD,EAAiBgE,KAEvD,OACI,6BACI,kBAAC8H,GAAA,EAAD,CACIhC,OAAQA,EACRiC,gBAAc,EACdC,UAAWiD,EACXhD,WNrGoBvN,EAAE,CAAEV,GAAI,QAASC,GAAI,iBMsGzCiO,qBAAsBpE,KACtBqE,sBArBkB,kBAC1B,6BACI,kBAACC,GAAA,EAAD,CAAe/C,OAAQA,EAAOC,OAAQ+C,QAAS1B,GAC1C3C,QAmBDsE,kBAAkB,GAElB,kBAAC0D,GAAA,EAAD,CAAOC,OAAQ,CAAEC,YAAa,KAC1B,kBAACC,GAAA,EAAD,CACI3D,MN3GiB9N,EAAE,CAAEV,GAAI,sBAAiBC,GAAI,oBM4G9CqN,YAAa/H,EAASsC,WACtB2F,SA3FK,SAAC4E,EAAsDlF,GAAiC,IAAD,EACtG3H,EAAW8M,SAAQ,iBAACnF,QAAD,IAACA,OAAD,EAACA,EAAQJ,WAAT,QAAgB9K,EAAiB0E,OAAOmB,YAC7DtC,IAAavD,EAAiBwD,OAC1BC,IAAYxD,EAAgB2D,OAC5BsL,EAAWjP,EAAgB6D,QAExBL,IAAYxD,EAAgB6D,QACnCoL,EAAWjP,EAAgB2D,OAE/BuL,EAAY5L,IAmFIsH,QAhEG,WAEnB,IAAMyF,EAAS7M,IAAYxD,EAAgB0D,KAC3C,MAAO,CACH4L,EAAcvP,EAAiB+D,OAAQuM,GACvCf,EAAcvP,EAAiBgE,KAAMsM,GACrCf,EAAcvP,EAAiB4E,WAC/B2K,EAAcvP,EAAiB2E,QAC/B4K,EAAcvP,EAAiB0E,QAC/B6K,EAAcvP,EAAiBwD,OAAQ8M,IAuDlBC,KAEb,kBAACnF,GAAA,EAAD,CACIoB,MNhHgB9N,EAAE,CAAEV,GAAI,yBAAoBC,GAAI,wBMiHhDoN,aAAW,GACXE,aAAa,KACbD,YAAa7H,EACboH,QAtDE,WAClB,IAAMA,EAAU,GAahB,OAZItH,IAAavD,EAAiB0E,QAAUnB,IAAavD,EAAiB2E,QAAUpB,IAAavD,EAAiB4E,WAC9GiG,EAAQ9I,KAAK6N,EAAa3P,EAAgB0D,OAG9CkH,EAAQ9I,KAAK6N,EAAa3P,EAAgB2D,QAC1CiH,EAAQ9I,KAAK6N,EAAa3P,EAAgB4D,OAC1CgH,EAAQ9I,KAAK6N,EAAa3P,EAAgByD,OAEtCH,IAAavD,EAAiBwD,QAC9BqH,EAAQ9I,KAAK6N,EAAa3P,EAAgB6D,SAGvC+G,EAwCkB2F,GACThF,SAzFI,SAACE,EAAmCR,GAA8B,IAAD,EACrFgE,EAAU,QAAE,EAAF,OAAEhE,QAAF,IAAEA,OAAF,EAAEA,EAAQJ,WAAV,QAAiB7K,EAAgB2D,UA0F9BiM,GACG,kBAACY,GAAA,EAAD,CACIjE,MNxHK9N,EAAE,CAAEV,GAAI,6BAAqBC,GAAI,oBMyHtCyS,QAAStM,EACTuM,aAAW,EACXC,OAAQzI,KACR0I,QAASzI,KACToD,SAtHD,SAACE,EAAsCgF,GAC1DtB,IAAYsB,MAwHCZ,GACG,kBAACW,GAAA,EAAD,CACIjE,MNjIQ9N,EAAE,CAAEV,GAAI,0BAA2BC,GAAI,uBMkI/CyS,QAASvM,EACTwM,aAAW,EACXC,OAAQzI,KACR0I,QAASzI,KACToD,SA7HE,SAACE,EAAsCgF,GAC7DrB,IAAeqB,MA+HFX,GACG,kBAACU,GAAA,EAAD,CACIjE,MN1IM9N,EAAE,CAAEV,GAAI,oBAAqBC,GAAI,yBM2IvCyS,QAASzM,EACT0M,aAAW,EACXC,OAAQzI,KACR0I,QAASzI,KACToD,SApIA,SAACE,EAAsCgF,GAC3DpB,IAAaoB,SCjCd,SAASI,GAAe5H,GAA0C,IAAD,EAC9DC,EAAaC,eAAoD2D,IACjE1D,EJnB2D,CACjE0H,WAAY,CACRxH,KAAM,CACF6D,QAAS,QAGjB4D,UAAW,CACPzH,KAAM,CAAE6D,QAAS,eAErB6D,WAAY,CACR1H,KAAM,CACF2H,UAAW,OACXxJ,WAAY,SAGpB4B,OAAQ,CACJC,KAAM,CACF2H,UAAW,GACXC,MAAO,QACP1J,YAAa,MIEb3F,EAAyBoH,EAAzBpH,KAAMsP,EAAmBlI,EAAnBkI,eAER7P,EAAc8P,YAAYpM,IANoC,EAOlCiF,IAAMC,cAAoCmH,GAPR,oBAO7DC,EAP6D,KAOlDC,EAPkD,OAQxBtH,IAAMC,UAAS,GARS,oBAQ7DsH,EAR6D,KAQ7CC,EAR6C,KAUpElH,qBAAU,WACF1I,GAAQP,GACRiQ,EAAazQ,EAASQ,EAAaO,MAExC,CAACA,EAAMP,IAEV,IAAMoQ,EAAejR,EAAY,IAc3BkR,EAAWC,cA+BXC,EAAmB,WACrBJ,GAAkB,IAKhBK,EAAgC,CAClC,CACIjH,IAAK,OACLzL,KPtFoBX,EAAE,CAAEV,GAAI,UAAWC,GAAI,SOuF3CyO,UAAW,CACPC,SAAU,QAEdN,QA3Ca,WACbkF,GACAK,EAASnP,GAAY8O,IAEzBH,MAyCA,CACItG,IAAK,QACLzL,KAAM4I,KACNyE,UAAW,CACPC,SAAU,cAEdN,QAASyF,IAsCjB,OACI,yBAAKvF,UAAWpD,EAAWnK,MACvB,kBAACgT,GAAA,EAAD,CAAYD,MAAOA,EAAO1I,OAAQA,EAAO0H,aACzC,yBAAKxE,UAAWpD,EAAW8D,SACvB,4BAAKnL,EAAKzC,MACV,2BAAIkJ,GAAY,iBAACgJ,QAAD,IAACA,OAAD,EAACA,EAAW1Q,cAAZ,QAAsB,IACtC,kBAACmP,GAAA,EAAD,CAAOC,OAAQ,CAAEC,YAAa,KAC1B,kBAACO,GAAA,EAAD,CACIjE,MP1Ie9N,EAAE,CAAEV,GAAI,YAAaC,GAAI,iBO2IxCyS,QAAO,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAWlP,SACpBsO,aAAW,EACXC,OAAQzI,KACR0I,QAASzI,KACToD,SArEG,SAACE,EAAsCgF,GAAvC,OA/CL,SAACrO,GACf,IAAM4P,EAAS,eACRN,EADQ,GAERJ,EAFQ,CAGXlP,aAEJ4P,EAAUpR,OAASqC,EAAc+O,GACjCT,EAAaS,GAwCmEC,CAAUxB,MAuE9E,kBAACD,GAAA,EAAD,CACIjE,MPjJa9N,EAAE,CAAEV,GAAI,gBAAcC,GAAI,kBOkJvCyS,QAAO,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAWjP,OACpBqO,aAAW,EACXC,OAAQzI,KACR0I,QAASzI,KACToD,SA5EC,SAACE,EAAsCgF,GAAvC,OAvCJpO,EAuCyEoO,OAtCtFc,EAAa,eAAKG,EAAN,GAAuBJ,EAAvB,CAAkCjP,YADlC,IAACA,MAsHL,kBAAC6P,GAAA,EAAD,CAAMJ,MAAK,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAWzQ,KAAMsR,aAjDrB,SAACjE,GAClB,OAAKA,EAKD,yBAAK5B,UAAWpD,EAAW+D,UAflB,SAACiB,GACd,OAAOpL,cACHmL,GAASC,IACT,SAACqB,EAAUxM,GACP,OAAO,kBAACqP,GAAA,EAAD,CAAOvH,IAAK9H,EAAOsP,IAAK9C,EAAU+C,IAAKlF,GAAgBc,EAAK5K,UAAWiE,OAAQ,QAYrFgL,CAASrE,GACV,yBAAK5B,UAAWpD,EAAWgE,iBACvB,6BAAME,GAAe,OAACc,QAAD,IAACA,OAAD,EAACA,EAAM5K,WAC5B,6BAAMoL,GAAc,OAACR,QAAD,IAACA,OAAD,EAACA,EAAM1K,WAE/B,kBAACgJ,GAAA,EAAD,CACIC,UAAW,CAAEC,SAAU,UACvBC,MAAOtE,KACPuE,UAAWvE,KACX+D,QAAS,YA9DA,SAAC/I,GACtB,GAAIiO,EAAW,CACX,IAAMU,EAAS,eACRN,EADQ,GAERJ,EAFQ,CAGXzQ,KAAM8B,kBAAQ2O,EAAUzQ,KAAMwC,KAElC2O,EAAUpR,OAASqC,EAAc+O,GACjCT,EAAaS,IAuDDQ,CAAiBtE,IAErB9E,OAAQA,EAAO4H,cAjBhB,QAgDH,kBAAC7E,GAAA,EAAD,CAAe/C,OAAQA,EAAOC,OAAQ+C,QAASyF,GAC1C7J,OAGT,kBAAC2G,GAAD,CAAY9E,OAAQ2H,EAAgBzC,QAhHpB,SAAC1L,GACrB,GAAIiO,EAAW,CACX,IAAMU,EAAS,eACRN,EADQ,GAERJ,EAFQ,CAGXzQ,KAAK,GAAD,mBAAOyQ,EAAUzQ,MAAQ,IAAzB,CAA8BwC,MAEtC2O,EAAUpR,OAASqC,EAAc+O,GACjCT,EAAaS,GAEjBP,GAAkB,IAsGgDzC,SAzF7C,kBAAMyC,GAAkB,O,0CCtE9C,SAASgB,GAAaxJ,GAAwC,IACzDY,EAAwCZ,EAAxCY,OAAQ6I,EAAgCzJ,EAAhCyJ,MAAO1D,EAAyB/F,EAAzB+F,SAAUhF,EAAef,EAAfe,WAD+B,EAE9BC,IAAMC,WAFwB,oBAEzDyI,EAFyD,KAE9CC,EAF8C,OAGlC3I,IAAMC,SAA4B,IAHA,oBAGzDU,EAHyD,KAGhDiI,EAHgD,KAK1DlB,EAAWC,cACjBrH,qBAAU,WACNqI,OAAavB,KACd,CAACxH,IAEJ,IAAMiJ,EAAkB,SAACjR,GACrB,MAAO,CAAEgJ,IAAKhJ,EAAKxB,GAAIyK,KAAMjJ,EAAKzC,KAAM3B,KAAMoE,IAGlD0I,qBAAU,WACNsI,EAAW/P,cAAIkH,EAAY8I,MAC5B,CAAC9I,IAsBJ,OACI,kBAAC+I,GAAA,EAAD,CACIC,QAASnJ,EACTkC,UAAWiD,EACXiE,mBAAoB,CAChBC,KAAMC,KAAWC,OACjBzG,MAAO1E,KACPgE,qBAAsBnE,MAE1BuL,WAAY,CACRC,YAAY,IAIhB,kBAACnI,GAAA,EAAD,CACIyB,UAAW3E,KACX4C,IAAI,OACJQ,YAAW,OAAEsH,QAAF,IAAEA,OAAF,EAAEA,EAAWtS,GACxBkT,eAAe,EACfjI,aAAa,KACbC,SAlCY,SAACE,EAAmCR,EAA0BlI,EAAgBzE,GAClG,UAAI2M,QAAJ,IAAIA,OAAJ,EAAIA,EAAQxN,KACRmV,EAAa3H,EAAOxN,UACjB,CACH,IAAMqN,GAAiC,OAANG,QAAM,IAANA,OAAA,EAAAA,EAAQH,OAAQxM,EACjD,GAAIwM,EAAM,CACN,IAAM0I,EAAgBpT,EAAW0K,GACjC6G,EAAShQ,EAAQ6R,IACjBZ,EAAaY,GACbX,EAAW,GAAD,mBAAKjI,GAAL,CAAckI,EAAgBU,SA0BxC5I,QAASA,IAEb,kBAAC6I,GAAA,EAAD,KACI,kBAACtH,GAAA,EAAD,CAAeC,QA5CL,WACduG,GACAD,EAAMC,IA0CqC7H,KAAM/C,OAC7C,kBAAC2L,GAAA,EAAD,CAAetH,QAAS4C,EAAUlE,KAAMhD,SCzEjD,IAcM6L,GAAiB1M,cAC1B,WACI,OAAOC,aAAe,CAClBnI,KAAM,CACFgO,SAAU,QAEd+D,WAAY,CACRvJ,OAAQ,QAEZyF,QAAS,CACL5F,OAAQ,eChBjB,SAASrK,GAAT,GAAyF,IAAzE6W,EAAwE,EAAxEA,gBAAiBC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,SAChD7K,EAAaC,eAA0CwK,IACvDvK,EDVuC,CAC7C0H,WAAY,CACRxH,KAAM,CACF6D,QAAS,SCSXwE,EAAWC,cAJ0E,EAKjE3H,IAAMC,SAAiC,IAL0B,oBAKpF4H,EALoF,KAK7EkC,EAL6E,KAuB3F,OAjBAzJ,qBAAU,WACNyJ,EAAS,CACL,CACInJ,IAAK,OAEL+B,UVlBgBnO,EAAE,CAAEV,GAAI,OAAQC,GAAI,SUmBpCyO,UAAW,CACPC,SAAU,QAEdN,QAAS,WACLuF,EAASrS,EAASuU,EAAWI,EAASC,SAAWD,EAASE,UAT9D,mBAYDP,OAER,CAACA,EAAiBjC,EAAUkC,IAG3B,yBAAKvH,UAAWpD,EAAWnK,MACvB,yBAAKuN,UAAWpD,EAAW4H,YACvB,kBAACiB,GAAA,EAAD,CAAYD,MAAOA,EAAO1I,OAAQA,EAAO0H,cAE7C,yBAAKxE,UAAWpD,EAAW8D,SACtB,4BAAK8G,GACLC,ICMV,SAASK,KACZ,IAAMlL,EAAaC,eAAqDnC,IAClEoC,EZ5C6D,CACnE2H,UAAW,CACPzH,KAAM,CAAE6D,QAAS,eAErBF,SAAU,CACN3D,KAAM,CACF+K,SAAU,OACVzN,MAAO,OACPuG,QAAS,sBACT/F,OAAQ,UAEZkN,cAAe,CACXC,eAAgB,eAGxBC,aAAc,CACVlL,KAAM,CACF2H,UAAW,GACXC,MAAO,QACP1J,YAAa,MYuBsB,EAIHyC,IAAMC,SAAS,GAJZ,oBAIpCuK,EAJoC,KAItBC,EAJsB,OAKGzK,IAAMC,UAAS,GALlB,oBAKpCyK,EALoC,KAKnBC,EALmB,OAMS3K,IAAMC,UAAS,GANxB,oBAMpC2K,EANoC,KAMhBC,EANgB,OAOD7K,IAAMC,cAAmCmH,GAPxC,oBAOpC0D,EAPoC,KAOrBC,EAPqB,OAQH/K,IAAMC,SAA4B,IAR/B,oBAQpC+K,EARoC,KAQtBC,EARsB,KAUrClL,EAAaoH,YAAYvM,IACzBxD,EAAiB+P,YAAYnM,IAC7B9D,EAAUiQ,YAAYnM,IACtBlE,EAAOqQ,YAAYpM,IACnB5D,EAAQgQ,YAAYrM,IAEpB4M,EAAWC,cACjBrH,qBAAU,WACN,IAAM4K,EfuSP,SACL/T,EACAD,GAEA,IAAMiU,EAAgBxT,iBACpBT,GACA,SAACU,GAAD,OAAgCA,EAAKxB,MAGjCgV,EAAcpT,iBAAOb,GAAO,SAACL,GACjC,IAAMuU,EAAe1T,iBACnBb,EAAKP,OACL,SAACA,GAAD,OAAkCA,EAAME,YAE1C,OAAI0U,EAAcrT,SAAWuT,EAAavT,SAGlCc,eACNuS,GACA,SAACpU,GAAD,OACGC,eACCqU,GACA,SAAC9U,GAAD,OAA0BA,EAAME,WAAaM,EAAOX,YAK5D,OAA2B,IAAvBgV,EAAYtT,OACP,GAGFe,cACLsS,GACA,SAACvT,GACC,MAAO,CACLnB,SAAUmB,EAAKxB,GACfG,MAAO2C,gBAAMkS,GAAa,SAACtU,GAAgC,IAAD,EAClDwU,EAAatU,eACjBF,EAAKP,OACL,SAACA,GAAD,OAA0BA,EAAME,WAAamB,EAAKxB,MAEpD,wBAAOkV,QAAP,IAAOA,OAAP,EAAOA,EAAY5U,iBAAnB,QAAgC,SehVrB6U,CAAQpU,EAAOC,GAC5B6T,EAAgBC,GAChBT,EAAgBD,EAAe,KAEhC,CAACrT,EAAOC,IAEX,IAkBMoU,EAAmB,kBAAMb,GAAmB,IAmB5Cc,EAAa,SAACxH,GAAD,OAAyB,WACxC8G,EAAiB9G,KAGf4D,EAAgC,CAClC,CACIjH,IAAK,SACL4B,UAAW,CACPC,SAAU,UAEdE,UAAWxE,KACXuN,aAAc,CACV7D,MAAO,CACH,CACIjH,IAAK,MACLC,KAAM9C,KACNyE,UAAW,CAAEC,SAAU,UACvBN,QAASqJ,GAEb,CACI5K,IAAK,iBACLC,KAAM1C,KACNqE,UAAW,CAAEC,SAAU,UACvBN,QA3CU,kBAAM0I,GAAsB,QAgDtD,CACIjK,IAAK,OACLC,KXjIyBrM,EAAE,CAAEV,GAAI,WAAYC,GAAI,aWkIjDyO,UAAW,CACPC,SAAU,QAEdN,QAAS,WACLuF,EAAS/O,QAGjB,CACIiI,IAAK,QACL4B,UAAW,CACPC,SAAU,UAEdE,UXrIqBnO,EAAE,CAAEV,GAAI,SAAUC,GAAI,UWsI3C2X,aAAc,CACV7D,MAAO,CACH,CACIjH,IAAK,WACLC,KXzIYrM,EAAE,CAAEV,GAAI,WAAYC,GAAI,eW0IpCyO,UAAW,CAAEC,SAAU,cACvBN,QAnED,WACfuF,EAASpP,MACTmS,EAAgBD,EAAe,IAkEf5H,UAAU,GAEd,CACIhC,IAAK,aACLC,KX/IiBrM,EAAE,CAAEV,GAAI,kBAAmBC,GAAI,qBWgJhDyO,UAAW,CAAEC,SAAU,0BACvBN,QAlEI,WACpBuF,EAASrP,MACToS,EAAgBD,EAAe,KAkEnB,CACI5J,IAAK,YACLC,KXpJarM,EAAE,CAAEV,GAAI,YAAaC,GAAI,uBWqJtCyO,UAAW,CAAEC,SAAU,0BACvBN,QA5EA,WAChBuF,EAASzP,MACTwS,EAAgBD,EAAe,SAuGnC,OAAIM,EACO,kBAAClE,GAAD,CAAgBhP,KAAMkT,EAAe5D,eAlGd,WAC9B6D,OAAiB3D,GACjBqD,EAAgBD,EAAe,MAoG/B,kBAAC,GAAD,CAAMb,gBAAiB9B,EAAOgC,OX1MHrV,EAAE,CAAEV,GAAI,sBAAuBC,GAAI,wBW2M1D,kBAACyU,GAAD,CAAc5I,OAAQ8K,EAAiBjC,MAlI3B,SAAC1R,GACjB2Q,EAAShQ,EAAQX,IACjB4T,GAAmB,IAgI4C5F,SA9HlD,WACb4F,GAAmB,GACnBE,GAAsB,IA4H6D9K,WAAYA,IAC3F,kBAAChB,GAAD,CACIa,OAAQgL,EACR/K,OA1IkB,SAACK,GAC3BwH,EAASjQ,EAAWyI,IACpB2K,GAAsB,IAyId/K,SA7HW,SAAC/I,GACpB2Q,EAAS3P,GAAWhB,KA6HZgJ,WAAYA,EACZ3I,eAAgBA,IAEpB,kBAAC6Q,GAAA,EAAD,CAAM5F,UAAWpD,EAAW/B,KAAMyO,QAASnB,EAAc3C,MAAO3Q,EAASgR,aApC5D,SAACjE,GAClB,IAAKA,EACD,OAAO,KAGX,IXtJsBtN,EAAgBiV,EWsJhCC,EAAehV,EAASC,EAAMmN,GAC9B6H,EAASD,EAAa1T,SACxB,kBAAC4T,GAAA,EAAD,CAAUtJ,SAAS,aAAaJ,UAAWwJ,EAAazT,OAAS6G,EAAWvB,YAAcuB,EAAW7B,aACrG,KACE4O,EAAOH,EAAazT,OAAS,kBAAC2T,GAAA,EAAD,CAAUtJ,SAAS,YAAYJ,UAAWpD,EAAWtB,WAAe,KAEjGsO,EAAsBjV,eAAKgU,GAAc,SAACE,GAAD,OAAUA,EAAKzU,WAAawN,EAAK7N,MAC1E8V,EAAYD,GX7JItV,EW6JgCkV,EAAanV,UX7J7BkV,EW6JwCK,EAAoB1V,MX5JtG/B,EAAE,CACEV,GAAG,iBAAD,OAAmB6C,EAAnB,kBAA8BiV,EAA9B,KACF7X,GAAG,gBAAD,OAAkB4C,EAAlB,kBAA6BiV,EAA7B,QAJe,SAACjV,GAAD,OAAoBnC,EAAE,CAAEV,GAAG,iBAAD,OAAmB6C,GAAU5C,GAAG,gBAAD,OAAkB4C,KW8JewV,CAAUN,EAAanV,WAClI,OACI,kBAAC0V,GAAA,EAAD,CAAgBjN,OAAQA,EAAO6D,SAAUb,QAASsJ,EAAWxH,IACzD,kBAACoI,GAAA,EAAD,CAASxL,KAAI,OAAEoD,QAAF,IAAEA,OAAF,EAAEA,EAAM9O,KAAMmX,cAAejO,GAAawN,EAAalV,QAAS4V,aAAcL,EAAWM,KAAMC,KAAYC,SACvHV,EACAF,OAoBG,OAAP5U,QAAO,IAAPA,OAAA,EAAAA,EAASY,QAAS,GACf,kBAACoK,GAAA,EAAD,CAAe/C,OAAQA,EAAOoL,aAAcpI,QAASqJ,GAChDrN,OCnNd,IAsCMwO,GAA+B3P,cACxC,WACI,OAAOC,aAAe,CAClBnI,KAAM,CACFgO,SAAU,OACV3F,OAAQ,UAEZD,KAAM,CACFC,OAAQ,UAEZ0M,OAAQ,CACJrM,WAAY,OACZD,YAAa,QAEjBH,WAAY,CACRC,SAAU,GACVC,OAAQ,GACRX,MAAO,GACPY,YAAa,OACbC,WAAY,OACZC,MAAO,SAEXC,YAAa,CACTL,SAAU,GACVC,OAAQ,GACRX,MAAO,GACPY,YAAa,OACbC,WAAY,MACZC,MAAO,SAEXE,SAAU,CACNN,SAAU,GACVC,OAAQ,GACRX,MAAO,GACPY,YAAa,OACbC,WAAY,aCjErB,SAASoP,KACO1N,eAAwDyN,IAA3E,IAD8C,EAIN3M,IAAMC,SAAS,GAJT,8BAW9C,OACI,kBAAC,GAAD,CAAM0J,gBAF4B,GAEJE,OAAQ,IAClC,+B,mDCcCgD,GAA6B7P,cACtC,WACI,OAAOC,aAAe,CAClBC,KAAM,CACFC,OAAQ,UAEZ6F,SAAU,CACNnE,QAAS,QAEbiO,SAAU,CACN3P,OAAQ,YCJjB,SAAS4P,KACZ,IAAM9N,EAAaC,eAAsD2N,IACnE1N,ED3C+D,CACrE2H,UAAW,CACPzH,KAAM,CAAE6D,QAAS,eAErBF,SAAU,CACN3D,KAAM,CACF+K,SAAU,OACVzN,MAAO,OACPuG,QAAS,sBACT/F,OAAQ,UAEZkN,cAAe,CACXC,eAAgB,eAGxBC,aAAc,CACVlL,KAAM,CACF2H,UAAW,GACXC,MAAO,QACP1J,YAAa,KAGrBwJ,WAAY,CACR1H,KAAM,CACF7B,WAAY,UCiBwB,EAIJwC,IAAMC,SAAS,GAJX,oBAIrCuK,EAJqC,KAIvBC,EAJuB,OAKlBzK,IAAMC,SAAS,GALG,oBAKrC+M,EALqC,KAK9BC,EAL8B,OAMdjN,IAAMC,SAAS,GAND,oBAMrCiN,EANqC,KAM5BC,EAN4B,OAOdnN,IAAMC,SAAS,GAPD,oBAOrCmN,EAPqC,KAO5BC,EAP4B,OAQArN,IAAMC,SAAS,GARf,oBAQrCqN,EARqC,KAQrBC,EARqB,OASdvN,IAAMC,UAAS,GATD,oBASrCuN,EATqC,KAS5BC,EAT4B,OAUNzN,IAAMC,SAAS,IAAI7E,MAVb,oBAUrCsS,EAVqC,KAUxBC,EAVwB,OAWZ3N,IAAMC,UAAS,GAXH,oBAWrC2N,EAXqC,KAW3BC,EAX2B,OAYJ7N,IAAMC,UAAS,GAZX,oBAYrC6N,EAZqC,KAYvBC,EAZuB,OAaF/N,IAAMC,SAA6B,IAbjC,oBAarC+N,EAbqC,KAatBC,EAbsB,KAetCC,EAAU/G,YAAY7K,IAEtBoL,EAAWC,cACjBrH,qBAAU,WACN,IlBkCoBrF,EAAoBkB,EkBlClCxH,EAAO,IAAIyG,KACX+S,ElBwBP,SAAmBlT,GAAiD,IAA7BkB,EAA4B,uDAAZ,IAAIf,KAC9D,OAAOpD,iBACHiD,GACA,SAACI,GAAD,eACI,IAAID,KAAJ,UAASC,EAAO1G,YAAhB,QAAwB,IAAIyG,MAAQG,aAAeY,EAAQZ,YAC3D,IAAIH,KAAJ,UAASC,EAAO1G,YAAhB,QAAwB,IAAIyG,MAAQI,gBAAkBW,EAAQX,iBkB7B5C4S,CAAUF,EAASvZ,GACzCsY,ElBqCD,SAAmBhS,GAAqB,IAAD,EAC1C,iBAAO/B,gBAAM+B,GAAS,SAACI,GAAD,OAA6BA,EAAOK,gBAA1D,QAAoE,EkBtCvD2S,CAAUF,IACnBhB,GlB+BoBlS,EkB/BGkT,ElB+BiBhS,EkB/BFxH,ElBgC9BuE,gBAAM+B,GAAS,SAACI,GAAD,OAA6BA,EAAOK,SAClDS,EAAQb,YkBhCjB+R,EAAWrR,GAAYmS,IACvBZ,EAAkBrR,GAAmBiS,EAAexZ,IACpDsZ,EAAiBT,ElB6ElB,SAAoBvS,GACvB,OAAOqT,iBAAOrT,GAAS,SAACc,GAAD,aAAkB,IAAIX,KAAJ,UAASW,EAAOpH,YAAhB,QAAwB,IAAIyG,SAChEmT,UACA1V,KAAI,SAACkD,GAAD,YAAa,CAAEpH,KAAM,IAAIyG,KAAJ,UAASW,EAAOpH,YAAhB,QAAwB,IAAIyG,MAASM,MAAOK,EAAOL,MAAO8S,WAAW,EAAOhb,KAAMuI,MkBhFjF0S,CAAWP,GlBsDvC,SAAwBjT,GAC3B,IAAMyT,EAASJ,iBAAOrT,GAAS,SAACc,GAAD,aAAkB,IAAIX,KAAJ,UAASW,EAAOpH,YAAhB,QAAwB,IAAIyG,SAASmT,UAChFI,EAAYtS,GAAY,IAAIjB,MAC5BwT,EAA6B,GAiBnC,OAhBA1W,kBAAQwW,GAAQ,SAACrT,GAAY,IAAD,EAClBwT,EAAa,IAAIzT,KAAJ,UAASC,EAAO1G,YAAhB,QAAwB,IAAIyG,MACzC0T,EAAUzS,GAAYwS,GAC5B,GAAIC,EAAQnT,aAAegT,EAAUhT,WACjCiT,EAAO/W,KAAK,CAAElD,KAAMka,EAAYnT,MAAOL,EAAOK,MAAO8S,WAAW,EAAOhb,KAAM6H,QAC1E,CACH,IAAI7C,EAAQxB,eAAK4X,GAAQ,SAACG,GAAD,OAASA,EAAIpa,KAAKgH,aAAemT,EAAQnT,cAC7DnD,IACDA,EAAQ,CAAE7D,KAAMma,EAASpT,MAAO,EAAG8S,WAAW,GAC9CI,EAAO/W,KAAKW,IAGhBA,EAAMkD,OAASL,EAAOK,UAIvBkT,EkB1E8CI,CAAed,MACjE,CAACA,EAASV,IAEb,IfT0B9R,EeapBuT,EAAU,SAACvT,GACb,MAAO,CACHkF,IAAK,MAAQlF,EACbmF,KAAMpC,GAAkB/C,EAAMC,YAC9B2Q,cAAe5X,EAAagZ,GAC5BvL,QAAS,SAAC+D,EAAuEjC,GAC7EyD,EAASxM,GAAW,CAAEQ,QAAO/G,KAAM+Y,EAAY/R,iBAWrDkM,EAAgC,CAClC,CACIjH,IAAK,MACLC,KAAMtC,KACNiE,UAAW,CACPC,SAAU,aAEdE,UAAWpE,KACXmN,aAAc,CACV7D,MAAO,CACH,CACIqH,SAAUC,KAAuBC,OACjCxO,IAAK,WACLC,KAAMnM,EAAagZ,IAEvBuB,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,OAIpB,CACIrO,IAAK,OACLC,KAAMrC,KACNgE,UAAW,CACPC,SAAU,aAEdE,UAAWnE,KACX2D,QAAS,WACL4L,GAAgB,MAuCtBlE,GAAS+D,Ef1GmB,SAACjZ,GAAD,OAAkBH,EAAE,CAAEV,GAAG,cAAD,OAAaa,GAAQZ,GAAG,YAAD,OAAcY,Ke0GrE0a,CAAyC3B,ErB7IvD9Y,mBAAmBL,IAAa,CAAE+a,MAAO,UAAWC,IAAK,aMkCrC/a,EAAE,CAAEV,GAAI,aAAWC,GAAI,ae4GvD,OACI,kBAAC,GAAD,CAAM4V,gBAAiB9B,EAAOgC,OAAQA,IAClC,4BfvGkBnO,EeuGAsR,EAAMwC,QAAQ,GfvGIhb,EAAE,CAAEV,GAAG,UAAD,OAAY4H,GAAS3H,GAAG,UAAD,OAAY2H,OewG7E,2BfvGmB,SAACwR,GAAD,OAAqB1Y,EAAE,CAAEV,GAAG,eAAD,OAAiBoZ,GAAWnZ,GAAG,YAAD,OAAcmZ,KeuGtFuC,CAAgBvC,EAAQsC,QAAQ,KACpC,2BfvGmB,SAAC9T,GAAD,OAAmBlH,EAAE,CAAEV,GAAG,YAAD,OAAc4H,GAAS3H,GAAG,YAAD,OAAc2H,KeuG/EgU,CAAgBtC,EAAQoC,QAAQ,KACpC,2BfvG0B,SAACtC,GAAD,OAAqB1Y,EAAE,CAAEV,GAAG,oBAAD,OAAsBoZ,GAAWnZ,GAAG,oBAAD,OAAsBmZ,KeuG1GyC,CAAuBrC,EAAekC,QAAQ,KAClD,4BfhH4Bhb,EAAE,CAAEV,GAAI,WAAYC,GAAI,aeiHpD,kBAACwS,GAAA,EAAD,CAAQjE,MfhHsB9N,EAAE,CAAEV,GAAI,WAAYC,GAAI,aegHfyS,QAASgH,EAAS/G,aAAW,EAACC,OAAQzI,KAAY0I,QAASzI,KAAaoD,SAnGrG,SAACE,EAAsCgF,GACrDiE,EAAgBD,EAAe,GAC/BiD,IAAajH,MAkGT,kBAACyB,GAAA,EAAD,CAAM5F,UAAWpD,EAAW/B,KAAMyO,QAASnB,EAAc3C,MAAOmG,EAAe9F,aAtClE,SAACjE,GAClB,OAAKA,EAIDA,EAAKuK,UAED,yBAAKnM,UAAWpD,EAAW+D,UACvB,uBAAGX,UAAWpD,EAAW6N,UAAWpO,GAAgBuF,EAAKvI,MAAMC,WAA8BsI,EAAKtP,KrBhHtGC,mBAAmBL,IAAa,CAAEqb,KAAM,UAAWN,MAAO,YqBsH9D,yBAAKjN,UAAWpD,EAAW+D,UACvB,uBAAGX,UAAWpD,EAAW6N,UAAWpO,GAAgBuF,EAAKvI,MAAMC,WAAYjH,EAAauP,EAAKtP,QAC7F,kBAAC4N,GAAA,EAAD,CACIC,UAAW,CAAEC,SAAU,UACvBC,MAAOtE,KACPuE,UAAWvE,KACX+D,QAAS,YAzBH,SAAC8B,GACfA,EAAKzQ,MACLkU,EAAS5L,GAAcmI,EAAKzQ,OAwBhBqc,CAAc5L,IAElB9E,OAAQA,EAAO4H,cArBhB,QAqCN+G,GACG,kBAACgC,GAAA,EAAD,CACIC,eAAe,EACf1N,UAAU,wBACV2N,SAAU,EACVC,YAAY,EACZnO,UAAW,WACPiM,GAAgB,IAEpBmC,iBAAe,GAEf,kBAACC,GAAA,EAAD,CAAeC,uBAAuB,2BAA2BC,6BAA2B,GACxF,kBAACC,GAAA,EAAD,CACIC,aAnGH,SAAC5b,GAClBoZ,GAAgB,GAChBF,GAAY,GACZF,EAAehZ,IAiGKmN,UAAW,WACPiM,GAAgB,IAEpByC,sBAAsB,EACtBnc,MAAOqZ,EACP+C,eAAgBC,KAAUC,OAC1BC,QfzHxBpc,EAAoB,CAChBV,GAAI,CACA+c,OAAQ,CAAC,SAAU,UAAW,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACrHC,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,KAAM,CAAC,YAAU,SAAU,UAAW,SAAU,UAAW,SAAU,aACrEC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1CC,UAAW,iBACXC,uBAAwB,iBACxBC,mBAAoB,mBACpBC,mBAAoB,oBACpBC,kBAAmB,gBACnBC,kBAAmB,iBACnBC,uBAAwB,gBACxBC,uBAAwB,iBACxBxP,qBAAsB,OAE1BjO,GAAI,CACA8c,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHC,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,KAAM,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1CC,UAAW,cACXC,uBAAwB,kBACxBC,mBAAoB,iBACpBC,mBAAoB,aACpBC,kBAAmB,gBACnBC,kBAAmB,YACnBC,uBAAwB,sBACxBC,uBAAwB,kBACxBxP,qBAAsB,We6FNyP,oBAAoB,EACpBC,uBAAuB,EACvBC,wBAAwB,EACxBC,0BAA0B,EAC1BC,eAAe,O,cCrMpC,SAASC,KAAe,IAAD,EACc9R,IAAMC,SAAS,GAD7B,oBACnBuK,EADmB,KACLC,EADK,KAEpB/C,EAAWC,cACXE,EAAgC,CAClC,CACIjH,IAAK,WACL4B,UAAW,CACPC,SAAU,SAEdiJ,aAAc,CACV7D,MAAO,CACH,CACIjH,IAAK,KACLC,KAAM,QACNsB,QAAS,SAAC+D,GACNwB,EAAShS,EAAY,OACrB+U,EAAgBD,EAAe,KAGvC,CACI5J,IAAK,KACLC,KAAM,UACNsB,QAAS,SAAC+D,GACNwB,EAAShS,EAAY,OACrB+U,EAAgBD,EAAe,KAGvC,CACI5J,IAAK,KACLC,KAAM,6CACNsB,QAAS,SAAC+D,GACNwB,EAAShS,EAAY,OACrB+U,EAAgBD,EAAe,KAGvC,CACI5J,IAAK,KACLC,KAAM,6BACNsB,QAAS,SAAC+D,GACNwB,EAAShS,EAAY,OACrB+U,EAAgBD,EAAe,SAQvD,OACI,kBAAC,GAAD,CAAMb,gBAAiB9B,EAAOgC,OhBrDPrV,EAAE,CAAEV,GAAI,iBAAkBC,GAAI,kBgBsDjD,kBAACge,GAAA,EAAD,CACI3Q,YAAY,OACZ4Q,OAAQ,CACJ,CACIC,MAAO,CACH,CACI9c,KhB1DEX,EAAE,CAAEV,GAAI,YgB2DVoe,IAAK,GACLtR,IAAK,OACLuR,OAAQ,SACRhQ,QAAS,WACLuF,EAASrS,EAAS2U,EAASjV,YAGnC,CACII,KhBXGX,EAAE,CAAEV,GAAI,aAAWC,GAAI,agBY1Bme,IAAK,GACLtR,IAAK,OACLuR,OAAQ,SACRhQ,QAAS,WACLuF,EAASrS,EAAS2U,EAASC,aAGnC,CACI9U,KhBNKX,EAAE,CAAEV,GAAI,SAAUC,GAAI,UgBO3Bme,IAAK,GACLtR,IAAK,OACLuR,OAAQ,SACRhQ,QAAS,WACLuF,EAASrS,EAAS2U,EAASoI,qBC3ExD,SAASC,KACZ,IAAMvd,EAAOqS,YAAYnR,GAEnB0R,GADWP,YAAYjR,GACZyR,eAQjB,OAPArH,qBAAU,WACNoH,GzBsC4B,SAACA,GAE7BA,EADAzU,EACS2C,EAAY7C,EART,SAUH4C,QyBzCT+R,GrB4Z4B,SAACA,GAEjCA,EADEzU,EACO2C,EAAY7C,EARL,YAUP4C,QqB/ZL+R,GpB0D4B,SAACA,GAE7BA,EADAzU,EACS2C,GAAY7C,EART,aAUH4C,SoB7DT+R,GnBsD4B,SAACA,GAEjCA,EADEzU,EACO2C,GAAY7C,EARL,SAUP4C,WmBzDN,CAAC+R,IAGA,6BACK5S,IAASkV,EAASE,MAAQ,kBAAC4H,GAAD,MAC1Bhd,IAASkV,EAASjV,SAAW,kBAACoV,GAAD,MAC7BrV,IAASkV,EAASC,UAAY,kBAAC8C,GAAD,MAC9BjY,IAASkV,EAASoI,YAAc,kBAACxF,GAAD,O,cCrBhC0F,GAAQC,YAAe,CAClCC,QAAS,CACPvc,KAAMwc,EACN5X,gBAAiB6X,GACjBnW,SAAUoW,GACVC,WAAYC,M,UCJVC,GAAUC,aAAU,CACtBC,QAAS,CACLC,aAAc,UACdC,gBAAiB,UACjBC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnBC,eAAgB,UAChBC,aAAc,UACdC,qBAAsB,UACtBC,kBAAmB,UACnBC,mBAAoB,UACpBC,gBAAiB,UACjBC,iBAAkB,UAClBC,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbC,MAAO,UACPC,MAAO,aA2BAC,GAvBH,WAMR,OALAjU,qBAAU,WACNkU,kBAKA,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUnC,MAAOA,IACb,kBAACoC,GAAA,EAAD,CAAeC,MAAO7B,IAClB,kBAACT,GAAD,UChCAuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBE9I5BC,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,kD,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.c0c989d8.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState, AppThunk } from \"../../app/store\";\r\nimport { saveData, isSupported, loadData } from \"../../utils/StorageUtil\";\r\nimport { setLocale } from \"../../utils/LocalizationUtil\";\r\n\r\nexport enum Page {\r\n    Main,\r\n    MahJong,\r\n    Training,\r\n    Playground,\r\n}\r\n\r\ninterface MainState {\r\n    page: Page;\r\n    language: string;\r\n}\r\n\r\nconst initialState: MainState = {\r\n    page: Page.MahJong,\r\n    language: \"da\",\r\n};\r\n\r\nexport const mainSlice = createSlice({\r\n    name: \"main\",\r\n    initialState,\r\n    reducers: {\r\n        navigate: (state, action: PayloadAction<Page>) => {\r\n            state.page = action.payload;\r\n            saveState(state);\r\n        },\r\n        setLanguage: (state, action: PayloadAction<string>) => {\r\n            setLocale(action.payload);\r\n            state.language = action.payload;\r\n            saveState(state);\r\n        },\r\n        loadFailed: (state) => {\r\n            setLocale(initialState.language);\r\n            state = initialState;\r\n        },\r\n        loadSuccess: (state, action: PayloadAction<MainState>) => {\r\n            state.page = action.payload?.page ?? Page.MahJong;\r\n        },\r\n    },\r\n});\r\n\r\nconst { loadSuccess, loadFailed } = mainSlice.actions;\r\nexport const { navigate, setLanguage } = mainSlice.actions;\r\n\r\nconst storageName = \"Main\";\r\n\r\nfunction saveState(state: MainState) {\r\n    saveData(storageName, state);\r\n}\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n    if (isSupported) {\r\n        dispatch(loadSuccess(loadData(storageName) as MainState));\r\n    } else {\r\n        dispatch(loadFailed());\r\n    }\r\n};\r\n\r\nexport const selectPage = (state: RootState) => state.main.page;\r\nexport const selectLanguage = (state: RootState) => state.main.language;\r\n\r\nexport default mainSlice.reducer;\r\n","export const loadData = (storageName: string) => {\r\n  if (isSupported) {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(storageName) || \"\");\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const saveData = (storageName: string, data: any): boolean => {\r\n  if (isSupported) {\r\n    try {\r\n      localStorage.setItem(storageName, JSON.stringify(data));\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const isSupported = (() => {\r\n  try {\r\n    let itemBackup = localStorage.getItem(\"\");\r\n    localStorage.removeItem(\"\");\r\n    localStorage.setItem(\"\", itemBackup || \"\");\r\n    if (itemBackup === null) localStorage.removeItem(\"\");\r\n    else localStorage.setItem(\"\", itemBackup);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n})();\r\n","// type supportedLanguages = \"da\" | \"en\";\r\n\r\nconst supportedRegions: { [key: string]: string } = { da: \"da-DK\", en: \"en-US\", ru: \"ru-RU\", zh: \"zh-TW\" };\r\nconst supportedLanguages: { [key: string]: string } = { da: \"da\", en: \"en\", ru: \"ru\", zh: \"zh\" };\r\n\r\nlet locale: string = \"da\";\r\nexport function setLocale(value: string) {\r\n    locale = value;\r\n}\r\n\r\nexport function getLocale(): string {\r\n    return supportedLanguages[locale];\r\n}\r\n\r\nfunction getRegion(): string {\r\n    return supportedRegions[getLocale()];\r\n}\r\n\r\nexport function t<T>(loc: { [key: string]: T }) {\r\n    const locale = getLocale();\r\n    if (locale && loc && loc[locale]) {\r\n        return loc[locale];\r\n    }\r\n\r\n    return loc[\"da\"] || loc[\"en\"];\r\n}\r\n\r\nexport function dateToShortString(date: Date) {\r\n    return date.toLocaleDateString(getRegion(), { month: \"numeric\", day: \"numeric\" });\r\n}\r\n\r\nexport function dateToString(date: Date) {\r\n    return date.toLocaleDateString(getRegion());\r\n}\r\n\r\nexport function dateToMonthString(date: Date) {\r\n    return date.toLocaleDateString(getRegion(), { year: \"numeric\", month: \"long\" });\r\n}\r\n","// import uuid from \"uuid\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { find } from \"lodash\";\r\n\r\nexport interface IMahJongUser {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IMahJongScore {\r\n  gameScore: number;\r\n  points: number;\r\n  sets: IMahJongSet[];\r\n  isEast?: boolean;\r\n  isWinner?: boolean;\r\n  playerId: string;\r\n}\r\n\r\nexport enum MahJongTileTypes {\r\n  Dragon,\r\n  Wind,\r\n  Bamboo,\r\n  Circle,\r\n  Character,\r\n  Flower,\r\n}\r\n\r\nexport enum MahJongSetTypes {\r\n  Chow,\r\n  Poong,\r\n  Kong,\r\n  Pair,\r\n  Single,\r\n}\r\n\r\nexport interface IMahJongSet {\r\n  tileType: MahJongTileTypes;\r\n  setType: MahJongSetTypes;\r\n  inHand?: boolean;\r\n  oneOrNine?: boolean;\r\n  ownWind?: boolean;\r\n}\r\n\r\nexport interface IMahJongGame {\r\n  id: string;\r\n  score: IMahJongScore[];\r\n}\r\n\r\nexport function createUser(name: string): IMahJongUser {\r\n  return { id: uuidv4(), name };\r\n}\r\n\r\nexport function createGame(): IMahJongGame {\r\n  return { id: uuidv4(), score: [] };\r\n}\r\n\r\nexport function createScore(playerId: string): IMahJongScore {\r\n  return {\r\n    gameScore: 0,\r\n    points: 0,\r\n    sets: [],\r\n    playerId,\r\n  };\r\n}\r\n\r\nexport function getScore(\r\n  game: IMahJongGame,\r\n  player: IMahJongUser\r\n): IMahJongScore {\r\n  return getScoreById(game, player.id) || createScore(player.id);\r\n}\r\n\r\nfunction getScoreById(\r\n  game: IMahJongGame,\r\n  id?: string\r\n): IMahJongScore | undefined {\r\n  return find(\r\n    game.score,\r\n    (score: IMahJongScore): boolean => score.playerId === id\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport {\r\n  IMahJongUser,\r\n  IMahJongGame,\r\n  createGame,\r\n  createScore,\r\n  IMahJongScore,\r\n  IMahJongSet,\r\n  MahJongTileTypes,\r\n  MahJongSetTypes,\r\n} from \"../Mahjong.model\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport {\r\n  map,\r\n  find,\r\n  uniqBy,\r\n  filter,\r\n  without,\r\n  forEach,\r\n  sumBy,\r\n  some,\r\n  min,\r\n} from \"lodash\";\r\n\r\ninterface MahjongOverviewState {\r\n  players: IMahJongUser[];\r\n  games: IMahJongGame[];\r\n  currentPlayers: IMahJongUser[];\r\n  currentGame: IMahJongGame;\r\n}\r\n\r\nconst initialState: MahjongOverviewState = {\r\n  players: [],\r\n  games: [],\r\n  currentPlayers: [],\r\n  currentGame: createGame(),\r\n};\r\n\r\nexport const overviewSlice = createSlice({\r\n  name: \"mahjongOverview\",\r\n  initialState,\r\n  reducers: {\r\n    loadFailed: (state) => {\r\n      state = initialState;\r\n    },\r\n    loadSuccess: (state, action: PayloadAction<MahjongOverviewState>) => {\r\n      state.players = action.payload?.players ?? initialState.players;\r\n      state.games = action.payload?.games ?? initialState.games;\r\n      state.currentPlayers =\r\n        action.payload?.currentPlayers ?? initialState.currentPlayers;\r\n      state.currentGame =\r\n        action.payload?.currentGame ?? initialState.currentGame;\r\n      updateGameUsers(state);\r\n      updateCalculatedScore(state.currentGame);\r\n    },\r\n    setPlayers: (state, action: PayloadAction<IMahJongUser[]>) => {\r\n      state.currentPlayers = action.payload;\r\n      updateGameUsers(state);\r\n    },\r\n    addUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      state.players = uniqBy(\r\n        state.players,\r\n        (user: IMahJongUser): string => user.name\r\n      );\r\n      state.players = uniqBy(\r\n        state.players,\r\n        (user: IMahJongUser): string => user.id\r\n      );\r\n      if (\r\n        state.players &&\r\n        !find(\r\n          state.players,\r\n          (player: IMahJongUser) => player.name === action.payload.name\r\n        )\r\n      ) {\r\n        state.players.push(action.payload);\r\n      }\r\n      if (\r\n        state.currentPlayers.length < 4 &&\r\n        !find(\r\n          state.currentPlayers,\r\n          (player: IMahJongUser) => player.id === action.payload.id\r\n        )\r\n      ) {\r\n        state.currentPlayers.push(action.payload);\r\n      }\r\n      updateGameUsers(state);\r\n    },\r\n    deleteUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      if (state.players) {\r\n        state.players = filter(\r\n          state.players,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        state.currentPlayers = filter(\r\n          state.currentPlayers,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    clearGame: (state) => {\r\n      forEach(state.currentGame.score, (score: IMahJongScore) => {\r\n        score.sets = [];\r\n        score.points = 0;\r\n        score.gameScore = 0;\r\n        score.isWinner = false;\r\n        score.isEast = false;\r\n      });\r\n      saveState(state);\r\n    },\r\n    clearAllGames: (state) => {\r\n      forEach(state.currentGame.score, (score: IMahJongScore) => {\r\n        score.sets = [];\r\n        score.points = 0;\r\n        score.gameScore = 0;\r\n        score.isWinner = false;\r\n        score.isEast = false;\r\n      });\r\n      state.games = [];\r\n      saveState(state);\r\n    },\r\n    clearAll: (state) => {\r\n      state = initialState;\r\n      saveState(state);\r\n    },\r\n    updateScore: (state, action: PayloadAction<IMahJongScore>) => {\r\n      const found = find(\r\n        state.currentGame?.score,\r\n        (score: IMahJongScore): boolean =>\r\n          score.playerId === action.payload?.playerId\r\n      );\r\n      if (found) {\r\n        const otherScore = without<IMahJongScore>(\r\n          state.currentGame.score,\r\n          found\r\n        );\r\n        forEach(otherScore, (score: IMahJongScore) => {\r\n          if (action.payload.isWinner) {\r\n            score.isWinner = false;\r\n          }\r\n          if (action.payload.isEast) {\r\n            score.isEast = false;\r\n          }\r\n        });\r\n        state.currentGame.score = [...otherScore, { ...action.payload }];\r\n        updateCalculatedScore(state.currentGame);\r\n        saveState(state);\r\n      }\r\n    },\r\n    saveGame: (state) => {\r\n      updateCalculatedScore(state.currentGame);\r\n      if (\r\n        some(\r\n          state.currentGame.score,\r\n          (score: IMahJongScore): boolean => score.points !== 0\r\n        )\r\n      ) {\r\n        state.games = [...state.games, state.currentGame];\r\n        state.currentGame = createGame();\r\n        updateGameUsers(state);\r\n        saveState(state);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nfunction updateGameUsers(state: MahjongOverviewState) {\r\n  state.currentPlayers = filter(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser): boolean => {\r\n      return !!find(\r\n        state.players,\r\n        (player: IMahJongUser) => player.id === user.id\r\n      );\r\n    }\r\n  );\r\n  state.currentPlayers = uniqBy(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser): string => user.id\r\n  );\r\n  state.currentGame.score = map(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser, index: number): IMahJongScore => {\r\n      const found = find(\r\n        state.currentGame.score,\r\n        (score: IMahJongScore): boolean => score.playerId === user.id\r\n      );\r\n      return found || createScore(user.id);\r\n    }\r\n  );\r\n  saveState(state);\r\n}\r\n\r\nfunction updateCalculatedScore(game: IMahJongGame): void {\r\n  if (!game?.score || game.score.length <= 1) {\r\n    return; // Nothing to update\r\n  }\r\n\r\n  let winnerFound = false;\r\n  forEach(game.score, (score: IMahJongScore) => {\r\n    score.points = scoreToPoints(score);\r\n    winnerFound = winnerFound || !!score.isWinner;\r\n  });\r\n\r\n  if (!winnerFound) {\r\n    return;\r\n  }\r\n\r\n  forEach(game.score, (scoreToCalculate: IMahJongScore) => {\r\n    scoreToCalculate.gameScore = sumBy(\r\n      game.score,\r\n      (score: IMahJongScore): number => {\r\n        if (score.playerId === scoreToCalculate.playerId) {\r\n          return 0; // Skip\r\n        }\r\n\r\n        let difference = score.isWinner ? 0 : scoreToCalculate.points;\r\n        if (!scoreToCalculate.isWinner) {\r\n          difference -= score.points;\r\n        }\r\n\r\n        return score.isEast || scoreToCalculate.isEast\r\n          ? difference * 2\r\n          : difference;\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nexport const DefaultWinnerPoints = 10;\r\n\r\nexport function scoreToPoints(score: IMahJongScore): number {\r\n  let points = score.isWinner ? DefaultWinnerPoints : 0;\r\n  points += sumBy(score.sets, (set: IMahJongSet): number => {\r\n    if (set.tileType === MahJongTileTypes.Flower) {\r\n      switch (set.setType) {\r\n        // Each flower tile yields 4 points\r\n        case MahJongSetTypes.Pair:\r\n          return 8;\r\n        case MahJongSetTypes.Chow:\r\n        case MahJongSetTypes.Poong:\r\n          return 12;\r\n        case MahJongSetTypes.Kong:\r\n          return 16;\r\n        case MahJongSetTypes.Single:\r\n        default:\r\n          return 4;\r\n      }\r\n    }\r\n\r\n    // Special end pair rule:\r\n    if (\r\n      set.setType === MahJongSetTypes.Pair &&\r\n      (set.tileType === MahJongTileTypes.Dragon ||\r\n        (set.tileType === MahJongTileTypes.Wind && set.ownWind))\r\n    ) {\r\n      return 2;\r\n    }\r\n\r\n    // All other tile types:\r\n    let sub = 0;\r\n    if (set.setType === MahJongSetTypes.Poong) {\r\n      sub = 2;\r\n    } else if (set.setType === MahJongSetTypes.Kong) {\r\n      sub = 8;\r\n    }\r\n    if (\r\n      set.oneOrNine ||\r\n      set.tileType === MahJongTileTypes.Dragon ||\r\n      set.tileType === MahJongTileTypes.Wind\r\n    ) {\r\n      sub *= 2;\r\n    }\r\n    if (set.inHand) {\r\n      sub *= 2;\r\n    }\r\n\r\n    return sub;\r\n  });\r\n\r\n  let honorFactor = 1;\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        !!set.ownWind &&\r\n        set.tileType === MahJongTileTypes.Wind &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in own wind\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        set.tileType === MahJongTileTypes.Dragon &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in dragons\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (\r\n    some(score.sets, (set: IMahJongSet): boolean => {\r\n      return (\r\n        set.tileType === MahJongTileTypes.Flower &&\r\n        (set.setType === MahJongSetTypes.Poong ||\r\n          set.setType === MahJongSetTypes.Kong)\r\n      );\r\n    })\r\n  ) {\r\n    // Poong or Kong in flowers\r\n    honorFactor *= 2;\r\n  }\r\n\r\n  if (score.isWinner) {\r\n    let containDragonsOrWinds = false;\r\n    let containBamboo = 0;\r\n    let containCircle = 0;\r\n    let containCharacter = 0;\r\n    forEach(score.sets, (set: IMahJongSet) => {\r\n      if (set.tileType === MahJongTileTypes.Bamboo) {\r\n        containBamboo = 1;\r\n      }\r\n      if (set.tileType === MahJongTileTypes.Circle) {\r\n        containCircle = 1;\r\n      }\r\n      if (set.tileType === MahJongTileTypes.Character) {\r\n        containCharacter = 1;\r\n      }\r\n      if (\r\n        set.tileType === MahJongTileTypes.Dragon ||\r\n        set.tileType === MahJongTileTypes.Wind\r\n      ) {\r\n        containDragonsOrWinds = true;\r\n      }\r\n    });\r\n\r\n    if (containBamboo + containCircle + containCharacter === 1) {\r\n      if (containDragonsOrWinds) {\r\n        honorFactor *= 2;\r\n      } else {\r\n        honorFactor *= 8;\r\n      }\r\n    }\r\n  }\r\n\r\n  return min([points * honorFactor, 300]) ?? 0;\r\n}\r\n\r\nexport interface IMahJongHistory {\r\n  playerId: string;\r\n  score: number;\r\n}\r\n\r\nexport function history(\r\n  games: IMahJongGame[],\r\n  players: IMahJongUser[]\r\n): IMahJongHistory[] {\r\n  const uniquePlayers = uniqBy(\r\n    players,\r\n    (user: IMahJongUser): string => user.id\r\n  );\r\n\r\n  const gameHistory = filter(games, (game: IMahJongGame): boolean => {\r\n    const uniqueScores = uniqBy(\r\n      game.score,\r\n      (score: IMahJongScore): string => score.playerId\r\n    );\r\n    if (uniquePlayers.length !== uniqueScores.length) {\r\n      return false;\r\n    }\r\n    return !some(\r\n      uniquePlayers,\r\n      (player: IMahJongUser) =>\r\n        !find(\r\n          uniqueScores,\r\n          (score: IMahJongScore) => score.playerId === player.id\r\n        )\r\n    );\r\n  });\r\n\r\n  if (gameHistory.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  return map(\r\n    uniquePlayers,\r\n    (user: IMahJongUser): IMahJongHistory => {\r\n      return {\r\n        playerId: user.id,\r\n        score: sumBy(gameHistory, (game: IMahJongGame): number => {\r\n          const foundScore = find(\r\n            game.score,\r\n            (score: IMahJongScore) => score.playerId === user.id\r\n          );\r\n          return foundScore?.gameScore ?? 0;\r\n        }),\r\n      };\r\n    }\r\n  );\r\n}\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const {\r\n  setPlayers,\r\n  addUser,\r\n  deleteUser,\r\n  clearGame,\r\n  clearAllGames,\r\n  clearAll,\r\n  updateScore,\r\n  saveGame,\r\n} = overviewSlice.actions;\r\n\r\nconst storageName = \"Mahjong\";\r\n\r\nfunction saveState(state: MahjongOverviewState) {\r\n  saveData(storageName, state);\r\n}\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n  if (isSupported) {\r\n    dispatch(loadSuccess(loadData(storageName) as MahjongOverviewState));\r\n  } else {\r\n    dispatch(loadFailed());\r\n  }\r\n};\r\n\r\nexport const selectPlayers = (state: RootState) =>\r\n  state.mahjongOverview.players || [];\r\nexport const selectGames = (state: RootState) =>\r\n  state.mahjongOverview.games || [];\r\nexport const selectCurrentGame = (state: RootState) =>\r\n  state.mahjongOverview.currentGame || createGame();\r\nexport const selectCurrentPlayers = (state: RootState) =>\r\n  state.mahjongOverview.currentPlayers || [];\r\n\r\nexport default overviewSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport { find, filter, without, sumBy, minBy, max, sortBy, chain, groupBy, forEach } from \"lodash\";\r\n\r\nexport interface IPushup {\r\n    count: number;\r\n    date?: string;\r\n}\r\n\r\nexport interface ITrainingSummary {\r\n    count: number;\r\n    date: Date;\r\n    isSummary: boolean;\r\n    data?: IPushup;\r\n}\r\n\r\ninterface TrainingOverviewState {\r\n    pushups: IPushup[];\r\n}\r\n\r\nconst initialState: TrainingOverviewState = {\r\n    pushups: [],\r\n};\r\n\r\nexport const perMonth = 500;\r\n\r\nexport const overviewSlice = createSlice({\r\n    name: \"TrainingOverview\",\r\n    initialState,\r\n    reducers: {\r\n        loadFailed: (state) => {\r\n            state = initialState;\r\n        },\r\n        loadSuccess: (state, action: PayloadAction<TrainingOverviewState>) => {\r\n            state.pushups = action.payload?.pushups ?? [];\r\n        },\r\n        addPushups: (state, action: PayloadAction<IPushup>) => {\r\n            let today = fromDate(state.pushups, new Date(action.payload.date ?? new Date()));\r\n            state.pushups = without(state.pushups, ...today);\r\n\r\n            const newSet = {\r\n                count: action.payload.count,\r\n                date: (action.payload.date ?? new Date()).toString(),\r\n            };\r\n            today.push(newSet);\r\n            while (today.length > 2) {\r\n                const minCount = minBy(today, (pushup: IPushup): number => pushup.count) || newSet;\r\n                today = without<IPushup>(today, minCount);\r\n            }\r\n            state.pushups.push(...today);\r\n            saveState(state);\r\n        },\r\n        removePushups: (state, action: PayloadAction<IPushup>) => {\r\n            const found = find(\r\n                state.pushups,\r\n                (pushUp: IPushup): boolean => pushUp.count === action.payload.count && pushUp.date === action.payload.date\r\n            );\r\n            if (found) {\r\n                state.pushups = without(state.pushups, found);\r\n            }\r\n\r\n            saveState(state);\r\n        },\r\n    },\r\n});\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const { addPushups, removePushups } = overviewSlice.actions;\r\n\r\nconst storageName = \"Training\";\r\n\r\nfunction saveState(state: TrainingOverviewState) {\r\n    saveData(storageName, state);\r\n}\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n    if (isSupported) {\r\n        dispatch(loadSuccess(loadData(storageName) as TrainingOverviewState));\r\n    } else {\r\n        dispatch(loadFailed());\r\n    }\r\n};\r\n\r\nfunction fromDate(pushups: IPushup[], date: Date) {\r\n    return filter(\r\n        pushups,\r\n        (pushup: IPushup): boolean =>\r\n            new Date(pushup.date ?? new Date()).getDate() === date.getDate() &&\r\n            new Date(pushup.date ?? new Date()).getMonth() === date.getMonth() &&\r\n            new Date(pushup.date ?? new Date()).getFullYear() === date.getFullYear()\r\n    );\r\n}\r\n\r\nexport function fromMonth(pushups: IPushup[], current: Date = new Date()) {\r\n    return filter(\r\n        pushups,\r\n        (pushup: IPushup): boolean =>\r\n            new Date(pushup.date ?? new Date()).getMonth() === current.getMonth() &&\r\n            new Date(pushup.date ?? new Date()).getFullYear() === current.getFullYear()\r\n    );\r\n}\r\n\r\nexport function calcAverage(pushups: IPushup[], current: Date) {\r\n    const sum = sumBy(pushups, (pushup: IPushup): number => pushup.count);\r\n    return sum / current.getDate();\r\n}\r\n\r\nexport function calcTotal(pushups: IPushup[]) {\r\n    return sumBy(pushups, (pushup: IPushup): number => pushup.count) ?? 0;\r\n}\r\n\r\nexport function calcMissing(pushups: IPushup[]) {\r\n    return max<number>([perMonth - sumBy(pushups, (pushup: IPushup): number => pushup.count), 0]) ?? 0;\r\n}\r\n\r\nexport function calcMissingAverage(pushups: IPushup[], current: Date) {\r\n    const count = calcMissing(pushups);\r\n    return count / (daysInMonth(current) - current.getDate() + 1);\r\n}\r\n\r\nfunction daysInMonth(current: Date): number {\r\n    return new Date(current.getFullYear(), current.getMonth() + 1, 0).getDate();\r\n}\r\n\r\nfunction summaryDate(current: Date): Date {\r\n    return new Date(current.getFullYear(), current.getMonth(), 1);\r\n}\r\n\r\nexport function combineSummary(pushups: IPushup[]): ITrainingSummary[] {\r\n    const sorted = sortBy(pushups, (pushUp): Date => new Date(pushUp.date ?? new Date())).reverse();\r\n    const thisMonth = summaryDate(new Date());\r\n    const result: ITrainingSummary[] = [];\r\n    forEach(sorted, (pushup) => {\r\n        const actualDate = new Date(pushup.date ?? new Date());\r\n        const sumDate = summaryDate(actualDate);\r\n        if (sumDate.toString() === thisMonth.toString()) {\r\n            result.push({ date: actualDate, count: pushup.count, isSummary: false, data: pushup });\r\n        } else {\r\n            let found = find(result, (sum) => sum.date.toString() === sumDate.toString());\r\n            if (!found) {\r\n                found = { date: sumDate, count: 0, isSummary: true };\r\n                result.push(found);\r\n            }\r\n\r\n            found.count += pushup.count;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function mapSummary(pushups: IPushup[]): ITrainingSummary[] {\r\n    return sortBy(pushups, (pushUp): Date => new Date(pushUp.date ?? new Date()))\r\n        .reverse()\r\n        .map((pushUp) => ({ date: new Date(pushUp.date ?? new Date()), count: pushUp.count, isSummary: false, data: pushUp }));\r\n}\r\n\r\nexport const selectPushups = (state: RootState) => state.training.pushups;\r\n\r\nexport default overviewSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport {\r\n  map,\r\n  find,\r\n  uniqBy,\r\n  filter,\r\n  without,\r\n  forEach,\r\n  sumBy,\r\n  some,\r\n  min,\r\n} from \"lodash\";\r\n\r\ninterface IBuildingBlock {\r\n  name: string;\r\n  width: number;\r\n  length: number;\r\n  needRoad?: boolean;\r\n  location?: IGraphPoint;\r\n}\r\n\r\ninterface IRoadBlock {\r\n  name: string;\r\n  width: number;\r\n  length: number;\r\n  location: IGraphPoint;\r\n}\r\n\r\ninterface IGraphPoint {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface IArea {\r\n  graph: IGraphPoint[];\r\n}\r\n\r\ninterface PlaygroundOverviewState {\r\n  area: IArea;\r\n  townHall: IBuildingBlock;\r\n  buildings: IBuildingBlock[];\r\n}\r\n\r\nconst initialState: PlaygroundOverviewState = {\r\n  area: { graph: [] },\r\n  townHall: createBuilding(\"TownHall\", 7, 6, true),\r\n  buildings: [{ name: \"TH\", width: 4, length: 4, needRoad: true }],\r\n};\r\n\r\nexport const overviewSlice = createSlice({\r\n  name: \"PlaygroundOverview\",\r\n  initialState,\r\n  reducers: {\r\n    loadFailed: (state) => {\r\n      state = initialState;\r\n    },\r\n    loadSuccess: (state, action: PayloadAction<PlaygroundOverviewState>) => {},\r\n  },\r\n});\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const {\r\n  //\r\n} = overviewSlice.actions;\r\n\r\nconst storageName = \"Play\";\r\n\r\nfunction saveState(state: PlaygroundOverviewState) {\r\n  saveData(storageName, state);\r\n}\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n  if (isSupported) {\r\n    dispatch(loadSuccess(loadData(storageName) as PlaygroundOverviewState));\r\n  } else {\r\n    dispatch(loadFailed());\r\n  }\r\n};\r\n\r\nfunction createBuilding(\r\n  name: string,\r\n  width: number,\r\n  length: number,\r\n  needRoad: boolean = true\r\n) {\r\n  return { name, width, length, needRoad };\r\n}\r\n\r\nfunction createDuplicateBuildings(\r\n  building: IBuildingBlock,\r\n  count: number\r\n): IBuildingBlock[] {\r\n  const list = [];\r\n  for (let i = 0; i < count; i++) {\r\n    list.push({ ...building });\r\n  }\r\n  return list;\r\n}\r\n\r\n// 0,0\r\n// 8,0\r\n// 8,4\r\n// 24,4\r\n// 24,8\r\n// 40,8\r\n// 40,-28\r\n// 20,-28\r\n// 0,-28\r\n\r\nexport default overviewSlice.reducer;\r\n","import { ICommandBarStyles, IStackStyles, memoizeFunction, mergeStyleSets, IButtonStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongOverviewStyles {\r\n    dashboard: IStackStyles;\r\n    listItem: Partial<IButtonStyles>;\r\n    footerButton: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongOverviewStyles = (): IMahjongOverviewStyles => ({\r\n    dashboard: {\r\n        root: { padding: \"24px 0 0 0\" },\r\n    },\r\n    listItem: {\r\n        root: {\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            padding: \"20px 10px 20px 20px\",\r\n            margin: \"10px 0\",\r\n        },\r\n        flexContainer: {\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    },\r\n    footerButton: {\r\n        root: {\r\n            marginTop: 30,\r\n            float: \"right\",\r\n            marginRight: 30,\r\n        },\r\n    },\r\n});\r\n\r\nexport interface IMahjongOverviewClassNames {\r\n    list: string;\r\n    winnerIcon: string;\r\n    winnerIcon2: string;\r\n    eastIcon: string;\r\n}\r\n\r\nexport const mahjongOverviewClassNames = memoizeFunction(\r\n    (): IMahjongOverviewClassNames => {\r\n        return mergeStyleSets({\r\n            list: {\r\n                margin: \"0 10px\",\r\n            },\r\n            winnerIcon: {\r\n                fontSize: 20,\r\n                height: 20,\r\n                width: 20,\r\n                marginRight: \"10px\",\r\n                marginLeft: \"auto\",\r\n                color: \"green\",\r\n            },\r\n            winnerIcon2: {\r\n                fontSize: 20,\r\n                height: 20,\r\n                width: 20,\r\n                marginRight: \"10px\",\r\n                marginLeft: \"0px\",\r\n                color: \"green\",\r\n            },\r\n            eastIcon: {\r\n                fontSize: 20,\r\n                height: 20,\r\n                width: 20,\r\n                marginRight: \"10px\",\r\n                marginLeft: \"auto\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import { t } from \"../utils/LocalizationUtil\";\r\nimport { ICalendarStrings } from \"office-ui-fabric-react\";\r\n\r\nexport const HomeTitle = () => t({ da: \"Velkommen hjem\", en: \"Welcome home\" });\r\n\r\nexport const MahJongTitle = () => t({ da: \"MahJong\" });\r\nexport const MahJongHeader = () => t({ da: \"MahJong lommeregner\", en: \"MahJong calculator\" });\r\nexport const HomeButton = () => t({ da: \"Hjem\", en: \"Home\" });\r\nexport const CloseButton = () => t({ da: \"Luk\", en: \"Close\" });\r\nexport const CancelButton = () => t({ da: \"Afbryd\", en: \"Cancel\" });\r\nexport const BackButton = () => t({ da: \"Tilbage\", en: \"Back\" });\r\nexport const SaveButton = () => t({ da: \"Gem\", en: \"Save\" });\r\nexport const SaveScoreButton = () => t({ da: \"Nyt spil\", en: \"New game\" });\r\nexport const OkButton = () => t({ da: \"Ok\" });\r\nexport const AddButton = () => t({ da: \"Tilføj\", en: \"Add\" });\r\nexport const AddUserTitle = () => t({ da: \"Tilføj spiller\", en: \"Add player\" });\r\nexport const WinnerToggleLabel = () => t({ da: \"Vandt du?\", en: \"Did you win?\" });\r\nexport const EastToggleLabel = () => t({ da: \"Er du øst?\", en: \"Are you east?\" });\r\nexport const OnToggle = () => t({ da: \"Jeps\", en: \"Yes\" });\r\nexport const OffToggle = () => t({ da: \"Nope\", en: \"No way\" });\r\nexport const EditPlayersButton = () => t({ da: \"Vælg spillere\", en: \"Choose players\" });\r\nexport const ClearButton = () => t({ da: \"Ryd op\", en: \"Clear\" });\r\nexport const ClearAllButton = () => t({ da: \"Slet alt\", en: \"Remove all\" });\r\nexport const ClearAllGamesButton = () => t({ da: \"Slet alle point\", en: \"Clear all points\" });\r\nexport const ClearGameButton = () => t({ da: \"Slet spil\", en: \"Clear current game\" });\r\nexport const EditPlayersTitle = () => t({ da: \"Vælg spillere\", en: \"Choose players\" });\r\nexport const EditButton = () => t({ da: \"Ændre spiller\", en: \"Change player\" });\r\nexport const DeleteButton = () => t({ da: \"Slet spiller\", en: \"Delete player\" });\r\nexport const AddPlayerLabel = () => {\r\n    return t({ da: \"Tilføj ny spiller\", en: \"Add new player\" });\r\n};\r\nexport const DeletePlayerLabel = () => {\r\n    return t({ da: \"Slet spiller\", en: \"Delete player\" });\r\n};\r\nexport const CurrentScore = (points: number) => t({ da: `Score: ${points}`, en: `Score: ${points}` });\r\nexport const GameScore = (points: number) => t({ da: `Samlet score: ${points}`, en: `Total score: ${points}` });\r\nexport const FullGameScore = (points: number, allGamePoints: number) =>\r\n    t({\r\n        da: `Samlet score: ${points} (${allGamePoints})`,\r\n        en: `Total score: ${points} (${allGamePoints})`,\r\n    });\r\n\r\nexport const EditScoreTitle = () => t({ da: \"Score\", en: \"Score picker\" });\r\nexport const ChooseTileTypeLabel = () => t({ da: \"Vælg sæt type\", en: \"Choose set type\" });\r\nexport const ChooseSetTypeLabel = () => t({ da: \"Vælg antal i sæt\", en: \"Choose count in set\" });\r\nexport const InHandLabel = () => t({ da: \"Er sæt på hånden?\", en: \"Is set in hand?\" });\r\nexport const OneOrNineLabel = () => t({ da: \"Er det ener eller nier?\", en: \"Is it one or nine?\" });\r\nexport const OwnWindLabel = () => t({ da: \"Er det egen vind?\", en: \"Is it your own wind?\" });\r\nexport const DragonLabel = () => t({ da: \"Drager\", en: \"Dragons\" });\r\nexport const WindLabel = () => t({ da: \"Vinde\", en: \"Wind\" });\r\nexport const CharacterLabel = () => t({ da: \"Tal\", en: \"Characters\" });\r\nexport const BambooLabel = () => t({ da: \"Bambus\", en: \"Bamboo\" });\r\nexport const CircleLabel = () => t({ da: \"Cirkler\", en: \"Circles\" });\r\nexport const FlowerLabel = () => t({ da: \"Blomster\", en: \"Flowers\" });\r\nexport const UnknownLabel = () => t({ da: \"Ukendt\", en: \"Unknown\" });\r\nexport const ChowLabel = () => t({ da: \"Chow\" });\r\nexport const PoongLabel = () => t({ da: \"Poong\" });\r\nexport const KongLabel = () => t({ da: \"Kong\" });\r\nexport const PairLabel = () => t({ da: \"Slut par\", en: \"End pair\" });\r\nexport const SingleLabel = () => t({ da: \"Enkelt\", en: \"Single\" });\r\n\r\nexport const TrainingTitle = () => t({ da: \"Træning\", en: \"Training\" });\r\nexport const TrainingHeader = () => t({ da: \"Træning\", en: \"Training\" });\r\nexport const TrainingHeaderWithDate = (date: string) => t({ da: `Træning ${date}`, en: `Training ${date}` });\r\nexport const TrainingListHeader = () => t({ da: \"Detaljer\", en: \"Details\" });\r\nexport const TrainingShowAllLabel = () => t({ da: \"Vis alle\", en: \"Show all\" });\r\nexport const TrainingAddMenuButton = () => t({ da: \"Tilføj\", en: \"Add\" });\r\nexport const TrainingDateButton = () => t({ da: \"Dato\", en: \"Date\" });\r\nexport const TrainingAddButton = (count: string) => t({ da: `Tilføj ${count}`, en: `Add ${count}` });\r\nexport const TrainingCount = (count: string) => t({ da: `Total: ${count}`, en: `Total: ${count}` });\r\nexport const TrainingAverage = (average: string) => t({ da: `Gennemsnit: ${average}`, en: `Average: ${average}` });\r\nexport const TrainingMissing = (count: string) => t({ da: `Mangler: ${count}`, en: `Missing: ${count}` });\r\nexport const TrainingMissingAverage = (average: string) => t({ da: `Mangler pr. dag: ${average}`, en: `Missing per day: ${average}` });\r\nexport const TrainingDetails = (count: string, date: string) => t({ da: `${date}: ${count}` });\r\n\r\nexport const PlaygroundTitle = () => t({ da: \"Ekstra\", en: \"Extra\" });\r\n\r\nexport const DayPickerStrings = () =>\r\n    t<ICalendarStrings>({\r\n        da: {\r\n            months: [\"Januar\", \"Februar\", \"Marts\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"December\"],\r\n            shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"],\r\n            days: [\"Søndag\", \"Mandag\", \"Tirsdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lørdag\"],\r\n            shortDays: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\r\n            goToToday: \"Gå til idag\",\r\n            weekNumberFormatString: \"Uge nummer {0}\",\r\n            prevMonthAriaLabel: \"Forrige måned\",\r\n            nextMonthAriaLabel: \"Næste måned\",\r\n            prevYearAriaLabel: \"Forrige år\",\r\n            nextYearAriaLabel: \"Næste år\",\r\n            prevYearRangeAriaLabel: \"Forrige år\",\r\n            nextYearRangeAriaLabel: \"Næste år\",\r\n            closeButtonAriaLabel: \"Luk\",\r\n        },\r\n        en: {\r\n            months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n            shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n            days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n            shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n            goToToday: \"Go to today\",\r\n            weekNumberFormatString: \"Week number {0}\",\r\n            prevMonthAriaLabel: \"Previous month\",\r\n            nextMonthAriaLabel: \"Next month\",\r\n            prevYearAriaLabel: \"Previous year\",\r\n            nextYearAriaLabel: \"Next year\",\r\n            prevYearRangeAriaLabel: \"Previous year range\",\r\n            nextYearRangeAriaLabel: \"Next year range\",\r\n            closeButtonAriaLabel: \"Close\",\r\n        },\r\n    });\r\n","import { IButtonStyles, memoizeFunction, mergeStyleSets, IComboBoxStyles, ITextFieldStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface ISelectUserPanelStyles {\r\n    combobox: Partial<IComboBoxStyles>;\r\n    footer: Partial<IButtonStyles>;\r\n    firstRoot: Partial<ITextFieldStyles>;\r\n    firstContainer: Partial<IComboBoxStyles>;\r\n}\r\n\r\nexport const getSelectUserPanelStyles = (): ISelectUserPanelStyles => ({\r\n    footer: {\r\n        root: { margin: \"5px\" },\r\n    },\r\n    combobox: {\r\n        root: { margin: \"5px\" },\r\n    },\r\n    firstRoot: {\r\n        root: {\r\n            flexGrow: \"1\",\r\n            flexShrink: \"1\",\r\n        },\r\n    },\r\n    firstContainer: {\r\n        container: {\r\n            flexGrow: \"1\",\r\n            flexShrink: \"1\",\r\n        },\r\n    },\r\n});\r\n\r\nexport interface ISelectUserPanelClassNames {\r\n    wrapper: string;\r\n}\r\n\r\nexport const selectUserPanelClassNames = memoizeFunction(\r\n    (): ISelectUserPanelClassNames => {\r\n        return mergeStyleSets({\r\n            wrapper: {\r\n                display: \"flex\",\r\n                alignItems: \"flex-end\",\r\n                margin: \"30px 5px\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import { classNamesFunction, ComboBox, IComboBoxOption, IComboBox, Panel, PrimaryButton, IconButton } from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { selectUserPanelClassNames, getSelectUserPanelStyles, ISelectUserPanelClassNames } from \"./SelectUserPanel.styles\";\r\nimport { map, find, filter, isEmpty } from \"lodash\";\r\nimport { IMahJongUser, createUser } from \"../Mahjong.model\";\r\nimport { EditPlayersTitle, CloseButton, DeleteButton, DeletePlayerLabel, OkButton } from \"../../../localization/DisplayStrings\";\r\n\r\nexport interface SelectUserPanelProps {\r\n    isOpen: boolean;\r\n    onSave: (selectedPlayers: IMahJongUser[]) => void;\r\n    onDelete: (player: IMahJongUser) => void;\r\n    allPlayers: IMahJongUser[];\r\n    currentPlayers: IMahJongUser[];\r\n}\r\n\r\nexport function SelectUserPanel(props: SelectUserPanelProps): JSX.Element {\r\n    const classNames = classNamesFunction<{}, ISelectUserPanelClassNames>()(selectUserPanelClassNames);\r\n    const styles = getSelectUserPanelStyles();\r\n\r\n    const { isOpen, onSave, onDelete, allPlayers, currentPlayers } = props;\r\n    const [selectedPlayers, setSelectedPlayers] = React.useState<IMahJongUser[]>([]);\r\n    const [userToDelete, setUserToDelete] = React.useState<IMahJongUser | null>(null);\r\n\r\n    useEffect((): void => {\r\n        const selected = [...currentPlayers];\r\n        let i = selected.length;\r\n        for (i; i < 4; i++) {\r\n            selected.push(createUser(\"\"));\r\n        }\r\n        setSelectedPlayers(selected);\r\n    }, [currentPlayers]);\r\n\r\n    const onChange = (selectedIndex: number) => (event: React.FormEvent<IComboBox>, option?: IComboBoxOption) => {\r\n        const selected = [...selectedPlayers];\r\n        if (selected.length > selectedIndex) {\r\n            selected[selectedIndex] = option?.data || createUser(\"\");\r\n        }\r\n        setSelectedPlayers(selected);\r\n    };\r\n\r\n    const onSaveClicked = () => {\r\n        onSave(filter(selectedPlayers, (user: IMahJongUser): boolean => !isEmpty(user.name)));\r\n    };\r\n\r\n    const options = [\r\n        { key: \"_\", text: \"\" },\r\n        ...map(\r\n            allPlayers,\r\n            (user: IMahJongUser): IComboBoxOption => {\r\n                return { key: user.id, text: user.name, data: user };\r\n            }\r\n        ),\r\n    ];\r\n\r\n    const filteredOptions = (user: IMahJongUser): IComboBoxOption[] => {\r\n        const filtered = filter(options, (option: IComboBoxOption): boolean => {\r\n            return option.key === user.id || !find(selectedPlayers, (selected: IMahJongUser): boolean => option.key === selected.id);\r\n        });\r\n        return filtered.length === 1 ? [] : filtered;\r\n    };\r\n\r\n    const renderComboBox = (user: IMahJongUser, key: number): JSX.Element => (\r\n        <ComboBox\r\n            key={key}\r\n            aria-label=\"\"\r\n            selectedKey={user.id}\r\n            autoComplete=\"on\"\r\n            options={filteredOptions(user)}\r\n            onChange={onChange(key)}\r\n            styles={styles.combobox}\r\n        />\r\n    );\r\n\r\n    const allComboboxes = map(selectedPlayers, (user: IMahJongUser, index: number): JSX.Element => renderComboBox(user, index));\r\n\r\n    const onDeleteUserChange = (event: React.FormEvent<IComboBox>, option?: IComboBoxOption) => {\r\n        setUserToDelete(option?.data);\r\n    };\r\n    const onDeleteUserClicked = () => {\r\n        if (userToDelete) {\r\n            onDelete(userToDelete);\r\n        }\r\n    };\r\n\r\n    const renderDeleteCombobox = (): JSX.Element => {\r\n        return (\r\n            <div className={classNames.wrapper}>\r\n                <ComboBox\r\n                    label={DeletePlayerLabel()}\r\n                    aria-label=\"\"\r\n                    autoComplete=\"on\"\r\n                    selectedKey={userToDelete?.id}\r\n                    options={options.length === 1 ? [] : options}\r\n                    onChange={onDeleteUserChange}\r\n                    styles={styles.firstContainer}\r\n                />\r\n                <IconButton\r\n                    iconProps={{ iconName: \"Delete\" }}\r\n                    onClick={onDeleteUserClicked}\r\n                    title={DeleteButton()}\r\n                    ariaLabel={DeleteButton()}\r\n                    disabled={isEmpty(userToDelete?.id)}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const onRenderFooterContent = () => (\r\n        <div>\r\n            <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n                {OkButton()}\r\n            </PrimaryButton>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Panel\r\n                isOpen={isOpen}\r\n                isLightDismiss\r\n                onDismiss={onSaveClicked}\r\n                headerText={EditPlayersTitle()}\r\n                closeButtonAriaLabel={CloseButton()}\r\n                onRenderFooterContent={onRenderFooterContent}\r\n                isFooterAtBottom={true}\r\n            >\r\n                {allComboboxes}\r\n                {renderDeleteCombobox()}\r\n            </Panel>\r\n        </div>\r\n    );\r\n}\r\n","import { ICommandBarStyles, IStackStyles, memoizeFunction, mergeStyleSets, IButtonStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongDetailsStyles {\r\n    commandBar: ICommandBarStyles;\r\n    dashboard: IStackStyles;\r\n    listButton: Partial<IButtonStyles>;\r\n    footer: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongDetailsStyles = (): IMahjongDetailsStyles => ({\r\n    commandBar: {\r\n        root: {\r\n            padding: \"5px\",\r\n        },\r\n    },\r\n    dashboard: {\r\n        root: { padding: \"24px 0 0 0\" },\r\n    },\r\n    listButton: {\r\n        root: {\r\n            marginTop: \"10px\",\r\n            marginLeft: \"auto\",\r\n        },\r\n    },\r\n    footer: {\r\n        root: {\r\n            marginTop: 30,\r\n            float: \"right\",\r\n            marginRight: 30,\r\n        },\r\n    },\r\n});\r\n\r\nexport interface IMahjongDetailsClassNames {\r\n    page: string;\r\n    content: string;\r\n    listItem: string;\r\n    listDescription: string;\r\n}\r\n\r\nexport const mahjongDetailsClassNames = memoizeFunction(\r\n    (): IMahjongDetailsClassNames => {\r\n        return mergeStyleSets({\r\n            page: {\r\n                overflow: \"auto\",\r\n                // background: '#F8F8F9'\r\n            },\r\n            content: {\r\n                margin: \"10px\",\r\n            },\r\n            listItem: {\r\n                display: \"flex\",\r\n                margin: \"10px\",\r\n            },\r\n            listDescription: {\r\n                margin: \"0 20px\",\r\n                padding: \"5px\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import { IButtonStyles, memoizeFunction, mergeStyleSets, IChoiceGroupOptionStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface IScorePanelStyles {\r\n    footer: Partial<IButtonStyles>;\r\n    choiceGroup: Partial<IChoiceGroupOptionStyles>;\r\n}\r\n\r\nexport const getScorePanelStyles = (): IScorePanelStyles => ({\r\n    footer: {\r\n        root: { margin: \"5px\" },\r\n    },\r\n    choiceGroup: {\r\n        choiceFieldWrapper: {\r\n            backgroundColor: \"white\",\r\n        },\r\n    },\r\n});\r\n\r\nexport interface IScorePanelClassNames {\r\n    wrapper: string;\r\n}\r\n\r\nexport const scorePanelClassNames = memoizeFunction(\r\n    (): IScorePanelClassNames => {\r\n        return mergeStyleSets({\r\n            wrapper: {\r\n                display: \"flex\",\r\n                alignItems: \"flex-end\",\r\n                margin: \"30px 5px\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import {\r\n  DragonLabel,\r\n  WindLabel,\r\n  BambooLabel,\r\n  CircleLabel,\r\n  CharacterLabel,\r\n  FlowerLabel,\r\n  UnknownLabel,\r\n  SingleLabel,\r\n  PairLabel,\r\n  ChowLabel,\r\n  PoongLabel,\r\n  KongLabel,\r\n} from \"../../localization/DisplayStrings\";\r\nimport MahJongGreenDragon from \"../../images/MahjongGreenDragon.jpg\";\r\nimport MahJongEast from \"../../images/MahjongEast.jpg\";\r\nimport MahJongBamboo6 from \"../../images/MahjongBamboo6.jpg\";\r\nimport MahJongBambooChow from \"../../images/MahjongBambooChow.jpg\";\r\nimport MahJongCircle5 from \"../../images/MahjongCircle5.jpg\";\r\nimport MahJongCircleChow from \"../../images/MahjongCircleChow.jpg\";\r\nimport MahJongCharacter4 from \"../../images/MahjongCharacter4.jpg\";\r\nimport MahJongCharacterChow from \"../../images/MahjongCharacterChow.jpg\";\r\nimport MahJongSeason1 from \"../../images/MahjongSeason1.jpg\";\r\nimport MahJongSeason2 from \"../../images/MahjongSeason2.jpg\";\r\nimport MahJongSeason3 from \"../../images/MahjongSeason3.jpg\";\r\nimport MahJongSeason4 from \"../../images/MahjongSeason4.jpg\";\r\nimport MahJongFlower2 from \"../../images/MahjongFlower2.jpg\";\r\nimport {\r\n  MahJongTileTypes,\r\n  MahJongSetTypes,\r\n  IMahJongSet,\r\n} from \"./Mahjong.model\";\r\n\r\nexport function displayTileType(tile: MahJongTileTypes) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Dragon:\r\n      return DragonLabel();\r\n    case MahJongTileTypes.Wind:\r\n      return WindLabel();\r\n    case MahJongTileTypes.Bamboo:\r\n      return BambooLabel();\r\n    case MahJongTileTypes.Circle:\r\n      return CircleLabel();\r\n    case MahJongTileTypes.Character:\r\n      return CharacterLabel();\r\n    case MahJongTileTypes.Flower:\r\n      return FlowerLabel();\r\n    default:\r\n      return UnknownLabel();\r\n  }\r\n}\r\n\r\nexport function imageTileType(tile: MahJongTileTypes, index?: number) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Dragon:\r\n      return MahJongGreenDragon;\r\n    case MahJongTileTypes.Wind:\r\n      return MahJongEast;\r\n    case MahJongTileTypes.Bamboo:\r\n      return MahJongBamboo6;\r\n    case MahJongTileTypes.Circle:\r\n      return MahJongCircle5;\r\n    case MahJongTileTypes.Character:\r\n      return MahJongCharacter4;\r\n    case MahJongTileTypes.Flower:\r\n      if (index === 1) {\r\n        return MahJongSeason1;\r\n      }\r\n      if (index === 2) {\r\n        return MahJongSeason2;\r\n      }\r\n      if (index === 3) {\r\n        return MahJongSeason3;\r\n      }\r\n      if (index === 6) {\r\n        return MahJongFlower2;\r\n      }\r\n      return MahJongSeason4;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\nexport function imageSet(item?: IMahJongSet) {\r\n  if (!item) {\r\n    return [];\r\n  }\r\n\r\n  if (item.tileType === MahJongTileTypes.Flower) {\r\n    return getFlowerImageSet(item.setType);\r\n  }\r\n\r\n  return getOtherImageSet(item.tileType, item.setType);\r\n}\r\n\r\nfunction getFlowerImageSet(setType: MahJongSetTypes) {\r\n  switch (setType) {\r\n    case MahJongSetTypes.Single:\r\n      return [imageTileType(MahJongTileTypes.Flower)];\r\n    case MahJongSetTypes.Pair:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 6),\r\n        imageTileType(MahJongTileTypes.Flower, 3),\r\n      ];\r\n    case MahJongSetTypes.Chow:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 6),\r\n      ];\r\n    case MahJongSetTypes.Poong:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 4),\r\n      ];\r\n    case MahJongSetTypes.Kong:\r\n      return [\r\n        imageTileType(MahJongTileTypes.Flower, 1),\r\n        imageTileType(MahJongTileTypes.Flower, 2),\r\n        imageTileType(MahJongTileTypes.Flower, 3),\r\n        imageTileType(MahJongTileTypes.Flower, 4),\r\n      ];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction getOtherImageSet(\r\n  tileType: MahJongTileTypes,\r\n  setType: MahJongSetTypes\r\n) {\r\n  const image = imageTileType(tileType);\r\n  switch (setType) {\r\n    case MahJongSetTypes.Pair:\r\n      return [image, image];\r\n    case MahJongSetTypes.Chow:\r\n      return imageChowType(tileType);\r\n    case MahJongSetTypes.Poong:\r\n      return [image, image, image];\r\n    case MahJongSetTypes.Kong:\r\n      return [image, image, image, image];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nfunction imageChowType(tile: MahJongTileTypes) {\r\n  switch (tile) {\r\n    case MahJongTileTypes.Bamboo:\r\n      return [MahJongBambooChow];\r\n    case MahJongTileTypes.Circle:\r\n      return [MahJongCircleChow];\r\n    case MahJongTileTypes.Character:\r\n      return [MahJongCharacterChow];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nexport function displaySetType(set: MahJongSetTypes) {\r\n  switch (set) {\r\n    case MahJongSetTypes.Single:\r\n      return SingleLabel();\r\n    case MahJongSetTypes.Pair:\r\n      return PairLabel();\r\n    case MahJongSetTypes.Chow:\r\n      return ChowLabel();\r\n    case MahJongSetTypes.Poong:\r\n      return PoongLabel();\r\n    case MahJongSetTypes.Kong:\r\n      return KongLabel();\r\n    default:\r\n      return UnknownLabel();\r\n  }\r\n}\r\n","import { ComboBox, IComboBoxOption, IComboBox, Panel, PrimaryButton, IChoiceGroupOption, ChoiceGroup, Stack, Toggle } from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { getScorePanelStyles } from \"./ScorePanel.styles\";\r\nimport { IMahJongSet, MahJongSetTypes, MahJongTileTypes } from \"../Mahjong.model\";\r\nimport {\r\n    CloseButton,\r\n    OkButton,\r\n    EditScoreTitle,\r\n    ChooseTileTypeLabel,\r\n    OnToggle,\r\n    OffToggle,\r\n    InHandLabel,\r\n    OneOrNineLabel,\r\n    OwnWindLabel,\r\n    ChooseSetTypeLabel,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { displayTileType, displaySetType, imageTileType } from \"../MahjongDisplay\";\r\n\r\nexport interface ScorePanelProps {\r\n    isOpen: boolean;\r\n    onClose: (set: IMahJongSet) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nexport function ScorePanel(props: ScorePanelProps): JSX.Element {\r\n    const styles = getScorePanelStyles();\r\n\r\n    const { isOpen, onClose, onCancel } = props;\r\n    const [setType, setSetType] = React.useState<MahJongSetTypes>(MahJongSetTypes.Poong);\r\n    const [tileType, setTileType] = React.useState<MahJongTileTypes>(MahJongTileTypes.Bamboo);\r\n    const [inHand, setInHand] = React.useState(false);\r\n    const [oneOrNine, setOneOrNine] = React.useState(false);\r\n    const [ownWind, setOwnWind] = React.useState(false);\r\n\r\n    useEffect((): void => {\r\n        setSetType(MahJongSetTypes.Poong);\r\n        setTileType(MahJongTileTypes.Bamboo);\r\n        setInHand(false);\r\n        setOneOrNine(false);\r\n        setOwnWind(false);\r\n    }, [isOpen]);\r\n\r\n    const onSaveClicked = () => {\r\n        onClose({\r\n            tileType,\r\n            setType,\r\n            inHand,\r\n            oneOrNine,\r\n            ownWind,\r\n        });\r\n    };\r\n    const onChangeInHand = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => {\r\n        setInHand(!!checked);\r\n    };\r\n    const onChangeOneOrNine = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => {\r\n        setOneOrNine(!!checked);\r\n    };\r\n    const onChangeOwnWind = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => {\r\n        setOwnWind(!!checked);\r\n    };\r\n    const onChangeTileType = (ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption) => {\r\n        const tileType = parseInt(option?.key ?? MahJongTileTypes.Bamboo.toString()) as MahJongTileTypes;\r\n        if (tileType === MahJongTileTypes.Flower) {\r\n            if (setType === MahJongSetTypes.Poong) {\r\n                setSetType(MahJongSetTypes.Single);\r\n            }\r\n        } else if (setType === MahJongSetTypes.Single) {\r\n            setSetType(MahJongSetTypes.Poong);\r\n        }\r\n        setTileType(tileType);\r\n    };\r\n    const onChangeSetType = (event: React.FormEvent<IComboBox>, option?: IComboBoxOption) => {\r\n        setSetType((option?.key ?? MahJongSetTypes.Poong) as MahJongSetTypes);\r\n    };\r\n\r\n    const getTileOption = (key: MahJongTileTypes, disabled?: boolean): IChoiceGroupOption => {\r\n        return {\r\n            key: key.toString(),\r\n            imageSrc: imageTileType(key),\r\n            selectedImageSrc: imageTileType(key),\r\n            imageSize: { width: 40, height: 55 },\r\n            imageAlt: displayTileType(key),\r\n            text: displayTileType(key),\r\n            disabled,\r\n            styles: styles.choiceGroup,\r\n        };\r\n    };\r\n\r\n    const getTileOptions = (): IChoiceGroupOption[] => {\r\n        // const isSingle = setType === MahJongSetTypes.Single;\r\n        const isChow = setType === MahJongSetTypes.Chow;\r\n        return [\r\n            getTileOption(MahJongTileTypes.Dragon, isChow),\r\n            getTileOption(MahJongTileTypes.Wind, isChow),\r\n            getTileOption(MahJongTileTypes.Character),\r\n            getTileOption(MahJongTileTypes.Circle),\r\n            getTileOption(MahJongTileTypes.Bamboo),\r\n            getTileOption(MahJongTileTypes.Flower, isChow),\r\n        ];\r\n    };\r\n\r\n    const getSetOption = (key: MahJongSetTypes): IComboBoxOption => {\r\n        return { key, text: displaySetType(key) };\r\n    };\r\n\r\n    const getSetOptions = (): IComboBoxOption[] => {\r\n        const options = [];\r\n        if (tileType === MahJongTileTypes.Bamboo || tileType === MahJongTileTypes.Circle || tileType === MahJongTileTypes.Character) {\r\n            options.push(getSetOption(MahJongSetTypes.Chow));\r\n        }\r\n\r\n        options.push(getSetOption(MahJongSetTypes.Poong));\r\n        options.push(getSetOption(MahJongSetTypes.Kong));\r\n        options.push(getSetOption(MahJongSetTypes.Pair));\r\n\r\n        if (tileType === MahJongTileTypes.Flower) {\r\n            options.push(getSetOption(MahJongSetTypes.Single));\r\n        }\r\n\r\n        return options;\r\n    };\r\n\r\n    // <DefaultButton styles={styles.footer} onClick={onCancel}>{CancelButton()}</DefaultButton>;\r\n    const onRenderFooterContent = () => (\r\n        <div>\r\n            <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n                {OkButton()}\r\n            </PrimaryButton>\r\n        </div>\r\n    );\r\n\r\n    const isInHandVisible = tileType !== MahJongTileTypes.Flower;\r\n    const isOneOrNineVisible =\r\n        tileType === MahJongTileTypes.Bamboo || tileType === MahJongTileTypes.Circle || tileType === MahJongTileTypes.Character;\r\n    const isOwnWindVisible = tileType === MahJongTileTypes.Wind;\r\n\r\n    return (\r\n        <div>\r\n            <Panel\r\n                isOpen={isOpen}\r\n                isLightDismiss\r\n                onDismiss={onCancel}\r\n                headerText={EditScoreTitle()}\r\n                closeButtonAriaLabel={CloseButton()}\r\n                onRenderFooterContent={onRenderFooterContent}\r\n                isFooterAtBottom={true}\r\n            >\r\n                <Stack tokens={{ childrenGap: 10 }}>\r\n                    <ChoiceGroup\r\n                        label={ChooseTileTypeLabel()}\r\n                        selectedKey={tileType.toString()}\r\n                        onChange={onChangeTileType}\r\n                        options={getTileOptions()}\r\n                    />\r\n                    <ComboBox\r\n                        label={ChooseSetTypeLabel()}\r\n                        aria-label=\"\"\r\n                        autoComplete=\"on\"\r\n                        selectedKey={setType}\r\n                        options={getSetOptions()}\r\n                        onChange={onChangeSetType}\r\n                    />\r\n                    {isInHandVisible && (\r\n                        <Toggle\r\n                            label={InHandLabel()}\r\n                            checked={inHand}\r\n                            inlineLabel\r\n                            onText={OnToggle()}\r\n                            offText={OffToggle()}\r\n                            onChange={onChangeInHand}\r\n                        />\r\n                    )}\r\n                    {isOneOrNineVisible && (\r\n                        <Toggle\r\n                            label={OneOrNineLabel()}\r\n                            checked={oneOrNine}\r\n                            inlineLabel\r\n                            onText={OnToggle()}\r\n                            offText={OffToggle()}\r\n                            onChange={onChangeOneOrNine}\r\n                        />\r\n                    )}\r\n                    {isOwnWindVisible && (\r\n                        <Toggle\r\n                            label={OwnWindLabel()}\r\n                            checked={ownWind}\r\n                            inlineLabel\r\n                            onText={OnToggle()}\r\n                            offText={OffToggle()}\r\n                            onChange={onChangeOwnWind}\r\n                        />\r\n                    )}\r\n                </Stack>\r\n            </Panel>\r\n        </div>\r\n    );\r\n}\r\n","import { CommandBar, ICommandBarItemProps, classNamesFunction, Toggle, Stack, List, Image, IconButton, PrimaryButton } from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { mahjongDetailsClassNames, getMahjongDetailsStyles, IMahjongDetailsClassNames } from \"./MahjongDetails.styles\";\r\nimport {\r\n    BackButton,\r\n    EastToggleLabel,\r\n    WinnerToggleLabel,\r\n    OnToggle,\r\n    OffToggle,\r\n    CurrentScore,\r\n    AddButton,\r\n    DeleteButton,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { updateScore, selectCurrentGame, scoreToPoints } from \"../overview/MahjongOverviewSlice\";\r\nimport { IMahJongUser, IMahJongScore, getScore, createScore, IMahJongSet } from \"../Mahjong.model\";\r\nimport { ScorePanel } from \"../scorePanel/ScorePanel\";\r\nimport { displayTileType, displaySetType, imageSet } from \"../MahjongDisplay\";\r\nimport { map, without } from \"lodash\";\r\n\r\nexport interface MahjongDetailsProps {\r\n    user: IMahJongUser;\r\n    onNavigateBack: () => void;\r\n}\r\n\r\nexport function MahjongDetails(props: MahjongDetailsProps): JSX.Element {\r\n    const classNames = classNamesFunction<{}, IMahjongDetailsClassNames>()(mahjongDetailsClassNames);\r\n    const styles = getMahjongDetailsStyles();\r\n\r\n    const { user, onNavigateBack } = props;\r\n\r\n    const currentGame = useSelector(selectCurrentGame);\r\n    const [userScore, setUserScore] = React.useState<IMahJongScore | undefined>(undefined);\r\n    const [showScorePanel, setShowScorePanel] = React.useState(false);\r\n\r\n    useEffect((): void => {\r\n        if (user && currentGame) {\r\n            setUserScore(getScore(currentGame, user));\r\n        }\r\n    }, [user, currentGame]);\r\n\r\n    const initialScore = createScore(\"\");\r\n    const setWinner = (isWinner?: boolean) => {\r\n        const tempScore = {\r\n            ...initialScore,\r\n            ...userScore,\r\n            isWinner,\r\n        };\r\n        tempScore.points = scoreToPoints(tempScore);\r\n        setUserScore(tempScore);\r\n    };\r\n    const setEast = (isEast?: boolean) => {\r\n        setUserScore({ ...initialScore, ...userScore, isEast });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const closeDetails = () => {\r\n        if (userScore) {\r\n            dispatch(updateScore(userScore));\r\n        }\r\n        onNavigateBack();\r\n    };\r\n    const closeScorePanel = (set: IMahJongSet) => {\r\n        if (userScore) {\r\n            const tempScore = {\r\n                ...initialScore,\r\n                ...userScore,\r\n                sets: [...(userScore.sets || []), set],\r\n            };\r\n            tempScore.points = scoreToPoints(tempScore);\r\n            setUserScore(tempScore);\r\n        }\r\n        setShowScorePanel(false);\r\n    };\r\n    const removeSetClicked = (set: IMahJongSet) => {\r\n        if (userScore) {\r\n            const tempScore = {\r\n                ...initialScore,\r\n                ...userScore,\r\n                sets: without(userScore.sets, set),\r\n            };\r\n            tempScore.points = scoreToPoints(tempScore);\r\n            setUserScore(tempScore);\r\n        }\r\n    };\r\n    const cancelScorePanel = () => setShowScorePanel(false);\r\n    const onshowScorePanel = () => {\r\n        setShowScorePanel(true);\r\n    };\r\n    const onChangeWinner = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => setWinner(checked);\r\n    const onChangeEast = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => setEast(checked);\r\n\r\n    const items: ICommandBarItemProps[] = [\r\n        {\r\n            key: \"Back\",\r\n            name: BackButton(),\r\n            iconProps: {\r\n                iconName: \"Back\",\r\n            },\r\n            onClick: closeDetails,\r\n        },\r\n        {\r\n            key: \"Score\",\r\n            name: AddButton(),\r\n            iconProps: {\r\n                iconName: \"6PointStar\",\r\n            },\r\n            onClick: onshowScorePanel,\r\n        },\r\n    ];\r\n\r\n    const getImage = (item: IMahJongSet): JSX.Element[] | JSX.Element => {\r\n        return map(\r\n            imageSet(item),\r\n            (imageSrc, index): JSX.Element => {\r\n                return <Image key={index} src={imageSrc} alt={displayTileType(item.tileType)} height={55} />;\r\n            }\r\n        );\r\n    };\r\n\r\n    const onRenderCell = (item?: IMahJongSet): JSX.Element | null => {\r\n        if (!item) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames.listItem}>\r\n                {getImage(item)}\r\n                <div className={classNames.listDescription}>\r\n                    <div>{displayTileType(item?.tileType)}</div>\r\n                    <div>{displaySetType(item?.setType)}</div>\r\n                </div>\r\n                <IconButton\r\n                    iconProps={{ iconName: \"Delete\" }}\r\n                    title={DeleteButton()}\r\n                    ariaLabel={DeleteButton()}\r\n                    onClick={() => {\r\n                        removeSetClicked(item);\r\n                    }}\r\n                    styles={styles.listButton}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={classNames.page}>\r\n            <CommandBar items={items} styles={styles.commandBar} />\r\n            <div className={classNames.content}>\r\n                <h1>{user.name}</h1>\r\n                <p>{CurrentScore(userScore?.points ?? 0)}</p>\r\n                <Stack tokens={{ childrenGap: 10 }}>\r\n                    <Toggle\r\n                        label={WinnerToggleLabel()}\r\n                        checked={userScore?.isWinner}\r\n                        inlineLabel\r\n                        onText={OnToggle()}\r\n                        offText={OffToggle()}\r\n                        onChange={onChangeWinner}\r\n                    />\r\n                    <Toggle\r\n                        label={EastToggleLabel()}\r\n                        checked={userScore?.isEast}\r\n                        inlineLabel\r\n                        onText={OnToggle()}\r\n                        offText={OffToggle()}\r\n                        onChange={onChangeEast}\r\n                    />\r\n                </Stack>\r\n                <List items={userScore?.sets} onRenderCell={onRenderCell} />\r\n                <PrimaryButton styles={styles.footer} onClick={onshowScorePanel}>\r\n                    {AddButton()}\r\n                </PrimaryButton>\r\n            </div>\r\n            <ScorePanel isOpen={showScorePanel} onClose={closeScorePanel} onCancel={cancelScorePanel} />\r\n        </div>\r\n    );\r\n}\r\n","import { ComboBox, IComboBoxOption, IComboBox, PrimaryButton, DefaultButton, Dialog, DialogType, DialogFooter } from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { map } from \"lodash\";\r\nimport { IMahJongUser, createUser } from \"../Mahjong.model\";\r\nimport { OkButton, CancelButton, AddUserTitle } from \"../../../localization/DisplayStrings\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../overview/MahjongOverviewSlice\";\r\n\r\nexport interface AddUserPanelProps {\r\n    isOpen: boolean;\r\n    onAdd: (player: IMahJongUser) => void;\r\n    onCancel: () => void;\r\n    allPlayers: IMahJongUser[];\r\n}\r\n\r\nexport function AddUserPanel(props: AddUserPanelProps): JSX.Element {\r\n    const { isOpen, onAdd, onCancel, allPlayers } = props;\r\n    const [newPlayer, setNewPlayer] = React.useState<IMahJongUser | undefined>();\r\n    const [options, setOptions] = React.useState<IComboBoxOption[]>([]);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect((): void => {\r\n        setNewPlayer(undefined);\r\n    }, [isOpen]);\r\n\r\n    const mapUserToOption = (user: IMahJongUser): IComboBoxOption => {\r\n        return { key: user.id, text: user.name, data: user };\r\n    };\r\n\r\n    useEffect((): void => {\r\n        setOptions(map(allPlayers, mapUserToOption));\r\n    }, [allPlayers]);\r\n\r\n    const onSaveClicked = () => {\r\n        if (newPlayer) {\r\n            onAdd(newPlayer);\r\n        }\r\n    };\r\n\r\n    const onAddUserChange = (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n        if (option?.data) {\r\n            setNewPlayer(option.data);\r\n        } else {\r\n            const text: string | undefined = option?.text || value;\r\n            if (text) {\r\n                const createdPlayer = createUser(text);\r\n                dispatch(addUser(createdPlayer));\r\n                setNewPlayer(createdPlayer);\r\n                setOptions([...options, mapUserToOption(createdPlayer)]);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            hidden={!isOpen}\r\n            onDismiss={onCancel}\r\n            dialogContentProps={{\r\n                type: DialogType.normal,\r\n                title: AddUserTitle(),\r\n                closeButtonAriaLabel: CancelButton(),\r\n            }}\r\n            modalProps={{\r\n                isBlocking: false,\r\n                // styles: { main: { maxWidth: 450 } },\r\n            }}\r\n        >\r\n            <ComboBox\r\n                ariaLabel={AddUserTitle()}\r\n                key=\"User\"\r\n                selectedKey={newPlayer?.id}\r\n                allowFreeform={true}\r\n                autoComplete=\"on\"\r\n                onChange={onAddUserChange}\r\n                options={options}\r\n            />\r\n            <DialogFooter>\r\n                <PrimaryButton onClick={onSaveClicked} text={OkButton()} />\r\n                <DefaultButton onClick={onCancel} text={CancelButton()} />\r\n            </DialogFooter>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { ICommandBarStyles, IStackStyles, memoizeFunction, mergeStyleSets, IButtonStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface IPageStyles {\r\n    commandBar: ICommandBarStyles;\r\n}\r\n\r\nexport const getPageStyles = (): IPageStyles => ({\r\n    commandBar: {\r\n        root: {\r\n            padding: \"5px\",\r\n        },\r\n    },\r\n});\r\n\r\nexport interface IPageClassNames {\r\n    page: string;\r\n    commandBar: string;\r\n    content: string;\r\n}\r\n\r\nexport const pageClassNames = memoizeFunction(\r\n    (): IPageClassNames => {\r\n        return mergeStyleSets({\r\n            page: {\r\n                overflow: \"auto\",\r\n            },\r\n            commandBar: {\r\n                height: \"44px\",\r\n            },\r\n            content: {\r\n                margin: \"0 10px\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import { CommandBar, ICommandBarItemProps, classNamesFunction } from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { pageClassNames, getPageStyles, IPageClassNames } from \"./Page.styles\";\r\nimport { HomeButton } from \"../../localization/DisplayStrings\";\r\nimport { navigate, Page as PageType } from \"../../pages/main/MainSlice\";\r\n\r\nexport interface IPageProps extends JSX.ElementChildrenAttribute {\r\n    commandBarItems: ICommandBarItemProps[];\r\n    hideHome?: boolean;\r\n    header: string | JSX.Element;\r\n}\r\n\r\nexport function Page({ commandBarItems, hideHome, header, children }: IPageProps): JSX.Element {\r\n    const classNames = classNamesFunction<{}, IPageClassNames>()(pageClassNames);\r\n    const styles = getPageStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const [items, setItems] = React.useState<ICommandBarItemProps[]>([]);\r\n    useEffect((): void => {\r\n        setItems([\r\n            {\r\n                key: \"Back\",\r\n                // disabled: hideHome,\r\n                ariaLabel: HomeButton(),\r\n                iconProps: {\r\n                    iconName: \"Home\",\r\n                },\r\n                onClick: () => {\r\n                    dispatch(navigate(hideHome ? PageType.Training : PageType.Main));\r\n                },\r\n            },\r\n            ...commandBarItems,\r\n        ]);\r\n    }, [commandBarItems, dispatch, hideHome]);\r\n\r\n    return (\r\n        <div className={classNames.page}>\r\n            <div className={classNames.commandBar}>\r\n                <CommandBar items={items} styles={styles.commandBar} />\r\n            </div>\r\n            <div className={classNames.content}>\r\n                {<h1>{header}</h1>}\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    ICommandBarItemProps,\r\n    classNamesFunction,\r\n    CompoundButton,\r\n    Persona,\r\n    PersonaSize,\r\n    List,\r\n    FontIcon,\r\n    PrimaryButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { mahjongOverviewClassNames, getMahjongOverviewStyles, IMahjongOverviewClassNames } from \"./MahjongOverview.styles\";\r\nimport {\r\n    EditPlayersButton,\r\n    CurrentScore,\r\n    GameScore,\r\n    MahJongHeader,\r\n    ClearButton,\r\n    ClearAllButton,\r\n    ClearGameButton,\r\n    AddButton,\r\n    SaveScoreButton,\r\n    ClearAllGamesButton,\r\n    FullGameScore,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport {\r\n    load,\r\n    selectPlayers,\r\n    selectCurrentPlayers,\r\n    setPlayers,\r\n    addUser,\r\n    deleteUser,\r\n    selectCurrentGame,\r\n    clearAll,\r\n    clearGame,\r\n    saveGame,\r\n    clearAllGames,\r\n    selectGames,\r\n    history,\r\n    IMahJongHistory,\r\n} from \"./MahjongOverviewSlice\";\r\nimport { IMahJongUser, getScore } from \"../Mahjong.model\";\r\nimport { SelectUserPanel } from \"../userPanel/SelectUserPanel\";\r\nimport { MahjongDetails } from \"../details/MahjongDetails\";\r\nimport { AddUserPanel } from \"../addUserPanel/AddUserPanel\";\r\nimport { find } from \"lodash\";\r\nimport { Page } from \"../../../components/page/Page\";\r\n\r\nexport function MahjongOverview(): JSX.Element {\r\n    const classNames = classNamesFunction<{}, IMahjongOverviewClassNames>()(mahjongOverviewClassNames);\r\n    const styles = getMahjongOverviewStyles();\r\n\r\n    const [refreshCount, setRefreshCount] = React.useState(0);\r\n    const [isPlayerAddOpen, setIsPlayerAddOpen] = React.useState(false);\r\n    const [isPlayerSelectOpen, setIsPlayerSelectOpen] = React.useState(false);\r\n    const [currentPlayer, setCurrentPlayer] = React.useState<IMahJongUser | undefined>(undefined);\r\n    const [historyGames, setHistoryGames] = React.useState<IMahJongHistory[]>([]);\r\n\r\n    const allPlayers = useSelector(selectPlayers);\r\n    const currentPlayers = useSelector(selectCurrentPlayers);\r\n    const players = useSelector(selectCurrentPlayers);\r\n    const game = useSelector(selectCurrentGame);\r\n    const games = useSelector(selectGames);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect((): void => {\r\n        const hist = history(games, currentPlayers);\r\n        setHistoryGames(hist);\r\n        setRefreshCount(refreshCount + 1);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [games, currentPlayers]);\r\n\r\n    const onSaveSelectedPlayers = (selectedPlayers: IMahJongUser[]): void => {\r\n        dispatch(setPlayers(selectedPlayers));\r\n        setIsPlayerSelectOpen(false);\r\n    };\r\n\r\n    const onAddPlayer = (player: IMahJongUser): void => {\r\n        dispatch(addUser(player));\r\n        setIsPlayerAddOpen(false);\r\n    };\r\n    const onCancel = (): void => {\r\n        setIsPlayerAddOpen(false);\r\n        setIsPlayerSelectOpen(false);\r\n    };\r\n\r\n    const onDeletePlayer = (player: IMahJongUser): void => {\r\n        dispatch(deleteUser(player));\r\n    };\r\n    const onOpenSelectedPlayers = () => setIsPlayerSelectOpen(true);\r\n    const onOpenAddPlayers = () => setIsPlayerAddOpen(true);\r\n\r\n    const onClearAll = (): void => {\r\n        dispatch(clearAll());\r\n        setRefreshCount(refreshCount + 1);\r\n    };\r\n    const onClearGame = (): void => {\r\n        dispatch(clearGame());\r\n        setRefreshCount(refreshCount + 1);\r\n    };\r\n    const onClearAllGames = (): void => {\r\n        dispatch(clearAllGames());\r\n        setRefreshCount(refreshCount + 1);\r\n    };\r\n    const onNavigateBackFromDetails = (): void => {\r\n        setCurrentPlayer(undefined);\r\n        setRefreshCount(refreshCount + 1);\r\n    };\r\n\r\n    const openPlayer = (item?: IMahJongUser) => () => {\r\n        setCurrentPlayer(item);\r\n    };\r\n\r\n    const items: ICommandBarItemProps[] = [\r\n        {\r\n            key: \"Select\",\r\n            iconProps: {\r\n                iconName: \"People\",\r\n            },\r\n            ariaLabel: EditPlayersButton(),\r\n            subMenuProps: {\r\n                items: [\r\n                    {\r\n                        key: \"add\",\r\n                        text: AddButton(),\r\n                        iconProps: { iconName: \"People\" },\r\n                        onClick: onOpenAddPlayers,\r\n                    },\r\n                    {\r\n                        key: \"SelectOrDelete\",\r\n                        text: EditPlayersButton(),\r\n                        iconProps: { iconName: \"People\" },\r\n                        onClick: onOpenSelectedPlayers,\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            key: \"save\",\r\n            text: SaveScoreButton(),\r\n            iconProps: {\r\n                iconName: \"Save\",\r\n            },\r\n            onClick: () => {\r\n                dispatch(saveGame());\r\n            },\r\n        },\r\n        {\r\n            key: \"Clear\",\r\n            iconProps: {\r\n                iconName: \"Delete\",\r\n            },\r\n            ariaLabel: ClearButton(),\r\n            subMenuProps: {\r\n                items: [\r\n                    {\r\n                        key: \"ClearAll\",\r\n                        text: ClearAllButton(),\r\n                        iconProps: { iconName: \"UserRemove\" },\r\n                        onClick: onClearAll,\r\n                        disabled: true,\r\n                    },\r\n                    {\r\n                        key: \"ClearGames\",\r\n                        text: ClearAllGamesButton(),\r\n                        iconProps: { iconName: \"RemoveFromShoppingList\" },\r\n                        onClick: onClearAllGames,\r\n                    },\r\n                    {\r\n                        key: \"ClearGame\",\r\n                        text: ClearGameButton(),\r\n                        iconProps: { iconName: \"RemoveFromShoppingList\" },\r\n                        onClick: onClearGame,\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    ];\r\n\r\n    const onRenderCell = (item?: IMahJongUser): JSX.Element | null => {\r\n        if (!item) {\r\n            return null;\r\n        }\r\n\r\n        const currentScore = getScore(game, item);\r\n        const winner = currentScore.isWinner ? (\r\n            <FontIcon iconName=\"SkypeCheck\" className={currentScore.isEast ? classNames.winnerIcon2 : classNames.winnerIcon} />\r\n        ) : null;\r\n        const east = currentScore.isEast ? <FontIcon iconName=\"CompassNW\" className={classNames.eastIcon} /> : null;\r\n\r\n        const summarizedGameScore = find(historyGames, (hist) => hist.playerId === item.id);\r\n        const scoreText = summarizedGameScore ? FullGameScore(currentScore.gameScore, summarizedGameScore.score) : GameScore(currentScore.gameScore);\r\n        return (\r\n            <CompoundButton styles={styles.listItem} onClick={openPlayer(item)}>\r\n                <Persona text={item?.name} secondaryText={CurrentScore(currentScore.points)} tertiaryText={scoreText} size={PersonaSize.size72} />\r\n                {east}\r\n                {winner}\r\n            </CompoundButton>\r\n        );\r\n    };\r\n\r\n    if (currentPlayer) {\r\n        return <MahjongDetails user={currentPlayer} onNavigateBack={onNavigateBackFromDetails} />;\r\n    }\r\n\r\n    return (\r\n        <Page commandBarItems={items} header={MahJongHeader()}>\r\n            <AddUserPanel isOpen={isPlayerAddOpen} onAdd={onAddPlayer} onCancel={onCancel} allPlayers={allPlayers} />\r\n            <SelectUserPanel\r\n                isOpen={isPlayerSelectOpen}\r\n                onSave={onSaveSelectedPlayers}\r\n                onDelete={onDeletePlayer}\r\n                allPlayers={allPlayers}\r\n                currentPlayers={currentPlayers}\r\n            />\r\n            <List className={classNames.list} version={refreshCount} items={players} onRenderCell={onRenderCell} />\r\n            {players?.length < 4 && (\r\n                <PrimaryButton styles={styles.footerButton} onClick={onOpenAddPlayers}>\r\n                    {EditPlayersButton()}\r\n                </PrimaryButton>\r\n            )}\r\n        </Page>\r\n    );\r\n}\r\n","import { ICommandBarStyles, IStackStyles, memoizeFunction, mergeStyleSets, IButtonStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface IPlaygroundOverviewStyles {\r\n    commandBar: ICommandBarStyles;\r\n    dashboard: IStackStyles;\r\n    listItem: Partial<IButtonStyles>;\r\n    footerButton: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getPlaygroundOverviewStyles = (): IPlaygroundOverviewStyles => ({\r\n    commandBar: {\r\n        root: {\r\n            padding: \"5px\",\r\n        },\r\n    },\r\n    dashboard: {\r\n        root: { padding: \"24px 0 0 0\" },\r\n    },\r\n    listItem: {\r\n        root: {\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            padding: \"20px 10px 20px 20px\",\r\n            margin: \"10px 0\",\r\n        },\r\n        flexContainer: {\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    },\r\n    footerButton: {\r\n        root: {\r\n            marginTop: 30,\r\n            float: \"right\",\r\n            marginRight: 30,\r\n        },\r\n    },\r\n});\r\n\r\nexport interface IPlaygroundOverviewClassNames {\r\n    page: string;\r\n    list: string;\r\n    header: string;\r\n    winnerIcon: string;\r\n    winnerIcon2: string;\r\n    eastIcon: string;\r\n}\r\n\r\nexport const playgroundOverviewClassNames = memoizeFunction(\r\n    (): IPlaygroundOverviewClassNames => {\r\n        return mergeStyleSets({\r\n            page: {\r\n                overflow: \"auto\",\r\n                margin: \"0 10px\",\r\n            },\r\n            list: {\r\n                margin: \"0 10px\",\r\n            },\r\n            header: {\r\n                marginLeft: \"10px\",\r\n                marginRight: \"10px\",\r\n            },\r\n            winnerIcon: {\r\n                fontSize: 20,\r\n                height: 20,\r\n                width: 20,\r\n                marginRight: \"10px\",\r\n                marginLeft: \"auto\",\r\n                color: \"green\",\r\n            },\r\n            winnerIcon2: {\r\n                fontSize: 20,\r\n                height: 20,\r\n                width: 20,\r\n                marginRight: \"10px\",\r\n                marginLeft: \"0px\",\r\n                color: \"green\",\r\n            },\r\n            eastIcon: {\r\n                fontSize: 20,\r\n                height: 20,\r\n                width: 20,\r\n                marginRight: \"10px\",\r\n                marginLeft: \"auto\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import {\r\n    CommandBar,\r\n    ICommandBarItemProps,\r\n    classNamesFunction,\r\n    CompoundButton,\r\n    Persona,\r\n    PersonaSize,\r\n    List,\r\n    FontIcon,\r\n    PrimaryButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { playgroundOverviewClassNames, IPlaygroundOverviewClassNames, getPlaygroundOverviewStyles } from \"./PlaygroundOverview.styles\";\r\nimport { map } from \"lodash\";\r\nimport { Page } from \"../../../components/page/Page\";\r\n\r\nexport function PlaygroundOverview(): JSX.Element {\r\n    const classNames = classNamesFunction<{}, IPlaygroundOverviewClassNames>()(playgroundOverviewClassNames);\r\n    const styles = getPlaygroundOverviewStyles();\r\n\r\n    const [refreshCount, setRefreshCount] = React.useState(0);\r\n\r\n    // const openPlayer = (item?: IPlaygroundUser) => () => {\r\n    //   setCurrentPlayer(item);\r\n    // };\r\n\r\n    const items: ICommandBarItemProps[] = [];\r\n    return (\r\n        <Page commandBarItems={items} header={\"\"}>\r\n            <div></div>\r\n        </Page>\r\n    );\r\n}\r\n","import { ICommandBarStyles, IStackStyles, memoizeFunction, mergeStyleSets, IButtonStyles } from \"office-ui-fabric-react\";\r\n\r\nexport interface ITrainingOverviewStyles {\r\n    dashboard: IStackStyles;\r\n    listItem: Partial<IButtonStyles>;\r\n    footerButton: Partial<IButtonStyles>;\r\n    listButton: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getTrainingOverviewStyles = (): ITrainingOverviewStyles => ({\r\n    dashboard: {\r\n        root: { padding: \"24px 0 0 0\" },\r\n    },\r\n    listItem: {\r\n        root: {\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            padding: \"20px 10px 20px 20px\",\r\n            margin: \"10px 0\",\r\n        },\r\n        flexContainer: {\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    },\r\n    footerButton: {\r\n        root: {\r\n            marginTop: 30,\r\n            float: \"right\",\r\n            marginRight: 30,\r\n        },\r\n    },\r\n    listButton: {\r\n        root: {\r\n            marginLeft: \"auto\",\r\n        },\r\n    },\r\n});\r\n\r\nexport interface ITrainingOverviewClassNames {\r\n    list: string;\r\n    listItem: string;\r\n    listText: string;\r\n}\r\n\r\nexport const trainingOverviewClassNames = memoizeFunction(\r\n    (): ITrainingOverviewClassNames => {\r\n        return mergeStyleSets({\r\n            list: {\r\n                margin: \"0 10px\",\r\n            },\r\n            listItem: {\r\n                display: \"flex\",\r\n            },\r\n            listText: {\r\n                margin: \"6px\",\r\n            },\r\n        });\r\n    }\r\n);\r\n","import {\r\n    ICommandBarItemProps,\r\n    classNamesFunction,\r\n    List,\r\n    IContextualMenuItem,\r\n    Toggle,\r\n    IconButton,\r\n    Callout,\r\n    FocusTrapZone,\r\n    Calendar,\r\n    DayOfWeek,\r\n    ContextualMenuItemType,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { trainingOverviewClassNames, ITrainingOverviewClassNames, getTrainingOverviewStyles } from \"./TrainingOverview.styles\";\r\nimport {\r\n    TrainingHeader,\r\n    TrainingAverage,\r\n    TrainingMissing,\r\n    TrainingMissingAverage,\r\n    TrainingCount,\r\n    TrainingAddMenuButton,\r\n    TrainingAddButton,\r\n    OnToggle,\r\n    OffToggle,\r\n    TrainingShowAllLabel,\r\n    TrainingListHeader,\r\n    TrainingDetails,\r\n    DeleteButton,\r\n    TrainingDateButton,\r\n    DayPickerStrings,\r\n    TrainingHeaderWithDate,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport {\r\n    selectPushups,\r\n    fromMonth,\r\n    calcAverage,\r\n    calcMissing,\r\n    calcMissingAverage,\r\n    calcTotal,\r\n    addPushups,\r\n    removePushups,\r\n    ITrainingSummary,\r\n    mapSummary,\r\n    combineSummary,\r\n} from \"./TrainingOverviewSlice\";\r\nimport { Page } from \"../../../components/page/Page\";\r\nimport { dateToString, dateToShortString, dateToMonthString } from \"../../../utils/LocalizationUtil\";\r\n\r\nexport function TrainingOverview(): JSX.Element {\r\n    const classNames = classNamesFunction<{}, ITrainingOverviewClassNames>()(trainingOverviewClassNames);\r\n    const styles = getTrainingOverviewStyles();\r\n\r\n    const [refreshCount, setRefreshCount] = React.useState(0);\r\n    const [total, setTotal] = React.useState(0);\r\n    const [average, setAverage] = React.useState(0);\r\n    const [missing, setMissing] = React.useState(0);\r\n    const [missingAverage, setMissingAverage] = React.useState(0);\r\n    const [showAll, setShowAll] = React.useState(false);\r\n    const [currentDate, setCurrentDate] = React.useState(new Date());\r\n    const [showDate, setShowDate] = React.useState(false);\r\n    const [showCalendar, setShowCalendar] = React.useState(false);\r\n    const [sortedPushups, setSortedPushups] = React.useState<ITrainingSummary[]>([]);\r\n\r\n    const pushUps = useSelector(selectPushups);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect((): void => {\r\n        const date = new Date();\r\n        const fromThisMonth = fromMonth(pushUps, date);\r\n        setTotal(calcTotal(fromThisMonth));\r\n        setAverage(calcAverage(fromThisMonth, date));\r\n        setMissing(calcMissing(fromThisMonth));\r\n        setMissingAverage(calcMissingAverage(fromThisMonth, date));\r\n        setSortedPushups(showAll ? mapSummary(pushUps) : combineSummary(pushUps));\r\n    }, [pushUps, showAll]);\r\n\r\n    const onShowAll = (event: React.MouseEvent<HTMLElement>, checked?: boolean) => {\r\n        setRefreshCount(refreshCount + 1);\r\n        setShowAll(!!checked);\r\n    };\r\n    const addItem = (count: number): IContextualMenuItem => {\r\n        return {\r\n            key: \"add\" + count,\r\n            text: TrainingAddButton(count.toString()),\r\n            secondaryText: dateToString(currentDate),\r\n            onClick: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, item?: IContextualMenuItem) => {\r\n                dispatch(addPushups({ count, date: currentDate.toString() }));\r\n            },\r\n        };\r\n    };\r\n\r\n    const onSelectDate = (date: Date): void => {\r\n        setShowCalendar(false);\r\n        setShowDate(true);\r\n        setCurrentDate(date);\r\n    };\r\n\r\n    const items: ICommandBarItemProps[] = [\r\n        {\r\n            key: \"Add\",\r\n            text: TrainingAddMenuButton(),\r\n            iconProps: {\r\n                iconName: \"ReportAdd\",\r\n            },\r\n            ariaLabel: TrainingAddMenuButton(),\r\n            subMenuProps: {\r\n                items: [\r\n                    {\r\n                        itemType: ContextualMenuItemType.Header,\r\n                        key: \"addTitle\",\r\n                        text: dateToString(currentDate),\r\n                    },\r\n                    addItem(20),\r\n                    addItem(25),\r\n                    addItem(30),\r\n                    addItem(35),\r\n                    addItem(40),\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            key: \"Date\",\r\n            text: TrainingDateButton(),\r\n            iconProps: {\r\n                iconName: \"EventDate\",\r\n            },\r\n            ariaLabel: TrainingDateButton(),\r\n            onClick: () => {\r\n                setShowCalendar(true);\r\n            },\r\n        },\r\n    ];\r\n\r\n    const removeClicked = (item: ITrainingSummary) => {\r\n        if (item.data) {\r\n            dispatch(removePushups(item.data));\r\n        }\r\n    };\r\n    const onRenderCell = (item?: ITrainingSummary): JSX.Element | null => {\r\n        if (!item) {\r\n            return null;\r\n        }\r\n\r\n        if (item.isSummary) {\r\n            return (\r\n                <div className={classNames.listItem}>\r\n                    <p className={classNames.listText}>{TrainingDetails(item.count.toString(), dateToMonthString(item.date))}</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={classNames.listItem}>\r\n                <p className={classNames.listText}>{TrainingDetails(item.count.toString(), dateToString(item.date))}</p>\r\n                <IconButton\r\n                    iconProps={{ iconName: \"Delete\" }}\r\n                    title={DeleteButton()}\r\n                    ariaLabel={DeleteButton()}\r\n                    onClick={() => {\r\n                        removeClicked(item);\r\n                    }}\r\n                    styles={styles.listButton}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const header = showDate ? TrainingHeaderWithDate(dateToShortString(currentDate)) : TrainingHeader();\r\n    return (\r\n        <Page commandBarItems={items} header={header}>\r\n            <p>{TrainingCount(total.toFixed(0))}</p>\r\n            <p>{TrainingAverage(average.toFixed(0))}</p>\r\n            <p>{TrainingMissing(missing.toFixed(0))}</p>\r\n            <p>{TrainingMissingAverage(missingAverage.toFixed(0))}</p>\r\n            <h2>{TrainingListHeader()}</h2>\r\n            <Toggle label={TrainingShowAllLabel()} checked={showAll} inlineLabel onText={OnToggle()} offText={OffToggle()} onChange={onShowAll} />\r\n            <List className={classNames.list} version={refreshCount} items={sortedPushups} onRenderCell={onRenderCell} />\r\n            {showCalendar && (\r\n                <Callout\r\n                    isBeakVisible={false}\r\n                    className=\"ms-DatePicker-callout\"\r\n                    gapSpace={0}\r\n                    doNotLayer={false}\r\n                    onDismiss={() => {\r\n                        setShowCalendar(false);\r\n                    }}\r\n                    setInitialFocus\r\n                >\r\n                    <FocusTrapZone firstFocusableSelector=\"ms-DatePicker-day--today\" isClickableOutsideFocusTrap>\r\n                        <Calendar\r\n                            onSelectDate={onSelectDate}\r\n                            onDismiss={() => {\r\n                                setShowCalendar(false);\r\n                            }}\r\n                            isMonthPickerVisible={false}\r\n                            value={currentDate!}\r\n                            firstDayOfWeek={DayOfWeek.Monday}\r\n                            strings={DayPickerStrings()}\r\n                            isDayPickerVisible={true}\r\n                            highlightCurrentMonth={true}\r\n                            highlightSelectedMonth={true}\r\n                            showMonthPickerAsOverlay={false}\r\n                            showGoToToday={true}\r\n                        />\r\n                    </FocusTrapZone>\r\n                </Callout>\r\n            )}\r\n        </Page>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { navigate, selectPage, Page as PageType, load, setLanguage } from \"./MainSlice\";\r\nimport { Nav, ICommandBarItemProps } from \"office-ui-fabric-react\";\r\nimport { HomeTitle, MahJongTitle, TrainingTitle, PlaygroundTitle } from \"../../localization/DisplayStrings\";\r\nimport { Page } from \"../../components/page/Page\";\r\n\r\nexport function MainContent() {\r\n    const [refreshCount, setRefreshCount] = React.useState(0);\r\n    const dispatch = useDispatch();\r\n    const items: ICommandBarItemProps[] = [\r\n        {\r\n            key: \"Language\",\r\n            iconProps: {\r\n                iconName: \"Globe\",\r\n            },\r\n            subMenuProps: {\r\n                items: [\r\n                    {\r\n                        key: \"da\",\r\n                        text: \"Dansk\",\r\n                        onClick: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\r\n                            dispatch(setLanguage(\"da\"));\r\n                            setRefreshCount(refreshCount + 1);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: \"en\",\r\n                        text: \"English\",\r\n                        onClick: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\r\n                            dispatch(setLanguage(\"en\"));\r\n                            setRefreshCount(refreshCount + 1);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: \"ru\",\r\n                        text: \"Русский\",\r\n                        onClick: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\r\n                            dispatch(setLanguage(\"ru\"));\r\n                            setRefreshCount(refreshCount + 1);\r\n                        },\r\n                    },\r\n                    {\r\n                        key: \"zh\",\r\n                        text: \"中文(繁體)\",\r\n                        onClick: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\r\n                            dispatch(setLanguage(\"zh\"));\r\n                            setRefreshCount(refreshCount + 1);\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Page commandBarItems={items} header={HomeTitle()}>\r\n            <Nav\r\n                selectedKey=\"key0\"\r\n                groups={[\r\n                    {\r\n                        links: [\r\n                            {\r\n                                name: MahJongTitle(),\r\n                                url: \"\",\r\n                                key: \"key0\",\r\n                                target: \"_blank\",\r\n                                onClick: () => {\r\n                                    dispatch(navigate(PageType.MahJong));\r\n                                },\r\n                            },\r\n                            {\r\n                                name: TrainingTitle(),\r\n                                url: \"\",\r\n                                key: \"key1\",\r\n                                target: \"_blank\",\r\n                                onClick: () => {\r\n                                    dispatch(navigate(PageType.Training));\r\n                                },\r\n                            },\r\n                            {\r\n                                name: PlaygroundTitle(),\r\n                                url: \"\",\r\n                                key: \"key2\",\r\n                                target: \"_blank\",\r\n                                onClick: () => {\r\n                                    dispatch(navigate(PageType.Playground));\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                ]}\r\n            />\r\n        </Page>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectPage, Page as PageType, load, selectLanguage } from \"./MainSlice\";\r\nimport { load as loadMahjong } from \"../mahjong/overview/MahjongOverviewSlice\";\r\nimport { load as loadTraining } from \"../training/overview/TrainingOverviewSlice\";\r\nimport { load as loadPlayground } from \"../playground/overview/PlaygroundOverviewSlice\";\r\nimport { MahjongOverview } from \"../mahjong/overview/MahjongOverview\";\r\nimport { PlaygroundOverview } from \"../playground/overview/PlaygroundOverview\";\r\nimport { TrainingOverview } from \"../training/overview/TrainingOverview\";\r\nimport { MainContent } from \"./MainContent\";\r\n\r\nexport function MainPage() {\r\n    const page = useSelector(selectPage);\r\n    const language = useSelector(selectLanguage);\r\n    const dispatch = useDispatch();\r\n    useEffect((): void => {\r\n        dispatch(load());\r\n        dispatch(loadMahjong());\r\n        dispatch(loadTraining());\r\n        dispatch(loadPlayground());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            {page === PageType.Main && <MainContent />}\r\n            {page === PageType.MahJong && <MahjongOverview />}\r\n            {page === PageType.Training && <TrainingOverview />}\r\n            {page === PageType.Playground && <PlaygroundOverview />}\r\n        </div>\r\n    );\r\n}\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport mainReducer from \"../pages/main/MainSlice\";\r\nimport overviewReducer from \"../pages/mahjong/overview/MahjongOverviewSlice\";\r\nimport trainingReducer from \"../pages/training/overview/TrainingOverviewSlice\";\r\nimport playgroundReducer from \"../pages/playground/overview/PlaygroundOverviewSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    main: mainReducer,\r\n    mahjongOverview: overviewReducer,\r\n    training: trainingReducer,\r\n    playground: playgroundReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React, { useEffect } from \"react\";\r\nimport { MainPage } from \"./pages/main/Main\";\r\nimport { initializeIcons, loadTheme } from \"office-ui-fabric-react\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ThemeProvider } from \"office-ui-fabric-react/lib/Foundation\";\r\n\r\nconst myTheme = loadTheme({\r\n    palette: {\r\n        themePrimary: \"#2266e3\",\r\n        themeLighterAlt: \"#f5f8fe\",\r\n        themeLighter: \"#d8e4fb\",\r\n        themeLight: \"#b8cef7\",\r\n        themeTertiary: \"#759fee\",\r\n        themeSecondary: \"#3a76e6\",\r\n        themeDarkAlt: \"#1f5bcc\",\r\n        themeDark: \"#1a4dac\",\r\n        themeDarker: \"#13397f\",\r\n        neutralLighterAlt: \"#faf9f8\",\r\n        neutralLighter: \"#f3f2f1\",\r\n        neutralLight: \"#edebe9\",\r\n        neutralQuaternaryAlt: \"#e1dfdd\",\r\n        neutralQuaternary: \"#d0d0d0\",\r\n        neutralTertiaryAlt: \"#c8c6c4\",\r\n        neutralTertiary: \"#a19f9d\",\r\n        neutralSecondary: \"#605e5c\",\r\n        neutralPrimaryAlt: \"#3b3a39\",\r\n        neutralPrimary: \"#323130\",\r\n        neutralDark: \"#201f1e\",\r\n        black: \"#000000\",\r\n        white: \"#ffffff\",\r\n    },\r\n});\r\n\r\nconst App = (): JSX.Element => {\r\n    useEffect(() => {\r\n        initializeIcons();\r\n        // initializeTheme();\r\n    });\r\n\r\n    return (\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <ThemeProvider theme={myTheme}>\r\n                    <MainPage />\r\n                </ThemeProvider>\r\n            </Provider>\r\n        </React.StrictMode>\r\n    );\r\n};\r\n\r\n// function initializeTheme(): void {\r\n//   if (!environment.production && !window[GlobalObjects.theme]) {\r\n//       window[GlobalObjects.theme] = myTheme;\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/MahjongGreenDragon.ae5a6502.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongEast.7287d189.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongBamboo6.93503ad1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongBambooChow.b2d6588f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCircle5.5776cb62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCircleChow.cc8debbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCharacter4.711aa9d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongCharacterChow.79f76632.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason1.2d153ff1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason2.ce673dd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason3.d676d4a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongSeason4.81b5c8aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MahjongFlower2.9efa08e5.jpg\";"],"sourceRoot":""}