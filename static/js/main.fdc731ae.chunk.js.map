{"version":3,"sources":["pages/main/MainSlice.ts","utils/LocalizationUtil.ts","localization/DisplayStrings.ts","pages/mahjong/overview/MahjongOverview.styles.ts","pages/mahjong/Mahjong.model.ts","utils/StorageUtil.ts","pages/mahjong/overview/MahjongOverviewSlice.ts","pages/mahjong/userPanel/SelectUserPanel.styles.ts","pages/mahjong/userPanel/SelectUserPanel.tsx","pages/mahjong/details/MahjongDetails.styles.ts","pages/mahjong/details/MahjongDetails.tsx","pages/mahjong/overview/MahjongOverview.tsx","pages/main/Main.tsx","features/counter/counterSlice.ts","app/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Page","initialState","page","MahJong","mainSlice","createSlice","name","reducers","navigate","state","action","payload","actions","selectPage","main","locale","t","loc","AddButton","da","us","EditPlayersButton","DeleteButton","GameScore","points","mahjongOverviewClassNames","memoizeFunction","mergeStyleSets","overflow","list","margin","createUser","id","uuid","createGame","score","createScore","playerId","calculatedPoints","getScore","game","player","find","getScoreById","updateCalculatedScore","length","winner","isWinner","maxBy","getWinner","winnerPoints","isEast","sumBy","forEach","scoreToCalculate","difference","saveData","data","isSupported","localStorage","setItem","JSON","stringify","e","itemBackup","getItem","removeItem","players","games","isPlaying","currentPlayers","currentGame","overviewSlice","loadFailed","loadSuccess","setUsers","updateGameUsers","addUser","push","deleteUser","filter","user","newGame","updateScore","newScore","found","without","updateGameScore","cancelGame","saveGame","uniqBy","map","index","load","dispatch","parse","loadData","selectPlayers","mahjongOverview","selectCurrentGame","selectCurrentPlayers","selectUserPanelClassNames","wrapper","display","alignItems","SelectUserPanel","props","classNames","classNamesFunction","styles","footer","root","combobox","firstRoot","flexGrow","flexShrink","firstContainer","container","isOpen","onSave","onDelete","onAdd","allPlayers","React","useState","selectedPlayers","setSelectedPlayers","newPlayerName","setNewPlayerName","userToDelete","setUserToDelete","useEffect","selected","i","onSaveClicked","isEmpty","options","key","text","filteredOptions","filtered","option","allComboboxes","ComboBox","aria-label","selectedKey","autoComplete","onChange","selectedIndex","event","renderComboBox","onNameChange","newValue","onAddName","onDeleteUserChange","onDeleteUserClicked","Panel","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","isFooterAtBottom","className","TextField","label","value","IconButton","iconProps","iconName","title","ariaLabel","disabled","mahjongDetailsClassNames","MahjongDetails","useMemo","commandBar","padding","dashboard","undefined","onNavigateBack","useSelector","userScore","setUserScore","useDispatch","items","CommandBar","MahjongOverview","listItem","maxWidth","width","flexContainer","justifyContent","isPlayerSelectOpen","setIsPlayerSelectOpen","currentPlayer","setCurrentPlayer","openPlayer","item","Main","List","onRenderCell","CompoundButton","Persona","secondaryText","tertiaryText","optionalText","size","PersonaSize","size72","MainPage","Nav","groups","links","url","target","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","mainReducer","overviewReducer","myTheme","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","App","initializeIcons","StrictMode","ThemeProvider","theme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fdc731ae.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\n\r\nexport enum Page {\r\n  Main,\r\n  MahJong,\r\n}\r\n\r\ninterface MainState {\r\n  page: Page;\r\n}\r\n\r\nconst initialState: MainState = {\r\n  page: Page.MahJong,\r\n};\r\n\r\nexport const mainSlice = createSlice({\r\n  name: \"main\",\r\n  initialState,\r\n  reducers: {\r\n    navigate: (state, action: PayloadAction<Page>) => {\r\n      state.page = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { navigate } = mainSlice.actions;\r\n\r\nexport const selectPage = (state: RootState) => state.main.page;\r\n\r\nexport default mainSlice.reducer;\r\n","type supportedLocale = 'da' | 'us';\r\n\r\nlet locale: supportedLocale = 'da';\r\nexport function setLocale(value: supportedLocale) {\r\n    locale = value;\r\n}\r\n\r\n// export function getLocale(): supportedLocale {\r\n//     return locale;\r\n// }\r\n\r\nexport const t = (loc: { [key: string]: string }) => {\r\n    if (loc && loc[locale]) {\r\n        return loc[locale];\r\n    }\r\n\r\n    return loc['da'] || loc['us'] || '';\r\n};\r\n","import { t } from \"../utils/LocalizationUtil\";\r\n\r\nexport const MahJongTitle = () => t({ da: \"MahJong\" });\r\nexport const HomeButton = () => t({ da: \"Hjem\", us: \"Home\" });\r\nexport const CloseButton = () => t({ da: \"Luk\", us: \"Close\" });\r\nexport const CancelButton = () => t({ da: \"Afbryd\", us: \"Cancel\" });\r\nexport const BackButton = () => t({ da: \"Tilbage\", us: \"Back\" });\r\nexport const SaveButton = () => t({ da: \"Gem\", us: \"Save\" });\r\nexport const OkButton = () => t({ da: \"Ok\" });\r\nexport const AddButton = () => t({ da: \"Tilføj\", us: \"Add\" });\r\nexport const EditPlayersButton = () =>\r\n  t({ da: \"Vælg spillere\", us: \"Choose players\" });\r\nexport const EditPlayersTitle = () =>\r\n  t({ da: \"Vælg spillere\", us: \"Choose players\" });\r\nexport const EditButton = () => t({ da: \"Ændre spiller\", us: \"Change player\" });\r\nexport const DeleteButton = () =>\r\n  t({ da: \"Slet spiller\", us: \"Delete player\" });\r\nexport const AddPlayerLabel = () => {\r\n  return t({ da: \"Tilføj ny spiller\", us: \"Add new player\" });\r\n};\r\nexport const DeletePlayerLabel = () => {\r\n  return t({ da: \"Slet spiller\", us: \"Delete player\" });\r\n};\r\nexport const CurrentScore = (points: number) =>\r\n  t({ da: `Score: ${points}`, us: `Score: ${points}` });\r\nexport const GameScore = (points: number) =>\r\n  t({ da: `Samlet score: ${points}`, us: `Total score: ${points}` });\r\n","import {\r\n  ICommandBarStyles,\r\n  IStackStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IButtonStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongOverviewStyles {\r\n  commandBar: ICommandBarStyles;\r\n  dashboard: IStackStyles;\r\n  listItem: Partial<IButtonStyles>;\r\n}\r\n\r\nexport const getMahjongOverviewStyles = (): IMahjongOverviewStyles => ({\r\n  commandBar: {\r\n    root: {\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n  dashboard: {\r\n    root: { padding: \"24px 0 0 0\" },\r\n  },\r\n  listItem: {\r\n    root: {\r\n      maxWidth: \"100%\",\r\n      width: \"100%\",\r\n      padding: \"20px 10px 20px 20px\",\r\n      margin: \"10px 0\",\r\n    },\r\n    flexContainer: {\r\n      justifyContent: \"flex-start\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface IMahjongOverviewClassNames {\r\n  page: string;\r\n  list: string;\r\n}\r\n\r\nexport const mahjongOverviewClassNames = memoizeFunction(\r\n  (): IMahjongOverviewClassNames => {\r\n    return mergeStyleSets({\r\n      page: {\r\n        overflow: \"auto\",\r\n      },\r\n      list: {\r\n        margin: \"0 10px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import uuid from \"uuid/v4\";\r\nimport { find, isEmpty, reduce, sumBy, forEach, maxBy } from \"lodash\";\r\n\r\nexport interface IMahJongUser {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IMahJongScore {\r\n  calculatedPoints: number;\r\n  points: number;\r\n  isEast?: boolean;\r\n  isWinner?: boolean;\r\n  playerId: string;\r\n}\r\n\r\nexport interface IMahJongGame {\r\n  id: string;\r\n  score: IMahJongScore[];\r\n}\r\n\r\nexport function createUser(name: string): IMahJongUser {\r\n  return { id: uuid(), name };\r\n}\r\n\r\nexport function createGame(): IMahJongGame {\r\n  return { id: uuid(), score: [] };\r\n}\r\n\r\nexport function createScore(playerId: string): IMahJongScore {\r\n  return {\r\n    calculatedPoints: 0,\r\n    points: 0,\r\n    playerId,\r\n  };\r\n}\r\n\r\nexport function getScore(\r\n  game: IMahJongGame,\r\n  player: IMahJongUser\r\n): IMahJongScore {\r\n  return getScoreById(game, player.id) || createScore(player.id);\r\n}\r\n\r\nfunction getScoreById(\r\n  game: IMahJongGame,\r\n  id?: string\r\n): IMahJongScore | undefined {\r\n  return find(\r\n    game.score,\r\n    (score: IMahJongScore): boolean => score.playerId === id\r\n  );\r\n}\r\n\r\nfunction getWinner(game: IMahJongGame): IMahJongScore | undefined {\r\n  const winner = find(\r\n    game.score,\r\n    (score: IMahJongScore): boolean => !!score.isWinner\r\n  );\r\n\r\n  if (winner) {\r\n    return winner;\r\n  }\r\n\r\n  return maxBy(game.score, (score: IMahJongScore): number => score.points);\r\n}\r\n\r\nexport function updateCalculatedScore(game: IMahJongGame): void {\r\n  if (!game?.score || game.score.length <= 1) {\r\n    return; // Nothing to update\r\n  }\r\n\r\n  const winner = getWinner(game);\r\n  if (!winner) {\r\n    return; // What?\r\n  }\r\n\r\n  const winnerPoints = winner.isEast ? winner.points * 2 : winner.points;\r\n  winner.calculatedPoints = sumBy(\r\n    game.score,\r\n    (score: IMahJongScore): number => {\r\n      if (score.playerId === winner.playerId) {\r\n        return 0; // Skip winner\r\n      }\r\n      return score.isEast ? winnerPoints * 2 : winnerPoints;\r\n    }\r\n  );\r\n  forEach(game.score, (scoreToCalculate: IMahJongScore): void => {\r\n    if (scoreToCalculate.playerId === winner.playerId) {\r\n      return; // Winner already calculated\r\n    }\r\n\r\n    scoreToCalculate.calculatedPoints = sumBy(\r\n      game.score,\r\n      (score: IMahJongScore): number => {\r\n        if (score.playerId === winner.playerId) {\r\n          return 0; // Skip winner\r\n        }\r\n        const difference = scoreToCalculate.points - score.points;\r\n        return score.isEast || scoreToCalculate.isEast\r\n          ? difference * 2\r\n          : difference;\r\n      }\r\n    );\r\n  });\r\n}\r\n","const storageName = 'Main';\r\n\r\nexport const loadData = () => {\r\n    if (isSupported) {\r\n        try {\r\n            return JSON.parse(localStorage.getItem(storageName) || '');\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport const saveData = (data: any): boolean => {\r\n    if (isSupported) {\r\n        try {\r\n            localStorage.setItem(storageName, JSON.stringify(data));\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport const isSupported = (() => {\r\n    try {\r\n        let itemBackup = localStorage.getItem('');\r\n        localStorage.removeItem('');\r\n        localStorage.setItem('', itemBackup || '');\r\n        if (itemBackup === null)\r\n            localStorage.removeItem('');\r\n        else\r\n            localStorage.setItem('', itemBackup);\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n})();\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../../app/store\";\r\nimport {\r\n  IMahJongUser,\r\n  IMahJongGame,\r\n  createGame,\r\n  createScore,\r\n  IMahJongScore,\r\n  updateCalculatedScore,\r\n} from \"../Mahjong.model\";\r\nimport { isSupported, loadData, saveData } from \"../../../utils/StorageUtil\";\r\nimport { map, find, uniqBy, filter, without, forEach } from \"lodash\";\r\n\r\ninterface MahjongOverviewState {\r\n  players: IMahJongUser[];\r\n  games: IMahJongGame[];\r\n  isPlaying: boolean;\r\n  currentPlayers: IMahJongUser[];\r\n  currentGame: IMahJongGame;\r\n}\r\n\r\nconst initialState: MahjongOverviewState = {\r\n  players: [],\r\n  games: [],\r\n  isPlaying: false,\r\n  currentPlayers: [],\r\n  currentGame: createGame(),\r\n};\r\n\r\nexport const overviewSlice = createSlice({\r\n  name: \"mahjongOverview\",\r\n  initialState,\r\n  reducers: {\r\n    loadFailed: (state) => {\r\n      state = initialState;\r\n    },\r\n    loadSuccess: (state, action: PayloadAction<MahjongOverviewState>) => {\r\n      state.players = action.payload?.players || initialState.players;\r\n      state.games = action.payload?.games || initialState.games;\r\n      state.isPlaying = action.payload?.isPlaying || initialState.isPlaying;\r\n      state.currentPlayers =\r\n        action.payload?.currentPlayers || initialState.currentPlayers;\r\n      state.currentGame =\r\n        action.payload?.currentGame || initialState.currentGame;\r\n    },\r\n    setUsers: (state, action: PayloadAction<IMahJongUser[]>) => {\r\n      if (!state.isPlaying) {\r\n        state.currentPlayers = action.payload;\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    addUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      if (!state.isPlaying && state.players) {\r\n        state.players.push(action.payload);\r\n        if (state.currentPlayers.length < 4) {\r\n          state.currentPlayers.push(action.payload);\r\n        }\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    deleteUser: (state, action: PayloadAction<IMahJongUser>) => {\r\n      if (!state.isPlaying && state.players) {\r\n        state.players = filter(\r\n          state.players,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        state.currentPlayers = filter(\r\n          state.currentPlayers,\r\n          (user: IMahJongUser): boolean => user.id !== action.payload.id\r\n        );\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    newGame: (state) => {\r\n      if (!state.isPlaying && state.currentPlayers.length > 0) {\r\n        state.isPlaying = true;\r\n        updateGameUsers(state);\r\n      }\r\n    },\r\n    updateScore: (state, action: PayloadAction<IMahJongScore>) => {\r\n      updateGameScore(state, action.payload);\r\n    },\r\n    cancelGame: (state) => {\r\n      if (state.isPlaying) {\r\n        state.isPlaying = false;\r\n        state.currentGame = createGame();\r\n      }\r\n    },\r\n    saveGame: (state) => {\r\n      if (state.isPlaying) {\r\n        state.games = [...state.games, state.currentGame];\r\n        state.currentGame = createGame();\r\n        state.isPlaying = false;\r\n        saveData(state);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nfunction updateGameUsers(state: MahjongOverviewState) {\r\n  state.currentPlayers = uniqBy(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser): string => user.id\r\n  );\r\n  state.currentGame.score = map(\r\n    state.currentPlayers,\r\n    (user: IMahJongUser, index: number): IMahJongScore => {\r\n      const found = find(\r\n        state.currentGame.score,\r\n        (score: IMahJongScore): boolean => score.playerId === user.id\r\n      );\r\n      return found || createScore(user.id);\r\n    }\r\n  );\r\n  saveData(state);\r\n}\r\n\r\nfunction updateGameScore(state: MahjongOverviewState, newScore: IMahJongScore) {\r\n  const found = find(\r\n    state.currentGame?.score,\r\n    (score: IMahJongScore): boolean => score.playerId === newScore?.playerId\r\n  );\r\n  if (found) {\r\n    state.currentGame.score = [\r\n      ...without<IMahJongScore>(state.currentGame.score, found),\r\n      newScore,\r\n    ];\r\n    forEach(state.currentGame.score, (score: IMahJongScore) => {\r\n      if (newScore.isWinner) {\r\n        score.isWinner = false;\r\n      }\r\n      if (newScore.isEast) {\r\n        score.isEast = false;\r\n      }\r\n    });\r\n    updateCalculatedScore(state.currentGame);\r\n    saveData(state);\r\n  }\r\n}\r\n\r\nconst { loadFailed, loadSuccess } = overviewSlice.actions;\r\nexport const {\r\n  setUsers,\r\n  addUser,\r\n  deleteUser,\r\n  newGame,\r\n  updateScore,\r\n  cancelGame,\r\n  saveGame,\r\n} = overviewSlice.actions;\r\n\r\nexport const load = (): AppThunk => (dispatch) => {\r\n  if (isSupported) {\r\n    dispatch(loadSuccess(loadData() as MahjongOverviewState));\r\n  } else {\r\n    dispatch(loadFailed());\r\n  }\r\n};\r\n\r\nexport const selectPlayers = (state: RootState) =>\r\n  state.mahjongOverview.players || [];\r\nexport const selectGames = (state: RootState) =>\r\n  state.mahjongOverview.games || [];\r\nexport const selectCurrentGame = (state: RootState) =>\r\n  state.mahjongOverview.currentGame || [];\r\nexport const selectCurrentPlayers = (state: RootState) =>\r\n  state.mahjongOverview.currentPlayers || [];\r\nexport const selectIsPlaying = (state: RootState) =>\r\n  state.mahjongOverview.isPlaying;\r\n\r\nexport default overviewSlice.reducer;\r\n","import {\r\n  IButtonStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n  IComboBoxStyles,\r\n  ITextFieldStyles,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface ISelectUserPanelStyles {\r\n  combobox: Partial<IComboBoxStyles>;\r\n  footer: Partial<IButtonStyles>;\r\n  firstRoot: Partial<ITextFieldStyles>;\r\n  firstContainer: Partial<IComboBoxStyles>;\r\n}\r\n\r\nexport const getSelectUserPanelStyles = (): ISelectUserPanelStyles => ({\r\n  footer: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  combobox: {\r\n    root: { margin: \"5px\" },\r\n  },\r\n  firstRoot: {\r\n    root: {\r\n      flexGrow: \"1\",\r\n      flexShrink: \"1\",\r\n    },\r\n  },\r\n  firstContainer: {\r\n    container: {\r\n      flexGrow: \"1\",\r\n      flexShrink: \"1\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ISelectUserPanelClassNames {\r\n  wrapper: string;\r\n}\r\n\r\nexport const selectUserPanelClassNames = memoizeFunction(\r\n  (): ISelectUserPanelClassNames => {\r\n    return mergeStyleSets({\r\n      wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n        margin: \"30px 5px\",\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  classNamesFunction,\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  Panel,\r\n  PrimaryButton,\r\n  TextField,\r\n  IconButton,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  selectUserPanelClassNames,\r\n  getSelectUserPanelStyles,\r\n  ISelectUserPanelClassNames,\r\n} from \"./SelectUserPanel.styles\";\r\nimport { map, find, filter, isEmpty } from \"lodash\";\r\nimport { IMahJongUser, createUser } from \"../Mahjong.model\";\r\nimport {\r\n  EditPlayersTitle,\r\n  CloseButton,\r\n  AddButton,\r\n  DeleteButton,\r\n  AddPlayerLabel,\r\n  DeletePlayerLabel,\r\n  OkButton,\r\n} from \"../../../localization/DisplayStrings\";\r\n\r\nexport interface SelectUserPanelProps {\r\n  isOpen: boolean;\r\n  onSave: (selectedPlayers: IMahJongUser[]) => void;\r\n  onDelete: (player: IMahJongUser) => void;\r\n  onAdd: (player: IMahJongUser) => void;\r\n  allPlayers: IMahJongUser[];\r\n  currentPlayers: IMahJongUser[];\r\n}\r\n\r\nexport function SelectUserPanel(props: SelectUserPanelProps): JSX.Element {\r\n  const classNames = classNamesFunction<{}, ISelectUserPanelClassNames>()(\r\n    selectUserPanelClassNames\r\n  );\r\n  const styles = getSelectUserPanelStyles();\r\n\r\n  const { isOpen, onSave, onDelete, onAdd, allPlayers, currentPlayers } = props;\r\n  const [selectedPlayers, setSelectedPlayers] = React.useState<IMahJongUser[]>(\r\n    []\r\n  );\r\n  const [newPlayerName, setNewPlayerName] = React.useState(\"\");\r\n  const [userToDelete, setUserToDelete] = React.useState<IMahJongUser | null>(\r\n    null\r\n  );\r\n\r\n  useEffect((): void => {\r\n    const selected = [...currentPlayers];\r\n    let i = selected.length;\r\n    for (i; i < 4; i++) {\r\n      selected.push(createUser(\"\"));\r\n    }\r\n    setSelectedPlayers(selected);\r\n  }, [currentPlayers]);\r\n\r\n  const onChange = (selectedIndex: number) => (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    const selected = [...selectedPlayers];\r\n    if (selected.length > selectedIndex) {\r\n      selected[selectedIndex] = option?.data || createUser(\"\");\r\n    }\r\n    setSelectedPlayers(selected);\r\n  };\r\n\r\n  const onSaveClicked = () => {\r\n    onSave(\r\n      filter(\r\n        selectedPlayers,\r\n        (user: IMahJongUser): boolean => !isEmpty(user.name)\r\n      )\r\n    );\r\n  };\r\n\r\n  const options = [\r\n    { key: \"_\", text: \"\" },\r\n    ...map(\r\n      allPlayers,\r\n      (user: IMahJongUser): IComboBoxOption => {\r\n        return { key: user.id, text: user.name, data: user };\r\n      }\r\n    ),\r\n  ];\r\n\r\n  const filteredOptions = (user: IMahJongUser): IComboBoxOption[] => {\r\n    const filtered = filter(options, (option: IComboBoxOption): boolean => {\r\n      return (\r\n        option.key === user.id ||\r\n        !find(\r\n          selectedPlayers,\r\n          (selected: IMahJongUser): boolean => option.key === selected.id\r\n        )\r\n      );\r\n    });\r\n    return filtered.length === 1 ? [] : filtered;\r\n  };\r\n\r\n  const renderComboBox = (user: IMahJongUser, key: number): JSX.Element => (\r\n    <ComboBox\r\n      key={key}\r\n      aria-label=\"\"\r\n      selectedKey={user.id}\r\n      autoComplete=\"on\"\r\n      options={filteredOptions(user)}\r\n      onChange={onChange(key)}\r\n      styles={styles.combobox}\r\n    />\r\n  );\r\n\r\n  const allComboboxes = map(\r\n    selectedPlayers,\r\n    (user: IMahJongUser, index: number): JSX.Element =>\r\n      renderComboBox(user, index)\r\n  );\r\n\r\n  const onNameChange = (\r\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    newValue?: string\r\n  ) => {\r\n    setNewPlayerName(newValue || \"\");\r\n  };\r\n  const onAddName = () => {\r\n    if (!isEmpty(newPlayerName)) {\r\n      onAdd(createUser(newPlayerName));\r\n    }\r\n  };\r\n\r\n  const renderAddTextbox = (): JSX.Element => {\r\n    return (\r\n      <div className={classNames.wrapper}>\r\n        <TextField\r\n          label={AddPlayerLabel()}\r\n          value={newPlayerName}\r\n          onChange={onNameChange}\r\n          styles={styles.firstRoot}\r\n        />\r\n        <IconButton\r\n          iconProps={{ iconName: \"Add\" }}\r\n          onClick={onAddName}\r\n          title={AddButton()}\r\n          ariaLabel={AddButton()}\r\n          disabled={isEmpty(newPlayerName)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onDeleteUserChange = (\r\n    event: React.FormEvent<IComboBox>,\r\n    option?: IComboBoxOption\r\n  ) => {\r\n    setUserToDelete(option?.data);\r\n  };\r\n  const onDeleteUserClicked = () => {\r\n    if (userToDelete) {\r\n      onDelete(userToDelete);\r\n    }\r\n  };\r\n\r\n  const renderDeleteCombobox = (): JSX.Element => {\r\n    return (\r\n      <div className={classNames.wrapper}>\r\n        <ComboBox\r\n          label={DeletePlayerLabel()}\r\n          aria-label=\"\"\r\n          autoComplete=\"on\"\r\n          selectedKey={userToDelete?.id}\r\n          options={options.length === 1 ? [] : options}\r\n          onChange={onDeleteUserChange}\r\n          styles={styles.firstContainer}\r\n        />\r\n        <IconButton\r\n          iconProps={{ iconName: \"Delete\" }}\r\n          onClick={onDeleteUserClicked}\r\n          title={DeleteButton()}\r\n          ariaLabel={DeleteButton()}\r\n          disabled={isEmpty(userToDelete?.id)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // <DefaultButton styles={styles.footer} onClick={onCancel}>{CancelButton()}</DefaultButton>;\r\n  const onRenderFooterContent = () => (\r\n    <div>\r\n      <PrimaryButton styles={styles.footer} onClick={onSaveClicked}>\r\n        {OkButton()}\r\n      </PrimaryButton>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={isOpen}\r\n        onDismiss={onSaveClicked}\r\n        headerText={EditPlayersTitle()}\r\n        closeButtonAriaLabel={CloseButton()}\r\n        onRenderFooterContent={onRenderFooterContent}\r\n        isFooterAtBottom={true}\r\n      >\r\n        {allComboboxes}\r\n        {renderAddTextbox()}\r\n        {renderDeleteCombobox()}\r\n      </Panel>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ICommandBarStyles,\r\n  IStackStyles,\r\n  memoizeFunction,\r\n  mergeStyleSets,\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport interface IMahjongDetailsStyles {\r\n  commandBar: ICommandBarStyles;\r\n  dashboard: IStackStyles;\r\n}\r\n\r\nexport const getMahjongDetailsStyles = (): IMahjongDetailsStyles => ({\r\n  commandBar: {\r\n    root: {\r\n      padding: \"5px\",\r\n    },\r\n  },\r\n  dashboard: {\r\n    root: { padding: \"24px 0 0 0\" },\r\n  },\r\n});\r\n\r\nexport interface IMahjongDetailsClassNames {\r\n  page: string;\r\n}\r\n\r\nexport const mahjongDetailsClassNames = memoizeFunction(\r\n  (): IMahjongDetailsClassNames => {\r\n    return mergeStyleSets({\r\n      page: {\r\n        overflow: \"auto\",\r\n        // background: '#F8F8F9'\r\n      },\r\n    });\r\n  }\r\n);\r\n","import {\r\n  CommandBar,\r\n  ICommandBarItemProps,\r\n  classNamesFunction,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  mahjongDetailsClassNames,\r\n  getMahjongDetailsStyles,\r\n  IMahjongDetailsClassNames,\r\n} from \"./MahjongDetails.styles\";\r\nimport { BackButton } from \"../../../localization/DisplayStrings\";\r\nimport {\r\n  updateScore,\r\n  selectCurrentGame,\r\n} from \"../overview/MahjongOverviewSlice\";\r\nimport { IMahJongUser, IMahJongScore, getScore } from \"../Mahjong.model\";\r\n\r\nexport interface MahjongDetailsProps {\r\n  user: IMahJongUser;\r\n  onNavigateBack: () => void;\r\n}\r\n\r\nexport function MahjongDetails(props: MahjongDetailsProps): JSX.Element {\r\n  const classNames = classNamesFunction<{}, IMahjongDetailsClassNames>()(\r\n    mahjongDetailsClassNames\r\n  );\r\n  const styles = useMemo(() => getMahjongDetailsStyles(), undefined);\r\n\r\n  const { user, onNavigateBack } = props;\r\n\r\n  const currentGame = useSelector(selectCurrentGame);\r\n  const [userScore, setUserScore] = React.useState<IMahJongScore | undefined>(\r\n    undefined\r\n  );\r\n\r\n  // const allPlayers = useSelector(selectPlayers);\r\n  // const currentPlayers = useSelector(selectCurrentPlayers);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  // const onSave = (selectedPlayers: IMahJongUser[]): void => {\r\n  //   dispatch(updateScore(selectedPlayers));\r\n  //   setIsPlayerSelectOpen(false);\r\n  // };\r\n\r\n  useEffect((): void => {\r\n    if (user && currentGame) {\r\n      setUserScore(getScore(currentGame, user));\r\n    }\r\n  }, [user, currentGame]);\r\n\r\n  const dispatch = useDispatch();\r\n  const closeDetails = () => {\r\n    if (userScore) {\r\n      dispatch(updateScore(userScore));\r\n    }\r\n    onNavigateBack();\r\n  };\r\n\r\n  const items: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"Back\",\r\n      name: BackButton(),\r\n      iconProps: {\r\n        iconName: \"Back\",\r\n      },\r\n      onClick: closeDetails,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classNames.page}>\r\n      <CommandBar items={items} styles={styles.commandBar} />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  CommandBar,\r\n  ICommandBarItemProps,\r\n  classNamesFunction,\r\n  CompoundButton,\r\n  Persona,\r\n  PersonaSize,\r\n  List,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  mahjongOverviewClassNames,\r\n  getMahjongOverviewStyles,\r\n  IMahjongOverviewClassNames,\r\n} from \"./MahjongOverview.styles\";\r\nimport {\r\n  HomeButton,\r\n  EditPlayersButton,\r\n  CurrentScore,\r\n  GameScore,\r\n} from \"../../../localization/DisplayStrings\";\r\nimport { navigate, Page } from \"../../main/MainSlice\";\r\nimport {\r\n  load,\r\n  selectPlayers,\r\n  selectCurrentPlayers,\r\n  setUsers,\r\n  addUser,\r\n  deleteUser,\r\n  selectCurrentGame,\r\n} from \"./MahjongOverviewSlice\";\r\nimport { IMahJongUser } from \"../Mahjong.model\";\r\nimport { UserList } from \"../users/UserList\";\r\nimport { SelectUserPanel } from \"../userPanel/SelectUserPanel\";\r\nimport { MahjongDetails } from \"../details/MahjongDetails\";\r\n\r\nexport function MahjongOverview(): JSX.Element {\r\n  const classNames = classNamesFunction<{}, IMahjongOverviewClassNames>()(\r\n    mahjongOverviewClassNames\r\n  );\r\n  const styles = getMahjongOverviewStyles();\r\n\r\n  const [isPlayerSelectOpen, setIsPlayerSelectOpen] = React.useState(false);\r\n  const [currentPlayer, setCurrentPlayer] = React.useState<\r\n    IMahJongUser | undefined\r\n  >(undefined);\r\n\r\n  const allPlayers = useSelector(selectPlayers);\r\n  const currentPlayers = useSelector(selectCurrentPlayers);\r\n  const players = useSelector(selectCurrentPlayers);\r\n  const game = useSelector(selectCurrentGame);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect((): void => {\r\n    dispatch(load());\r\n  }, [dispatch]);\r\n\r\n  const onSaveSelectedPlayers = (selectedPlayers: IMahJongUser[]): void => {\r\n    dispatch(setUsers(selectedPlayers));\r\n    setIsPlayerSelectOpen(false);\r\n  };\r\n  const onAddPlayer = (player: IMahJongUser): void => {\r\n    dispatch(addUser(player));\r\n  };\r\n  const onDeletePlayer = (player: IMahJongUser): void => {\r\n    dispatch(deleteUser(player));\r\n  };\r\n  const onOpenSelectedPlayers = () => setIsPlayerSelectOpen(true);\r\n\r\n  const openPlayer = (item?: IMahJongUser) => () => {\r\n    setCurrentPlayer(item);\r\n  };\r\n\r\n  const items: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"Back\",\r\n      name: HomeButton(),\r\n      iconProps: {\r\n        iconName: \"Home\",\r\n      },\r\n      onClick: () => {\r\n        dispatch(navigate(Page.Main));\r\n      },\r\n    },\r\n    {\r\n      key: \"Select\",\r\n      name: EditPlayersButton(),\r\n      iconProps: {\r\n        iconName: \"People\",\r\n      },\r\n      ariaLabel: EditPlayersButton(),\r\n      onClick: onOpenSelectedPlayers,\r\n    },\r\n  ];\r\n\r\n  const onRenderCell = (item?: IMahJongUser): JSX.Element => {\r\n    return (\r\n      <CompoundButton styles={styles.listItem} onClick={openPlayer(item)}>\r\n        <Persona\r\n          text={item?.name}\r\n          secondaryText={CurrentScore(7)}\r\n          tertiaryText={GameScore(42)}\r\n          optionalText={\"\"}\r\n          size={PersonaSize.size72}\r\n        />\r\n      </CompoundButton>\r\n    );\r\n  };\r\n\r\n  if (currentPlayer) {\r\n    return (\r\n      <MahjongDetails\r\n        user={currentPlayer}\r\n        onNavigateBack={() => setCurrentPlayer(undefined)}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classNames.page}>\r\n      <CommandBar items={items} styles={styles.commandBar} />\r\n      <SelectUserPanel\r\n        isOpen={isPlayerSelectOpen}\r\n        onSave={onSaveSelectedPlayers}\r\n        onDelete={onDeletePlayer}\r\n        onAdd={onAddPlayer}\r\n        allPlayers={allPlayers}\r\n        currentPlayers={currentPlayers}\r\n      />\r\n      <List\r\n        className={classNames.list}\r\n        items={players}\r\n        onRenderCell={onRenderCell}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { navigate, selectPage, Page } from \"./MainSlice\";\r\nimport { Nav } from \"office-ui-fabric-react\";\r\nimport { MahJongTitle } from \"../../localization/DisplayStrings\";\r\nimport { MahjongOverview } from \"../mahjong/overview/MahjongOverview\";\r\n\r\nexport function MainPage() {\r\n  const page = useSelector(selectPage);\r\n  const dispatch = useDispatch();\r\n\r\n  switch (page) {\r\n    case Page.MahJong:\r\n      return <MahjongOverview />;\r\n    case Page.Main:\r\n      return (\r\n        <Nav\r\n          selectedKey=\"key0\"\r\n          ariaLabel=\"Nav basic example\"\r\n          groups={[\r\n            {\r\n              links: [\r\n                {\r\n                  name: MahJongTitle(),\r\n                  url: \"\",\r\n                  key: \"key0\",\r\n                  target: \"_blank\",\r\n                  onClick: () => {\r\n                    dispatch(navigate(Page.MahJong));\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n  }\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport mainReducer from '../pages/main/MainSlice';\r\nimport overviewReducer from '../pages/mahjong/overview/MahjongOverviewSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    main: mainReducer,\r\n    mahjongOverview: overviewReducer\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { MainPage } from './pages/main/Main';\r\nimport { initializeIcons, loadTheme } from 'office-ui-fabric-react';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from 'office-ui-fabric-react/lib/Foundation';\r\n\r\nconst myTheme = loadTheme({\r\n  palette: {\r\n      themePrimary: '#2266e3',\r\n      themeLighterAlt: '#f5f8fe',\r\n      themeLighter: '#d8e4fb',\r\n      themeLight: '#b8cef7',\r\n      themeTertiary: '#759fee',\r\n      themeSecondary: '#3a76e6',\r\n      themeDarkAlt: '#1f5bcc',\r\n      themeDark: '#1a4dac',\r\n      themeDarker: '#13397f',\r\n      neutralLighterAlt: '#faf9f8',\r\n      neutralLighter: '#f3f2f1',\r\n      neutralLight: '#edebe9',\r\n      neutralQuaternaryAlt: '#e1dfdd',\r\n      neutralQuaternary: '#d0d0d0',\r\n      neutralTertiaryAlt: '#c8c6c4',\r\n      neutralTertiary: '#a19f9d',\r\n      neutralSecondary: '#605e5c',\r\n      neutralPrimaryAlt: '#3b3a39',\r\n      neutralPrimary: '#323130',\r\n      neutralDark: '#201f1e',\r\n      black: '#000000',\r\n      white: '#ffffff'\r\n  }\r\n});\r\n\r\nconst App = (): JSX.Element => {\r\n  useEffect(() => {\r\n    initializeIcons();\r\n    // initializeTheme();\r\n  });\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={myTheme}>\r\n          <MainPage />\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  );\r\n\r\n};\r\n\r\n// function initializeTheme(): void {\r\n//   if (!environment.production && !window[GlobalObjects.theme]) {\r\n//       window[GlobalObjects.theme] = myTheme;\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}